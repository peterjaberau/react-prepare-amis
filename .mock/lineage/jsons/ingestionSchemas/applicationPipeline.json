{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ApplicationPipeline",
  "description": "Application Pipeline Configuration.",
  "type": "object",
  "definitions": {
    "applicationConfigType": {
      "description": "Pipeline Source Config For Application Pipeline type. Nothing is required.",
      "type": "string",
      "enum": [
        "Application"
      ],
      "default": "Application"
    }
  },
  "properties": {
    "type": {
      "description": "Pipeline type",
      "$ref": "#/definitions/applicationConfigType",
      "default": "Application"
    },
    "sourcePythonClass": {
      "description": "Source Python Class Name to run the application",
      "type": "string"
    },
    "appConfig": {
      "description": "Application configuration",
      "oneOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "CollateAIAppConfig",
          "description": "Configuration for the CollateAI External Application.",
          "type": "object",
          "javaType": "org.openmetadata.schema.entity.app.external.CollateAIAppConfig",
          "definitions": {
            "collateAIAppType": {
              "description": "Application type.",
              "type": "string",
              "enum": [
                "CollateAI"
              ],
              "default": "CollateAI"
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/0/definitions/collateAIAppType",
              "default": "CollateAI"
            },
            "filter": {
              "title": "Filter",
              "description": "Query filter to be passed to ES. E.g., `{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"should\":[{\"term\":{\"domain.displayName.keyword\":\"DG Anim\"}}]}}]}}}`. This is the same payload as in the Explore page.",
              "type": "string"
            },
            "patchIfEmpty": {
              "title": "Patch Description If Empty",
              "description": "Patch the description if it is empty, instead of raising a suggestion",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [
            "filter"
          ]
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "AutomatorAppConfig",
          "description": "Configuration for the Automator External Application.",
          "type": "object",
          "javaType": "org.openmetadata.schema.entity.app.external.AutomatorAppConfig",
          "definitions": {
            "automatorAppType": {
              "description": "Application type.",
              "type": "string",
              "enum": [
                "Automator"
              ],
              "default": "Automator"
            },
            "resource": {
              "description": "Entities selected to run the automation.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of the entity. E.g., 'table', 'chart',...",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "queryFilter": {
                  "description": "Query filter to be passed to ES. E.g., `{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"should\":[{\"term\":{\"domain.displayName.keyword\":\"DG Anim\"}}]}}]}}}`. This is the same payload as in the Explore page.",
                  "type": "string"
                }
              }
            },
            "action": {
              "description": "Action to take on those entities. E.g., propagate description through lineage, auto tagging, etc.",
              "oneOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddTagsAction",
                  "description": "Apply Tags to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "addTagsActionType": {
                      "description": "Add Tags action type.",
                      "type": "string",
                      "enum": [
                        "AddTagsAction"
                      ],
                      "default": "AddTagsAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/definitions/addTagsActionType",
                      "default": "AddTagsAction"
                    },
                    "tags": {
                      "description": "Tags to apply",
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "TagLabel",
                        "description": "This schema defines the type for labeling an entity with a Tag.",
                        "type": "object",
                        "javaType": "org.openmetadata.schema.type.TagLabel",
                        "definitions": {
                          "tagFQN": {
                            "type": "string"
                          },
                          "TagSource": {
                            "type": "string",
                            "default": "Classification",
                            "enum": [
                              "Classification",
                              "Glossary"
                            ]
                          }
                        },
                        "properties": {
                          "tagFQN": {
                            "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/tags/items/definitions/tagFQN"
                          },
                          "name": {
                            "description": "Name of the tag or glossary term.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Display Name that identifies this tag.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description for the tag label.",
                            "$comment": "@om-field-type",
                            "type": "string"
                          },
                          "style": {
                            "description": "UI Style is used to associate a color code and/or icon to entity to customize the look of that entity in UI.",
                            "type": "object",
                            "javaType": "org.openmetadata.schema.entity.type.Style",
                            "properties": {
                              "color": {
                                "description": "Hex Color Code to mark an entity such as GlossaryTerm, Tag, Domain or Data Product.",
                                "type": "string"
                              },
                              "iconURL": {
                                "description": "An icon to associate with GlossaryTerm, Tag, Domain or Data Product.",
                                "type": "string",
                                "format": "url"
                              }
                            },
                            "additionalProperties": false
                          },
                          "source": {
                            "description": "Label is from Tags or Glossary.",
                            "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/tags/items/definitions/TagSource"
                          },
                          "labelType": {
                            "description": "Label type describes how a tag label was applied. 'Manual' indicates the tag label was applied by a person. 'Derived' indicates a tag label was derived using the associated tag relationship (see Classification.json for more details). 'Propagated` indicates a tag label was propagated from upstream based on lineage. 'Automated' is used when a tool was used to determine the tag label.",
                            "type": "string",
                            "enum": [
                              "Manual",
                              "Propagated",
                              "Automated",
                              "Derived"
                            ],
                            "default": "Manual"
                          },
                          "state": {
                            "description": "'Suggested' state is used when a tag label is suggested by users or tools. Owner of the entity must confirm the suggested labels before it is marked as 'Confirmed'.",
                            "type": "string",
                            "enum": [
                              "Suggested",
                              "Confirmed"
                            ],
                            "default": "Confirmed"
                          },
                          "href": {
                            "description": "Link to the tag resource.",
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "required": [
                          "tagFQN",
                          "source",
                          "labelType",
                          "state"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "applyToChildren": {
                      "title": "Apply to Children",
                      "description": "Apply tags to the children of the selected assets that match the criteria. E.g., columns, tasks, topic fields,...",
                      "type": "array",
                      "items": {
                        "description": "Name that identifies an entity.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256,
                        "pattern": "^((?!::).)*$"
                      },
                      "default": null
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update tags even if they are already defined in the asset. By default, incoming tags are merged with the existing ones.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "tags"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveTagsAction",
                  "description": "Remove Tags Action Type",
                  "type": "object",
                  "definitions": {
                    "removeTagsActionType": {
                      "description": "Remove Tags Action Type.",
                      "type": "string",
                      "enum": [
                        "RemoveTagsAction"
                      ],
                      "default": "RemoveTagsAction"
                    },
                    "labelType": {
                      "description": "Remove tags by its label type",
                      "type": "string",
                      "enum": [
                        "Manual",
                        "Propagated",
                        "Automated"
                      ]
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/1/definitions/removeTagsActionType",
                      "default": "AddTagsAction"
                    },
                    "tags": {
                      "description": "Tags to remove",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/tags/items"
                      }
                    },
                    "labels": {
                      "description": "Remove tags by its label type",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/1/definitions/labelType"
                      },
                      "default": null
                    },
                    "applyToChildren": {
                      "title": "Apply to Children",
                      "description": "Remove tags from the children of the selected assets. E.g., columns, tasks, topic fields,...",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/applyToChildren/items"
                      },
                      "default": null
                    },
                    "applyToAll": {
                      "title": "Apply to All",
                      "description": "Remove tags from all the children and parent of the selected assets.",
                      "type": "boolean",
                      "default": null
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddDomainAction",
                  "description": "Add an owner to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "addDomainActionType": {
                      "description": "Add Owner Action Type.",
                      "type": "string",
                      "enum": [
                        "AddDomainAction"
                      ],
                      "default": "AddDomainAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/2/definitions/addDomainActionType",
                      "default": "AddDomainAction"
                    },
                    "domain": {
                      "description": "Domain to apply",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/14/properties/dataProducts/items"
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the domain even if it is defined in the asset. By default, we will only apply the domain to assets without domain.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "domain"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveDomainAction",
                  "description": "Remove Owner Action Type",
                  "type": "object",
                  "definitions": {
                    "removeDomainActionType": {
                      "description": "Remove Domain Action Type",
                      "type": "string",
                      "enum": [
                        "RemoveDomainAction"
                      ],
                      "default": "RemoveDomainAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/3/definitions/removeDomainActionType",
                      "default": "RemoveDomainAction"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddDescriptionAction",
                  "description": "Apply Tags to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "addDescriptionActionType": {
                      "description": "Add Description Action Type.",
                      "type": "string",
                      "enum": [
                        "AddDescriptionAction"
                      ],
                      "default": "AddDescriptionAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/4/definitions/addDescriptionActionType",
                      "default": "AddDescriptionAction"
                    },
                    "description": {
                      "description": "Description to apply",
                      "type": "string"
                    },
                    "applyToChildren": {
                      "title": "Apply to Children",
                      "description": "Apply the description to the children of the selected assets that match the criteria. E.g., columns, tasks, topic fields,...",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/applyToChildren/items"
                      },
                      "default": null
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the description even if they are already defined in the asset. By default, we'll only add the descriptions to assets without the description set.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "description"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddCustomPropertiesAction",
                  "description": "Add a Custom Property to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "AddCustomPropertiesActionType": {
                      "description": "Add Custom Properties Action Type.",
                      "type": "string",
                      "enum": [
                        "AddCustomPropertiesAction"
                      ],
                      "default": "AddCustomPropertiesAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/5/definitions/AddCustomPropertiesActionType",
                      "default": "AddCustomPropertiesAction"
                    },
                    "customProperties": {
                      "description": "Owners to apply",
                      "default": null
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the Custom Property even if it is defined in the asset. By default, we will only apply the owners to assets without the given Custom Property informed.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "customProperties"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveDescriptionAction",
                  "description": "Remove Owner Action Type",
                  "type": "object",
                  "definitions": {
                    "removeDescriptionActionType": {
                      "description": "Remove Description Action Type",
                      "type": "string",
                      "enum": [
                        "RemoveDescriptionAction"
                      ],
                      "default": "RemoveDescriptionAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/6/definitions/removeDescriptionActionType",
                      "default": "RemoveDescriptionAction"
                    },
                    "applyToChildren": {
                      "title": "Apply to Children",
                      "description": "Remove descriptions from the children of the selected assets. E.g., columns, tasks, topic fields,...",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/applyToChildren/items"
                      },
                      "default": null
                    },
                    "applyToAll": {
                      "title": "Apply to All",
                      "description": "Remove descriptions from all the children and parent of the selected assets.",
                      "type": "boolean",
                      "default": null
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddTierAction",
                  "description": "Add an owner to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "addTierActionType": {
                      "description": "Add Tier Action Type.",
                      "type": "string",
                      "enum": [
                        "AddTierAction"
                      ],
                      "default": "AddTierAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/7/definitions/addTierActionType",
                      "default": "AddTierAction"
                    },
                    "tier": {
                      "description": "tier to apply",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/tags/items"
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the tier even if it is defined in the asset. By default, we will only apply the tier to assets without tier.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "tier"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveTierAction",
                  "description": "Remove Owner Action Type",
                  "type": "object",
                  "definitions": {
                    "removeTierActionType": {
                      "description": "Remove Tier Action Type",
                      "type": "string",
                      "enum": [
                        "RemoveTierAction"
                      ],
                      "default": "RemoveTierAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/8/definitions/removeTierActionType",
                      "default": "RemoveTierAction"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddTestCaseAction",
                  "description": "Add Test Cases to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "addTestCaseActionType": {
                      "description": "Add Test Case Action Type.",
                      "type": "string",
                      "enum": [
                        "AddTestCaseAction"
                      ],
                      "default": "AddTestCaseAction"
                    },
                    "testCaseDefinitions": {
                      "description": "Minimum set of requirements to get a Test Case request ready",
                      "type": "object",
                      "properties": {
                        "testDefinition": {
                          "description": "Fully qualified name of the test definition.",
                          "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/10/properties/testCaseDefinitions/items"
                        },
                        "parameterValues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "javaType": "org.openmetadata.schema.tests.TestCaseParameterValue",
                            "description": "This schema defines the parameter values that can be passed for a Test Case.",
                            "properties": {
                              "name": {
                                "description": "name of the parameter. Must match the parameter names in testCaseParameterDefinition",
                                "type": "string"
                              },
                              "value": {
                                "description": "value to be passed for the Parameters. These are input from Users. We capture this in string and convert during the runtime.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "computePassedFailedRowCount": {
                          "description": "Compute the passed and failed row count for the test case.",
                          "type": "boolean",
                          "default": false
                        },
                        "useDynamicAssertion": {
                          "description": "If the test definition supports it, use dynamic assertion to evaluate the test case.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/9/definitions/addTestCaseActionType",
                      "default": "AddTestCaseAction"
                    },
                    "testCases": {
                      "description": "Test Cases to apply",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/9/definitions/testCaseDefinitions"
                      }
                    },
                    "applyToChildren": {
                      "title": "Apply to Children",
                      "description": "Add tests to the selected table columns",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/applyToChildren/items"
                      },
                      "default": null
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the test even if it is defined in the asset. By default, we will only apply the test to assets without the existing test already existing.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "testCases"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveTestCaseAction",
                  "description": "Remove Test Cases Action Type",
                  "type": "object",
                  "definitions": {
                    "removeTestCaseActionType": {
                      "description": "Remove Test Case Action Type",
                      "type": "string",
                      "enum": [
                        "RemoveTestCaseAction"
                      ],
                      "default": "RemoveTestCaseAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/10/definitions/removeTestCaseActionType",
                      "default": "RemoveTestCaseAction"
                    },
                    "testCaseDefinitions": {
                      "description": "Test Cases to remove",
                      "type": "array",
                      "items": {
                        "description": "A unique name that identifies an entity. Example for table 'DatabaseService.Database.Schema.Table'.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 3072
                      }
                    },
                    "applyToChildren": {
                      "title": "Apply to Children",
                      "description": "Remove tests to the selected table columns",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/0/properties/applyToChildren/items"
                      },
                      "default": null
                    },
                    "removeAll": {
                      "title": "Remove All",
                      "description": "Remove all test cases",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddOwnerAction",
                  "description": "Add owners to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "addOwnerActionType": {
                      "description": "Add Owner Action Type.",
                      "type": "string",
                      "enum": [
                        "AddOwnerAction"
                      ],
                      "default": "AddOwnerAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/11/definitions/addOwnerActionType",
                      "default": "AddOwnerAction"
                    },
                    "owners": {
                      "description": "Owners to apply",
                      "default": null,
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "Entity Reference List",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/14/properties/dataProducts/items"
                      }
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the owners even if it is defined in the asset. By default, we will only apply the owners to assets without owner.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "owners"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveOwnerAction",
                  "description": "Remove Owner Action Type",
                  "type": "object",
                  "definitions": {
                    "removeOwnerActionType": {
                      "description": "Remove Owner Action Type",
                      "type": "string",
                      "enum": [
                        "RemoveOwnerAction"
                      ],
                      "default": "RemoveOwnerAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/12/definitions/removeOwnerActionType",
                      "default": "RemoveOwnerAction"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveCustomPropertiesAction",
                  "description": "Remove Custom Properties Action Type",
                  "type": "object",
                  "definitions": {
                    "removeCustomPropertiesActionType": {
                      "description": "Remove Custom Properties Action Type.",
                      "type": "string",
                      "enum": [
                        "RemoveCustomPropertiesAction"
                      ],
                      "default": "RemoveCustomPropertiesAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/13/definitions/removeCustomPropertiesActionType",
                      "default": "removeCustomPropertiesActionType"
                    },
                    "customProperties": {
                      "description": "Custom Properties keys to remove",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "customProperties"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "AddDataProductAction",
                  "description": "Add a Data Product to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "AddDataProductActionType": {
                      "description": "Add Data Products Action Type.",
                      "type": "string",
                      "enum": [
                        "AddDataProductAction"
                      ],
                      "default": "AddDataProductAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/14/definitions/AddDataProductActionType",
                      "default": "AddDataProductAction"
                    },
                    "dataProducts": {
                      "description": "Data Products to apply",
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Entity Reference",
                        "description": "This schema defines the EntityReference type used for referencing an entity. EntityReference is used for capturing relationships from one entity to another. For example, a table has an attribute called database of type EntityReference that captures the relationship of a table `belongs to a` database.",
                        "type": "object",
                        "javaType": "org.openmetadata.schema.type.EntityReference",
                        "properties": {
                          "id": {
                            "description": "Unique identifier that identifies an entity instance.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "type": {
                            "description": "Entity type/class name - Examples: `database`, `table`, `metrics`, `databaseService`, `dashboardService`...",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the entity instance.",
                            "type": "string"
                          },
                          "fullyQualifiedName": {
                            "description": "Fully qualified name of the entity instance. For entities such as tables, databases fullyQualifiedName is returned in this field. For entities that don't have name hierarchy such as `user` and `team` this will be same as the `name` field.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Optional description of entity.",
                            "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/7/properties/tier/properties/description"
                          },
                          "displayName": {
                            "description": "Display Name that identifies this entity.",
                            "type": "string"
                          },
                          "deleted": {
                            "description": "If true the entity referred to has been soft-deleted.",
                            "type": "boolean"
                          },
                          "inherited": {
                            "description": "If true the relationship indicated by this entity reference is inherited from the parent entity.",
                            "type": "boolean"
                          },
                          "href": {
                            "description": "Link to the entity resource.",
                            "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/7/properties/tier/properties/href"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ],
                        "additionalProperties": false
                      },
                      "default": null
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update the Data Product even if the asset belongs to a different Domain. By default, we will only add the Data Product if the asset has no Domain, or it belongs to the same domain as the Data Product.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type",
                    "dataProducts"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "RemoveDataProductAction",
                  "description": "Remove a Data Product to the selected assets.",
                  "type": "object",
                  "definitions": {
                    "RemoveDataProductActionType": {
                      "description": "Remove Data Products Action Type.",
                      "type": "string",
                      "enum": [
                        "RemoveDataProductAction"
                      ],
                      "default": "RemoveDataProductAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/15/definitions/RemoveDataProductActionType",
                      "default": "RemoveDataProductAction"
                    },
                    "dataProducts": {
                      "description": "Data Products to remove",
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/14/properties/dataProducts/items"
                      },
                      "default": null
                    }
                  },
                  "required": [
                    "type",
                    "dataProducts"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "LineagePropagationAction",
                  "description": "Propagate description, tags and glossary terms via lineage",
                  "type": "object",
                  "definitions": {
                    "lineagePropagationActionType": {
                      "description": "Lineage propagation action type.",
                      "type": "string",
                      "enum": [
                        "LineagePropagationAction"
                      ],
                      "default": "LineagePropagationAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/16/definitions/lineagePropagationActionType",
                      "default": "LineagePropagationAction"
                    },
                    "propagateDescription": {
                      "title": "Propagate Description",
                      "description": "Propagate description through lineage",
                      "type": "boolean",
                      "default": true
                    },
                    "propagateTags": {
                      "title": "Propagate Tags",
                      "description": "Propagate tags through lineage",
                      "type": "boolean",
                      "default": true
                    },
                    "propagateGlossaryTerms": {
                      "title": "Propagate Glossary Terms",
                      "description": "Propagate glossary terms through lineage",
                      "type": "boolean",
                      "default": true
                    },
                    "propagateTier": {
                      "title": "Propagate Tier",
                      "description": "Propagate tier from the parent",
                      "type": "boolean",
                      "default": false
                    },
                    "propagateOwner": {
                      "title": "Propagate Owner",
                      "description": "Propagate owner from the parent",
                      "type": "boolean",
                      "default": false
                    },
                    "propagateColumnLevel": {
                      "title": "Propagate Column Level",
                      "description": "Propagate the metadata to columns via column-level lineage.",
                      "type": "boolean",
                      "default": true
                    },
                    "propagateParent": {
                      "title": "Propagate Parent",
                      "description": "Propagate the metadata to the parents (e.g., tables) via lineage.",
                      "type": "boolean",
                      "default": false
                    },
                    "overwriteMetadata": {
                      "title": "Overwrite Metadata",
                      "description": "Update descriptions, tags and Glossary Terms via lineage even if they are already defined in the asset. By default, descriptions are only updated if they are not already defined in the asset, and incoming tags are merged with the existing ones.",
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "MLTaggingAction",
                  "description": "ML Tagging action configuration for external automator.",
                  "type": "object",
                  "definitions": {
                    "mlTaggingActionType": {
                      "description": "ML PII Tagging action type.",
                      "type": "string",
                      "enum": [
                        "MLTaggingAction"
                      ],
                      "default": "MLTaggingAction"
                    }
                  },
                  "properties": {
                    "type": {
                      "title": "Application Type",
                      "description": "Application Type",
                      "$ref": "#/properties/appConfig/oneOf/1/definitions/action/oneOf/17/definitions/mlTaggingActionType",
                      "default": "MLTaggingAction"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/1/definitions/automatorAppType",
              "default": "Automator"
            },
            "resources": {
              "description": "Entities selected to run the automation.",
              "$ref": "#/properties/appConfig/oneOf/1/definitions/resource"
            },
            "actions": {
              "description": "Action to take on those entities. E.g., propagate description through lineage, auto tagging, etc.",
              "type": "array",
              "items": {
                "$ref": "#/properties/appConfig/oneOf/1/definitions/action"
              }
            }
          },
          "required": [
            "type",
            "resources",
            "actions"
          ],
          "additionalProperties": false
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "SlackAppTokenConfiguration",
          "description": "This schema defines the Slack App Token Configuration",
          "type": "object",
          "javaType": "org.openmetadata.schema.entity.applications.configuration.SlackAppTokenConfiguration",
          "properties": {
            "userToken": {
              "title": "User Token",
              "description": "User Token",
              "type": "string",
              "format": "password"
            },
            "botToken": {
              "title": "Bot Token",
              "description": "Bot Token",
              "type": "string",
              "format": "password"
            }
          },
          "additionalProperties": false,
          "required": [
            "userToken",
            "botToken"
          ]
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "DataInsightsAppConfig",
          "description": "No configuration needed to instantiate the Data Insights Pipeline. The logic is handled in the backend.",
          "type": "object",
          "definitions": {
            "dataInsightsAppType": {
              "description": "Application Type",
              "type": "string",
              "enum": [
                "DataInsights"
              ],
              "default": "DataInsights"
            },
            "backfillConfiguration": {
              "description": "Backfill Configuration",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "description": "Enable Backfill for the configured dates",
                  "type": "boolean"
                },
                "startDate": {
                  "title": "Start Date",
                  "description": "Date from which to start the backfill",
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "title": "End Date",
                  "description": "Date for which the backfill will end",
                  "type": "string",
                  "format": "date"
                }
              }
            },
            "dataAssetsConfig": {
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "description": "If Enabled, Data Asset insights will be populated when the App runs.",
                  "type": "boolean",
                  "default": true
                },
                "entities": {
                  "description": "List of Entities to Reindex",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [
                    "all"
                  ],
                  "uniqueItems": true
                },
                "retention": {
                  "title": "Data Retention (Days)",
                  "description": "Defines the number of days the Data Assets Insights information will be kept. After it they will be deleted.",
                  "type": "integer",
                  "default": 7
                },
                "serviceFilter": {
                  "type": "object",
                  "properties": {
                    "serviceType": {
                      "type": "string"
                    },
                    "serviceName": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "default": null
                }
              },
              "additionalProperties": false,
              "required": [
                "enabled"
              ]
            },
            "appAnalyticsConfig": {
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "description": "If Enabled, App Analytics insights will be populated when the App runs.",
                  "type": "boolean",
                  "default": true
                }
              },
              "additionalProperties": false,
              "required": [
                "enabled"
              ]
            },
            "dataQualityConfig": {
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "description": "If Enabled, Data Quality insights will be populated when the App runs.",
                  "type": "boolean",
                  "default": true
                }
              },
              "additionalProperties": false,
              "required": [
                "enabled"
              ]
            },
            "costAnalysisConfig": {
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "description": "If Enabled, Cost Analysis insights will be populated when the App runs.",
                  "type": "boolean",
                  "default": true
                }
              },
              "additionalProperties": false,
              "required": [
                "enabled"
              ]
            },
            "moduleConfiguration": {
              "description": "Different Module Configurations",
              "title": "Module Configuration",
              "type": "object",
              "properties": {
                "dataAssets": {
                  "title": "Data Assets Module",
                  "description": "Data Assets Insights Module configuration",
                  "$ref": "#/properties/appConfig/oneOf/3/definitions/dataAssetsConfig"
                },
                "appAnalytics": {
                  "title": "App Analytics Module",
                  "description": "App Analytics Module configuration",
                  "$ref": "#/properties/appConfig/oneOf/3/definitions/appAnalyticsConfig"
                },
                "dataQuality": {
                  "title": "Data Quality Insights Module",
                  "description": "Data Quality Insights Module configuration",
                  "$ref": "#/properties/appConfig/oneOf/3/definitions/dataQualityConfig"
                },
                "costAnalysis": {
                  "title": "Cost Analysis Insights Module",
                  "description": "Cost Analysis Insights Module configuration",
                  "$ref": "#/properties/appConfig/oneOf/3/definitions/costAnalysisConfig"
                }
              },
              "additionalProperties": false,
              "required": [
                "dataAssets",
                "appAnalytics",
                "dataQuality",
                "costAnalysis"
              ]
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/3/definitions/dataInsightsAppType",
              "default": "DataInsights"
            },
            "batchSize": {
              "description": "Maximum number of events processed at a time (Default 100).",
              "type": "integer",
              "default": 100
            },
            "recreateDataAssetsIndex": {
              "title": "Recreate DataInsights DataAssets Index",
              "description": "Recreates the DataAssets index on DataInsights. Useful if you changed a Custom Property Type and are facing errors. Bear in mind that recreating the index will delete your DataAssets and a backfill will be needed.",
              "type": "boolean",
              "default": false
            },
            "backfillConfiguration": {
              "$ref": "#/properties/appConfig/oneOf/3/definitions/backfillConfiguration"
            },
            "moduleConfiguration": {
              "$ref": "#/properties/appConfig/oneOf/3/definitions/moduleConfiguration"
            }
          },
          "additionalProperties": false
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "DataInsightsReportAppConfig",
          "description": "This schema defines configuration for Data Insights Report Application.",
          "definitions": {
            "dataInsightsReportAppType": {
              "description": "Application type.",
              "type": "string",
              "enum": [
                "DataInsightsReport"
              ],
              "default": "DataInsightsReport"
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/4/definitions/dataInsightsReportAppType",
              "default": "DataInsightsReport"
            },
            "sendToAdmins": {
              "title": "Send To Admins",
              "type": "boolean",
              "default": true
            },
            "sendToTeams": {
              "title": "Send To Teams",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "SearchIndexingApp",
          "type": "object",
          "description": "Search Indexing App.",
          "definitions": {
            "searchIndexingType": {
              "description": "Application type.",
              "type": "string",
              "enum": [
                "SearchIndexing"
              ],
              "default": "SearchIndexing"
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/5/definitions/searchIndexingType",
              "default": "SearchIndexing"
            },
            "entities": {
              "description": "List of Entities to Reindex",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "all"
              ],
              "uniqueItems": true
            },
            "recreateIndex": {
              "description": "This schema publisher run modes.",
              "type": "boolean",
              "default": false
            },
            "batchSize": {
              "description": "Maximum number of events sent in a batch (Default 100).",
              "type": "integer",
              "default": 100
            },
            "payLoadSize": {
              "description": "Maximum number of events sent in a batch (Default 100).",
              "type": "integer",
              "existingJavaType": "java.lang.Long",
              "default": 104857600
            },
            "producerThreads": {
              "title": "Number of Producer Threads",
              "description": "Number of threads to use for reindexing",
              "type": "integer",
              "default": 10
            },
            "consumerThreads": {
              "title": "Number of Consumer Threads",
              "description": "Number of threads to use for reindexing",
              "type": "integer",
              "default": 10
            },
            "maxConcurrentRequests": {
              "title": "Max Concurrent Requests",
              "description": "Maximum number of concurrent requests to the search index",
              "type": "integer",
              "default": 100
            },
            "maxRetries": {
              "title": "Max Retries",
              "description": "Maximum number of retries for a failed request",
              "type": "integer",
              "default": 3
            },
            "initialBackoff": {
              "title": "Initial Backoff Millis",
              "description": "Initial backoff time in milliseconds",
              "type": "integer",
              "default": 1000
            },
            "maxBackoff": {
              "title": "Max Backoff Millis",
              "description": "Maximum backoff time in milliseconds",
              "type": "integer",
              "default": 10000
            },
            "queueSize": {
              "title": "Queue Size to use.",
              "description": "Queue Size to user internally for reindexing.",
              "type": "integer",
              "default": 100
            },
            "searchIndexMappingLanguage": {
              "description": "Recreate Indexes with updated Language",
              "javaType": "org.openmetadata.schema.type.IndexMappingLanguage",
              "type": "string",
              "enum": [
                "EN",
                "JP",
                "ZH"
              ],
              "default": "EN"
            }
          },
          "additionalProperties": false
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "CollateAIQualityAgentAppConfig.json",
          "description": "Configuration for the Collate AI Quality Agent.",
          "type": "object",
          "javaType": "org.openmetadata.schema.entity.app.internal.CollateAIQualityAgentAppConfig",
          "definitions": {
            "collateAIQualityAgentAppType": {
              "description": "Application type.",
              "type": "string",
              "enum": [
                "CollateAIQualityAgent"
              ],
              "default": "CollateAIQualityAgent"
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/6/definitions/collateAIQualityAgentAppType",
              "default": "CollateAIQualityAgent"
            },
            "filter": {
              "title": "Filter",
              "description": "Query filter to be passed to ES. E.g., `{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"should\":[{\"term\":{\"domain.displayName.keyword\":\"DG Anim\"}}]}}]}}}`. This is the same payload as in the Explore page.",
              "type": "string"
            },
            "active": {
              "title": "Active",
              "description": "Whether the suggested tests should be active or not upon suggestion",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [
            "filter"
          ]
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Retention Configuration",
          "description": "Configure retention policies for each entity.",
          "properties": {
            "changeEventRetentionPeriod": {
              "title": "Change Event Retention Period (days)",
              "description": "Enter the retention period for change event records in days (e.g., 7 for one week, 30 for one month).",
              "type": "integer",
              "default": 7,
              "minimum": 1
            }
          },
          "required": [
            "changeEventRetentionPeriod"
          ],
          "additionalProperties": false
        },
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "DayOneExperienceAppConfig",
          "description": "Configuration for the Day One Experience Flow.",
          "type": "object",
          "javaType": "org.openmetadata.schema.entity.app.internal.DayOneExperienceAppConfig",
          "definitions": {
            "dayOneExperienceAppType": {
              "description": "Application type.",
              "type": "string",
              "enum": [
                "DayOneExperienceApplication"
              ],
              "default": "DayOneExperienceApplication"
            }
          },
          "properties": {
            "type": {
              "title": "Application Type",
              "description": "Application Type",
              "$ref": "#/properties/appConfig/oneOf/8/definitions/dayOneExperienceAppType",
              "default": "DayOneExperienceApplication"
            },
            "active": {
              "title": "Active",
              "description": "Whether the Day One Experience flow should be active or not.",
              "type": "boolean",
              "default": true
            },
            "entityLink": {
              "title": "Service Entity Link",
              "description": "Service Entity Link for which to trigger the application.",
              "type": "string",
              "pattern": "(?U)^<#E::\\w+::(?:[^:<>|]|:[^:<>|])+(?:::(?:[^:<>|]|:[^:<>|])+)*>$"
            }
          },
          "additionalProperties": false,
          "required": [
            "active"
          ]
        }
      ]
    },
    "appPrivateConfig": {
      "description": "Application private configuration",
      "oneOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "CollateAIAppPrivateConfig",
          "description": "Private Configuration for the CollateAI External Application.",
          "type": "object",
          "javaType": "org.openmetadata.schema.entity.app.external.CollateAIAppPrivateConfig",
          "properties": {
            "waiiInstance": {
              "title": "WAII Instance",
              "description": "WAII API host URL",
              "type": "string",
              "format": "URI",
              "default": "https://tweakit.waii.ai/api/"
            },
            "collateURL": {
              "title": "Collate URL",
              "description": "Collate Server public URL. WAII will use this information to interact with the server. E.g., https://sandbox.getcollate.io",
              "type": "string",
              "format": "URI"
            },
            "token": {
              "title": "WAII API Token",
              "description": "WAII API Token",
              "type": "string",
              "format": "password"
            },
            "limits": {
              "title": "Limits",
              "description": "Limits for the CollateAI Application.",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "javaType": "io.collate.schema.entity.app.Limits",
              "definitions": {
                "actions": {
                  "title": "Actions",
                  "javaType": "io.collate.schema.entity.app.LimitActions",
                  "description": "The action and its limit.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "description": "Limit for the named action."
                  }
                }
              },
              "properties": {
                "actions": {
                  "title": "Actions",
                  "description": "The records of the limits.",
                  "$ref": "#/properties/appPrivateConfig/oneOf/0/properties/limits/definitions/actions"
                },
                "billingCycleStart": {
                  "title": "Cycle Start",
                  "description": "The start of this limit cycle.",
                  "type": "string",
                  "format": "date"
                }
              },
              "additionalProperties": false,
              "required": [
                "actions",
                "billingCycleStart"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "waiiInstance",
            "collateURL",
            "token",
            "limits"
          ]
        }
      ]
    }
  },
  "additionalProperties": false
}