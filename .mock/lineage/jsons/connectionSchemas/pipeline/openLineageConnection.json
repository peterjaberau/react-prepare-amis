{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OpenLineageConnection",
  "description": "OpenLineage Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.pipeline.OpenLineageConnection",
  "definitions": {
    "OpenLineageType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "OpenLineage"
      ],
      "default": "OpenLineage"
    }
  },
  "properties": {
    "type": {
      "description": "Service Type",
      "default": "OpenLineage",
      "type": "string",
      "enum": [
        "OpenLineage"
      ]
    },
    "brokersUrl": {
      "title": "Kafka brokers list",
      "description": "service type of the messaging source",
      "type": "string"
    },
    "topicName": {
      "title": "Topic Name",
      "description": "topic from where Open lineage events will be pulled ",
      "type": "string"
    },
    "consumerGroupName": {
      "title": "Consumer Group",
      "description": "consumer group name ",
      "type": "string"
    },
    "consumerOffsets": {
      "title": "Initial consumer offsets",
      "description": "initial Kafka consumer offset",
      "default": "earliest",
      "type": "string",
      "enum": [
        "earliest",
        "latest"
      ],
      "javaEnums": [
        {
          "name": "earliest"
        },
        {
          "name": "latest"
        }
      ]
    },
    "poolTimeout": {
      "title": "Single pool call timeout",
      "description": "max allowed wait time",
      "type": "number",
      "default": 1
    },
    "sessionTimeout": {
      "title": "Broker inactive session timeout",
      "description": "max allowed inactivity time",
      "type": "integer",
      "default": 30
    },
    "securityProtocol": {
      "title": "Kafka security protocol",
      "description": "Kafka security protocol config",
      "default": "PLAINTEXT",
      "type": "string",
      "enum": [
        "PLAINTEXT",
        "SSL",
        "SASL_SSL"
      ],
      "javaEnums": [
        {
          "name": "PLAINTEXT"
        },
        {
          "name": "SSL"
        },
        {
          "name": "SASL_SSL"
        }
      ]
    },
    "sslConfig": {
      "title": "SSL",
      "description": "SSL Configuration details.",
      "javaType": "org.openmetadata.schema.security.ssl.SSLConfig",
      "mask": true,
      "oneOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Validate SSL Client Config",
          "description": "OpenMetadata Client configured to validate SSL certificates.",
          "type": "object",
          "javaType": "org.openmetadata.schema.security.ssl.ValidateSSLClientConfig",
          "additionalProperties": false,
          "properties": {
            "caCertificate": {
              "title": "CA Certificate",
              "description": "The CA certificate used for SSL validation.",
              "type": "string",
              "format": "password",
              "accept": [
                ".pem",
                ".crt",
                ".cer",
                ".der",
                ".p12"
              ],
              "uiFieldType": "file"
            },
            "sslCertificate": {
              "title": "SSL Certificate",
              "description": "The SSL certificate used for client authentication.",
              "type": "string",
              "format": "password",
              "accept": [
                ".pem",
                ".crt",
                ".cer",
                ".der",
                ".p12"
              ],
              "uiFieldType": "file"
            },
            "sslKey": {
              "title": "SSL Key",
              "description": "The private key associated with the SSL certificate.",
              "type": "string",
              "format": "password",
              "accept": [
                ".pem",
                ".crt",
                ".cer",
                ".der",
                ".p12"
              ],
              "uiFieldType": "file"
            }
          }
        }
      ]
    },
    "saslConfig": {
      "title": "SASL",
      "description": "SASL Configuration details.",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "javaType": "org.openmetadata.schema.security.sasl.SASLClientConfig",
      "additionalProperties": false,
      "properties": {
        "saslMechanism": {
          "title": "SASL Mechanism",
          "description": "SASL security mechanism",
          "default": "PLAIN",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "javaType": "org.openmetadata.schema.services.connections.messaging.SaslMechanismType",
          "type": "string",
          "enum": [
            "PLAIN",
            "GSSAPI",
            "SCRAM-SHA-256",
            "SCRAM-SHA-512",
            "OAUTHBEARER"
          ]
        },
        "saslUsername": {
          "title": "SASL Username",
          "description": "The SASL authentication username.",
          "type": "string"
        },
        "saslPassword": {
          "title": "SASL Password",
          "description": "The SASL authentication password.",
          "type": "string"
        }
      }
    },
    "pipelineFilterPattern": {
      "description": "Regex exclude pipelines.",
      "title": "Default Pipeline Filter Pattern",
      "type": "object",
      "javaType": "org.openmetadata.schema.metadataIngestion.FilterPattern",
      "properties": {
        "includes": {
          "description": "List of strings/regex patterns to match and include only database entities that match.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "excludes": {
          "description": "List of strings/regex patterns to match and exclude only database entities that match.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": false
    },
    "supportsMetadataExtraction": {
      "description": "Supports Metadata Extraction.",
      "type": "boolean",
      "default": true
    }
  },
  "additionalProperties": false
}