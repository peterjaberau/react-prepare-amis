{
  "miscAPI": {
    "fetchAuthenticationConfig": {
      "request": {},
      "response": {
        "data": {
          "clientType": "public",
          "provider": "basic",
          "responseType": "id_token",
          "providerName": "",
          "publicKeyUrls": ["http://localhost:8585/api/v1/system/config/jwks"],
          "tokenValidationAlgorithm": "RS256",
          "authority": "https://accounts.google.com",
          "clientId": "",
          "callbackUrl": "",
          "jwtPrincipalClaims": ["email", "preferred_username", "sub"],
          "jwtPrincipalClaimsMapping": [],
          "enableSelfSignup": true,
          "samlConfiguration": {
            "idp": {
              "authorityUrl": "http://localhost:8585/api/v1/saml/login",
              "nameId": "urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress"
            },
            "debugMode": false
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "351",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "method": "get",
          "url": "/system/config/auth",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "clientType": "public",
        "provider": "basic",
        "responseType": "id_token",
        "providerName": "",
        "publicKeyUrls": ["http://localhost:8585/api/v1/system/config/jwks"],
        "tokenValidationAlgorithm": "RS256",
        "authority": "https://accounts.google.com",
        "clientId": "",
        "callbackUrl": "",
        "jwtPrincipalClaims": ["email", "preferred_username", "sub"],
        "jwtPrincipalClaimsMapping": [],
        "enableSelfSignup": true,
        "samlConfiguration": {
          "idp": {
            "authorityUrl": "http://localhost:8585/api/v1/saml/login",
            "nameId": "urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress"
          },
          "debugMode": false
        }
      }
    },
    "fetchAuthorizerConfig": {
      "request": {},
      "response": {
        "data": {
          "className": "org.openmetadata.service.security.DefaultAuthorizer",
          "containerRequestFilter": "org.openmetadata.service.security.JwtFilter",
          "adminPrincipals": ["admin"],
          "testPrincipals": [],
          "allowedEmailRegistrationDomains": ["all"],
          "principalDomain": "open-metadata.org",
          "allowedDomains": [],
          "enforcePrincipalDomain": false,
          "enableSecureSocketConnection": false,
          "useRolesFromProvider": false
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "232",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "method": "get",
          "url": "/system/config/authorizer",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "className": "org.openmetadata.service.security.DefaultAuthorizer",
        "containerRequestFilter": "org.openmetadata.service.security.JwtFilter",
        "adminPrincipals": ["admin"],
        "testPrincipals": [],
        "allowedEmailRegistrationDomains": ["all"],
        "principalDomain": "open-metadata.org",
        "allowedDomains": [],
        "enforcePrincipalDomain": false,
        "enableSecureSocketConnection": false,
        "useRolesFromProvider": false
      }
    },
    "getVersion": {
      "request": {},
      "response": {
        "data": {
          "version": "1.6.0-SNAPSHOT",
          "revision": "f7dee0d659dca41d42830e42dca153a74994617d",
          "timestamp": 1743483098471
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "108",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "method": "get",
          "url": "/system/version",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "version": "1.6.0-SNAPSHOT",
        "revision": "f7dee0d659dca41d42830e42dca153a74994617d",
        "timestamp": 1743483098471
      }
    }
  },
  "searchApi": {
    "getNLPEnabledStatus": {
      "request": {},
      "response": {
        "data": false,
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "5",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "method": "get",
          "url": "/system/search/nlq",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": false
    },
    "searchQuery": {
      "request": {},
      "response": {
        "data": {
          "took": 14,
          "timed_out": false,
          "_shards": {
            "total": 1,
            "successful": 1,
            "skipped": 0,
            "failed": 0
          },
          "hits": {
            "total": {
              "value": 10,
              "relation": "eq"
            },
            "max_score": 1.64652,
            "hits": [
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "e8bffcf8-f66d-4bf7-9b02-3a02d8b631f6",
                "_score": 1.64652,
                "_source": {
                  "id": "e8bffcf8-f66d-4bf7-9b02-3a02d8b631f6",
                  "name": "customer_events",
                  "fullyQualifiedName": "sample_kafka.customer_events",
                  "description": "Kafka topic to capture the customer events such as location updates or profile updates",
                  "version": 0.1,
                  "updatedAt": 1743499293349,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"name\":\"Customer\",\"type\":\"record\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"address_line_1\",\"type\":\"string\"},{\"name\":\"address_line_2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"}]}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "Customer",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.customer_events.Customer",
                        "children": [
                          {
                            "name": "id",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.id"
                          },
                          {
                            "name": "first_name",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.first_name"
                          },
                          {
                            "name": "last_name",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.last_name"
                          },
                          {
                            "name": "email",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.email"
                          },
                          {
                            "name": "address_line_1",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.address_line_1"
                          },
                          {
                            "name": "address_line_2",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.address_line_2"
                          },
                          {
                            "name": "post_code",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.post_code"
                          },
                          {
                            "name": "country",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.customer_events.Customer.country"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 56,
                  "cleanupPolicies": ["delete"],
                  "replicationFactor": 2,
                  "maximumMessageSize": 167,
                  "retentionSize": 455858109,
                  "deleted": false,
                  "fieldNames": [
                    "Customer",
                    "Customer.id",
                    "Customer.first_name",
                    "Customer.last_name",
                    "Customer.email",
                    "Customer.address_line_1",
                    "Customer.address_line_2",
                    "Customer.post_code",
                    "Customer.country"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "customer_events",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.customer_events", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "Customer",
                      "weight": 5
                    },
                    {
                      "input": "Customer.id",
                      "weight": 5
                    },
                    {
                      "input": "Customer.first_name",
                      "weight": 5
                    },
                    {
                      "input": "Customer.last_name",
                      "weight": 5
                    },
                    {
                      "input": "Customer.email",
                      "weight": 5
                    },
                    {
                      "input": "Customer.address_line_1",
                      "weight": 5
                    },
                    {
                      "input": "Customer.address_line_2",
                      "weight": 5
                    },
                    {
                      "input": "Customer.post_code",
                      "weight": 5
                    },
                    {
                      "input": "Customer.country",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.d88a226df04cb00ce1c94b25cc8851df"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "616e9f24-34d5-4110-88ea-5b8773d6d64b",
                "_score": 1.64652,
                "_source": {
                  "id": "616e9f24-34d5-4110-88ea-5b8773d6d64b",
                  "name": "product_events",
                  "fullyQualifiedName": "sample_kafka.product_events",
                  "description": "Kafka topic to capture the product events. This topic will get updates on products decription, price etc.",
                  "version": 0.1,
                  "updatedAt": 1743499293428,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"product_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"sku\",\"type\":\"string\"},{\"name\":\"barcode\",\"type\":\"string\"},{\"name\":\"shop_id\",\"type\":\"int\"}]}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "Product",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.product_events.Product",
                        "children": [
                          {
                            "name": "product_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.product_events.Product.product_id"
                          },
                          {
                            "name": "title",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.product_events.Product.title"
                          },
                          {
                            "name": "price",
                            "dataType": "DOUBLE",
                            "dataTypeDisplay": "double",
                            "fullyQualifiedName": "sample_kafka.product_events.Product.price"
                          },
                          {
                            "name": "sku",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.product_events.Product.sku"
                          },
                          {
                            "name": "barcode",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.product_events.Product.barcode"
                          },
                          {
                            "name": "shop_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.product_events.Product.shop_id"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["delete"],
                  "replicationFactor": 4,
                  "maximumMessageSize": 208,
                  "retentionSize": 1068320655,
                  "deleted": false,
                  "fieldNames": [
                    "Product",
                    "Product.product_id",
                    "Product.title",
                    "Product.price",
                    "Product.sku",
                    "Product.barcode",
                    "Product.shop_id"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "product_events",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.product_events", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "Product",
                      "weight": 5
                    },
                    {
                      "input": "Product.product_id",
                      "weight": 5
                    },
                    {
                      "input": "Product.title",
                      "weight": 5
                    },
                    {
                      "input": "Product.price",
                      "weight": 5
                    },
                    {
                      "input": "Product.sku",
                      "weight": 5
                    },
                    {
                      "input": "Product.barcode",
                      "weight": 5
                    },
                    {
                      "input": "Product.shop_id",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.35a81643811df1a4e92f00ab5e5132ac"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "b0dfa0fd-0c66-45a4-a5ce-d8c7fb264811",
                "_score": 1.64652,
                "_source": {
                  "id": "b0dfa0fd-0c66-45a4-a5ce-d8c7fb264811",
                  "name": "shop_updates",
                  "fullyQualifiedName": "sample_kafka.shop_updates",
                  "description": "Kafka topic to get any shop updates such as new products, location",
                  "version": 0.1,
                  "updatedAt": 1743499293457,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Shop\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"}]}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "Shop",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.shop_updates.Shop",
                        "children": [
                          {
                            "name": "name",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_updates.Shop.name"
                          },
                          {
                            "name": "domain",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_updates.Shop.domain"
                          },
                          {
                            "name": "user_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_updates.Shop.user_id"
                          },
                          {
                            "name": "first_name",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_updates.Shop.first_name"
                          },
                          {
                            "name": "last_name",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_updates.Shop.last_name"
                          },
                          {
                            "name": "email",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_updates.Shop.email"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 16,
                  "cleanupPolicies": ["delete"],
                  "replicationFactor": 3,
                  "maximumMessageSize": 226,
                  "retentionSize": 213590548,
                  "deleted": false,
                  "fieldNames": [
                    "Shop",
                    "Shop.name",
                    "Shop.domain",
                    "Shop.user_id",
                    "Shop.first_name",
                    "Shop.last_name",
                    "Shop.email"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "shop_updates",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.shop_updates", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "Shop",
                      "weight": 5
                    },
                    {
                      "input": "Shop.name",
                      "weight": 5
                    },
                    {
                      "input": "Shop.domain",
                      "weight": 5
                    },
                    {
                      "input": "Shop.user_id",
                      "weight": 5
                    },
                    {
                      "input": "Shop.first_name",
                      "weight": 5
                    },
                    {
                      "input": "Shop.last_name",
                      "weight": 5
                    },
                    {
                      "input": "Shop.email",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.569ed10220f1af4fc9148a39a455a11c"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "c215ed1c-5920-4405-b21e-33161ce14727",
                "_score": 1.64652,
                "_source": {
                  "id": "c215ed1c-5920-4405-b21e-33161ce14727",
                  "name": "shop_products",
                  "fullyQualifiedName": "sample_kafka.shop_products",
                  "description": "Kafka topic to get products in a shop. This is constantly updating",
                  "version": 0.1,
                  "updatedAt": 1743499293481,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Shop\",\"fields\":[{\"name\":\"prodcut_id\",\"type\":\"int\"},{\"name\":\"product_variant_id\",\"type\":\"int\"},{\"name\":\"shop_id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"product_title\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"product_vendor\",\"type\":\"int\"},{\"name\":\"fulfillable_quantity\",\"type\":\"int\"},{\"name\":\"fulfilment_service\",\"type\":\"string\"}]}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "Shop",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.shop_products.Shop",
                        "children": [
                          {
                            "name": "prodcut_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.prodcut_id"
                          },
                          {
                            "name": "product_variant_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.product_variant_id"
                          },
                          {
                            "name": "shop_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.shop_id"
                          },
                          {
                            "name": "name",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.name"
                          },
                          {
                            "name": "product_title",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.product_title"
                          },
                          {
                            "name": "price",
                            "dataType": "DOUBLE",
                            "dataTypeDisplay": "double",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.price"
                          },
                          {
                            "name": "quantity",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.quantity"
                          },
                          {
                            "name": "product_vendor",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.product_vendor"
                          },
                          {
                            "name": "fulfillable_quantity",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.fulfillable_quantity"
                          },
                          {
                            "name": "fulfilment_service",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.shop_products.Shop.fulfilment_service"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["compact", "delete"],
                  "replicationFactor": 2,
                  "maximumMessageSize": 244,
                  "retentionSize": 1475079463,
                  "deleted": false,
                  "fieldNames": [
                    "Shop",
                    "Shop.prodcut_id",
                    "Shop.product_variant_id",
                    "Shop.shop_id",
                    "Shop.name",
                    "Shop.product_title",
                    "Shop.price",
                    "Shop.quantity",
                    "Shop.product_vendor",
                    "Shop.fulfillable_quantity",
                    "Shop.fulfilment_service"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "shop_products",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.shop_products", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "Shop",
                      "weight": 5
                    },
                    {
                      "input": "Shop.prodcut_id",
                      "weight": 5
                    },
                    {
                      "input": "Shop.product_variant_id",
                      "weight": 5
                    },
                    {
                      "input": "Shop.shop_id",
                      "weight": 5
                    },
                    {
                      "input": "Shop.name",
                      "weight": 5
                    },
                    {
                      "input": "Shop.product_title",
                      "weight": 5
                    },
                    {
                      "input": "Shop.price",
                      "weight": 5
                    },
                    {
                      "input": "Shop.quantity",
                      "weight": 5
                    },
                    {
                      "input": "Shop.product_vendor",
                      "weight": 5
                    },
                    {
                      "input": "Shop.fulfillable_quantity",
                      "weight": 5
                    },
                    {
                      "input": "Shop.fulfilment_service",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.47f14e2bafb8a5cd4eab9210f9835e69"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "0e006047-7865-4542-af24-84869a065054",
                "_score": 1.64652,
                "_source": {
                  "id": "0e006047-7865-4542-af24-84869a065054",
                  "name": "orders",
                  "fullyQualifiedName": "sample_kafka.orders",
                  "description": "All the order events on our online store",
                  "version": 0.1,
                  "updatedAt": 1743499293507,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"order_id\",\"type\":\"int\"},{\"name\":\"api_client_id\",\"type\":\"int\"},{\"name\":\"billing_address_id\",\"type\":\"int\"},{\"name\":\"customer_id\",\"type\":\"int\"},{\"name\":\"location_id\",\"type\":\"int\"},{\"name\":\"shipping_address_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"total_price\",\"type\":\"double\"},{\"name\":\"discount_code\",\"type\":\"string\"},{\"name\":\"processed_at\",\"type\":\"int\"}]}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "Order",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.orders.Order",
                        "children": [
                          {
                            "name": "order_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.order_id"
                          },
                          {
                            "name": "api_client_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.api_client_id"
                          },
                          {
                            "name": "billing_address_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.billing_address_id"
                          },
                          {
                            "name": "customer_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.customer_id"
                          },
                          {
                            "name": "location_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.location_id"
                          },
                          {
                            "name": "shipping_address_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.shipping_address_id"
                          },
                          {
                            "name": "user_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.user_id"
                          },
                          {
                            "name": "total_price",
                            "dataType": "DOUBLE",
                            "dataTypeDisplay": "double",
                            "fullyQualifiedName": "sample_kafka.orders.Order.total_price"
                          },
                          {
                            "name": "discount_code",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.orders.Order.discount_code"
                          },
                          {
                            "name": "processed_at",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.orders.Order.processed_at"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["compact"],
                  "replicationFactor": 3,
                  "maximumMessageSize": 61,
                  "retentionSize": 291959935,
                  "deleted": false,
                  "fieldNames": [
                    "Order",
                    "Order.order_id",
                    "Order.api_client_id",
                    "Order.billing_address_id",
                    "Order.customer_id",
                    "Order.location_id",
                    "Order.shipping_address_id",
                    "Order.user_id",
                    "Order.total_price",
                    "Order.discount_code",
                    "Order.processed_at"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "orders",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.orders", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "Order",
                      "weight": 5
                    },
                    {
                      "input": "Order.order_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.api_client_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.billing_address_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.customer_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.location_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.shipping_address_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.user_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.total_price",
                      "weight": 5
                    },
                    {
                      "input": "Order.discount_code",
                      "weight": 5
                    },
                    {
                      "input": "Order.processed_at",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.12c500ed0b7879105fb46af0f246be87"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "a4bc7b08-59d0-48d6-8a01-ef85f2ce6a51",
                "_score": 1.64652,
                "_source": {
                  "id": "a4bc7b08-59d0-48d6-8a01-ef85f2ce6a51",
                  "name": "sales",
                  "fullyQualifiedName": "sample_kafka.sales",
                  "description": "All sales related events gets captured in this topic",
                  "version": 0.1,
                  "updatedAt": 1743499293532,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"sale_id\",\"type\":\"int\"},{\"name\":\"billing_address_id\",\"type\":\"int\"},{\"name\":\"billing_address_id_2\",\"type\":\"int\"},{\"name\":\"api_client_id\",\"type\":\"int\"},{\"name\":\"customer_id\",\"type\":\"int\"},{\"name\":\"product_id\",\"type\":\"int\"},{\"name\":\"location_id\",\"type\":\"int\"},{\"name\":\"order_id\",\"type\":\"double\"}]}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "Order",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.sales.Order",
                        "children": [
                          {
                            "name": "sale_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.sale_id"
                          },
                          {
                            "name": "billing_address_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.billing_address_id"
                          },
                          {
                            "name": "billing_address_id_2",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.billing_address_id_2"
                          },
                          {
                            "name": "api_client_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.api_client_id"
                          },
                          {
                            "name": "customer_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.customer_id"
                          },
                          {
                            "name": "product_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.product_id"
                          },
                          {
                            "name": "location_id",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "fullyQualifiedName": "sample_kafka.sales.Order.location_id"
                          },
                          {
                            "name": "order_id",
                            "dataType": "DOUBLE",
                            "dataTypeDisplay": "double",
                            "fullyQualifiedName": "sample_kafka.sales.Order.order_id"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["compact", "delete"],
                  "replicationFactor": 4,
                  "maximumMessageSize": 249,
                  "retentionSize": 1931232624,
                  "deleted": false,
                  "fieldNames": [
                    "Order",
                    "Order.sale_id",
                    "Order.billing_address_id",
                    "Order.billing_address_id_2",
                    "Order.api_client_id",
                    "Order.customer_id",
                    "Order.product_id",
                    "Order.location_id",
                    "Order.order_id"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "sales",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.sales", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "Order",
                      "weight": 5
                    },
                    {
                      "input": "Order.sale_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.billing_address_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.billing_address_id_2",
                      "weight": 5
                    },
                    {
                      "input": "Order.api_client_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.customer_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.product_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.location_id",
                      "weight": 5
                    },
                    {
                      "input": "Order.order_id",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.9ed083b1436e5f40ef984b28255eef18"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "3ba71709-871b-43dd-9183-4e8b066b62fc",
                "_score": 1.64652,
                "_source": {
                  "id": "3ba71709-871b-43dd-9183-4e8b066b62fc",
                  "name": "avro_record",
                  "fullyQualifiedName": "sample_kafka.avro_record",
                  "description": "All Avro record related events gets captured in this topic",
                  "version": 0.1,
                  "updatedAt": 1743499293559,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\n    \"namespace\": \"openmetadata.kafka\",\n    \"name\": \"level\",\n    \"type\": \"record\",\n    \"doc\": \"This is a first level record\",\n    \"fields\": [\n        {\n            \"name\": \"uid\",\n            \"type\": \"int\",\n            \"doc\": \"The field represents unique id\"\n        },\n        {\n            \"name\": \"somefield\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"options\",\n            \"doc\": \"The field represents options array\",\n            \"type\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"record\",\n                    \"name\": \"lvl2_record\",\n                    \"doc\": \"The field represents a level 2 record\",\n                    \"fields\": [\n                        {\n                            \"name\": \"item1_lvl2\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"name\": \"item2_lvl2\",\n                            \"type\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"record\",\n                                    \"name\": \"lvl3_record\",\n                                    \"fields\": [\n                                        {\n                                            \"name\": \"item1_lvl3\",\n                                            \"type\": \"string\",\n                                            \"doc\": \"The field represents level3 item\"\n                                        },\n                                        {\n                                            \"name\": \"item2_lvl3\",\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
                    "schemaType": "Avro",
                    "schemaFields": [
                      {
                        "name": "level",
                        "dataType": "RECORD",
                        "description": "This is a first level record",
                        "fullyQualifiedName": "sample_kafka.avro_record.level",
                        "children": [
                          {
                            "name": "uid",
                            "dataType": "INT",
                            "dataTypeDisplay": "int",
                            "description": "The field represents unique id",
                            "fullyQualifiedName": "sample_kafka.avro_record.level.uid"
                          },
                          {
                            "name": "somefield",
                            "dataType": "STRING",
                            "dataTypeDisplay": "string",
                            "fullyQualifiedName": "sample_kafka.avro_record.level.somefield"
                          },
                          {
                            "name": "options",
                            "dataType": "ARRAY",
                            "dataTypeDisplay": "ARRAY<record>",
                            "description": "The field represents options array",
                            "fullyQualifiedName": "sample_kafka.avro_record.level.options",
                            "children": [
                              {
                                "name": "lvl2_record",
                                "dataType": "RECORD",
                                "description": "The field represents a level 2 record",
                                "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record",
                                "children": [
                                  {
                                    "name": "item1_lvl2",
                                    "dataType": "STRING",
                                    "dataTypeDisplay": "string",
                                    "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item1_lvl2"
                                  },
                                  {
                                    "name": "item2_lvl2",
                                    "dataType": "ARRAY",
                                    "dataTypeDisplay": "ARRAY<record>",
                                    "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2",
                                    "children": [
                                      {
                                        "name": "lvl3_record",
                                        "dataType": "RECORD",
                                        "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2.lvl3_record",
                                        "children": [
                                          {
                                            "name": "item1_lvl3",
                                            "dataType": "STRING",
                                            "dataTypeDisplay": "string",
                                            "description": "The field represents level3 item",
                                            "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2.lvl3_record.item1_lvl3"
                                          },
                                          {
                                            "name": "item2_lvl3",
                                            "dataType": "STRING",
                                            "dataTypeDisplay": "string",
                                            "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2.lvl3_record.item2_lvl3"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["compact", "delete"],
                  "replicationFactor": 4,
                  "maximumMessageSize": 249,
                  "retentionSize": 1931232624,
                  "deleted": false,
                  "fieldNames": [
                    "level",
                    "level.uid",
                    "level.somefield",
                    "level.options",
                    "options.lvl2_record",
                    "lvl2_record.item1_lvl2",
                    "lvl2_record.item2_lvl2",
                    "item2_lvl2.lvl3_record",
                    "lvl3_record.item1_lvl3",
                    "lvl3_record.item2_lvl3"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "avro_record",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.avro_record", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "level",
                      "weight": 5
                    },
                    {
                      "input": "level.uid",
                      "weight": 5
                    },
                    {
                      "input": "level.somefield",
                      "weight": 5
                    },
                    {
                      "input": "level.options",
                      "weight": 5
                    },
                    {
                      "input": "options.lvl2_record",
                      "weight": 5
                    },
                    {
                      "input": "lvl2_record.item1_lvl2",
                      "weight": 5
                    },
                    {
                      "input": "lvl2_record.item2_lvl2",
                      "weight": 5
                    },
                    {
                      "input": "item2_lvl2.lvl3_record",
                      "weight": 5
                    },
                    {
                      "input": "lvl3_record.item1_lvl3",
                      "weight": 5
                    },
                    {
                      "input": "lvl3_record.item2_lvl3",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.e3881dae749c51a55f3b9e15b2f81c4e"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "f580bee3-aa63-4794-9f3f-96374c09b1d0",
                "_score": 1.64652,
                "_source": {
                  "id": "f580bee3-aa63-4794-9f3f-96374c09b1d0",
                  "name": "json_schema_record",
                  "fullyQualifiedName": "sample_kafka.json_schema_record",
                  "description": "All Json Schema record related events gets captured in this topic",
                  "version": 0.1,
                  "updatedAt": 1743499293609,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "{\"type\":\"object\",\"required\":[\"name\",\"age\",\"club_name\"],\"properties\":{\"name\":{\"type\":\"object\",\"required\":[\"first_name\",\"last_name\"],\"properties\":{\"first_name\":{\"type\":\"string\"},\"last_name\":{\"type\":\"string\"}}},\"age\":{\"type\":\"integer\"},\"club_name\":{\"type\":\"string\"}}}",
                    "schemaType": "JSON",
                    "schemaFields": [
                      {
                        "name": "default",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.json_schema_record.default",
                        "children": [
                          {
                            "name": "name",
                            "dataType": "RECORD",
                            "fullyQualifiedName": "sample_kafka.json_schema_record.default.name",
                            "children": [
                              {
                                "name": "first_name",
                                "dataType": "STRING",
                                "fullyQualifiedName": "sample_kafka.json_schema_record.default.name.first_name"
                              },
                              {
                                "name": "last_name",
                                "dataType": "STRING",
                                "fullyQualifiedName": "sample_kafka.json_schema_record.default.name.last_name"
                              }
                            ]
                          },
                          {
                            "name": "age",
                            "dataType": "INT",
                            "fullyQualifiedName": "sample_kafka.json_schema_record.default.age"
                          },
                          {
                            "name": "club_name",
                            "dataType": "STRING",
                            "fullyQualifiedName": "sample_kafka.json_schema_record.default.club_name"
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["compact", "delete"],
                  "replicationFactor": 4,
                  "maximumMessageSize": 249,
                  "retentionSize": 1931232624,
                  "deleted": false,
                  "fieldNames": [
                    "default",
                    "default.name",
                    "name.first_name",
                    "name.last_name",
                    "default.age",
                    "default.club_name"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "json_schema_record",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": [
                    "sample_kafka.json_schema_record",
                    "sample_kafka"
                  ],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "default",
                      "weight": 5
                    },
                    {
                      "input": "default.name",
                      "weight": 5
                    },
                    {
                      "input": "name.first_name",
                      "weight": 5
                    },
                    {
                      "input": "name.last_name",
                      "weight": 5
                    },
                    {
                      "input": "default.age",
                      "weight": 5
                    },
                    {
                      "input": "default.club_name",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.9cdf4e94449483952e30b3bfe5cbe5f4"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "3981d016-5061-4481-97a0-7cf26b62a696",
                "_score": 1.64652,
                "_source": {
                  "id": "3981d016-5061-4481-97a0-7cf26b62a696",
                  "name": "address_book",
                  "fullyQualifiedName": "sample_kafka.address_book",
                  "description": "All Protobuf record related events gets captured in this topic",
                  "version": 0.1,
                  "updatedAt": 1743499293689,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "messageSchema": {
                    "schemaText": "syntax = \"proto2\";\n\npackage tutorial;\n\nmessage Person {\n  optional string name = 1;\n  optional int32 id = 2;\n  optional string email = 3;\n\n  enum PhoneType {\n    MOBILE = 0;\n    HOME = 1;\n    WORK = 2;\n  }\n\n  message PhoneNumber {\n    optional string number = 1;\n    optional PhoneType type = 2 [default = HOME];\n  }\n\n  repeated PhoneNumber phones = 4;\n}\n\nmessage AddressBook {\n  repeated Person people = 1;\n}",
                    "schemaType": "Protobuf",
                    "schemaFields": [
                      {
                        "name": "AddressBook",
                        "dataType": "RECORD",
                        "fullyQualifiedName": "sample_kafka.address_book.AddressBook",
                        "children": [
                          {
                            "name": "people",
                            "dataType": "RECORD",
                            "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people",
                            "children": [
                              {
                                "name": "name",
                                "dataType": "STRING",
                                "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.name"
                              },
                              {
                                "name": "id",
                                "dataType": "INT",
                                "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.id"
                              },
                              {
                                "name": "email",
                                "dataType": "STRING",
                                "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.email"
                              },
                              {
                                "name": "phones",
                                "dataType": "RECORD",
                                "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.phones",
                                "children": [
                                  {
                                    "name": "number",
                                    "dataType": "STRING",
                                    "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.phones.number"
                                  },
                                  {
                                    "name": "type",
                                    "dataType": "ENUM",
                                    "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.phones.type"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "partitions": 128,
                  "cleanupPolicies": ["compact", "delete"],
                  "replicationFactor": 4,
                  "maximumMessageSize": 249,
                  "retentionSize": 1931232624,
                  "deleted": false,
                  "fieldNames": [
                    "AddressBook",
                    "AddressBook.people",
                    "people.name",
                    "people.id",
                    "people.email",
                    "people.phones",
                    "phones.number",
                    "phones.type"
                  ],
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "address_book",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": ["sample_kafka.address_book", "sample_kafka"],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [
                    {
                      "input": "AddressBook",
                      "weight": 5
                    },
                    {
                      "input": "AddressBook.people",
                      "weight": 5
                    },
                    {
                      "input": "people.name",
                      "weight": 5
                    },
                    {
                      "input": "people.id",
                      "weight": 5
                    },
                    {
                      "input": "people.email",
                      "weight": 5
                    },
                    {
                      "input": "people.phones",
                      "weight": 5
                    },
                    {
                      "input": "phones.number",
                      "weight": 5
                    },
                    {
                      "input": "phones.type",
                      "weight": 5
                    }
                  ],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.96e6da9a46e18122de3c60870babf489"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "_shard": "[topic_search_index][0]",
                "_node": "8pqEbE3TRPu1T5E3jveWGg",
                "_index": "topic_search_index",
                "_type": "_doc",
                "_id": "98b62193-59a6-40d0-822f-4bac8d2dc912",
                "_score": 1.64652,
                "_source": {
                  "id": "98b62193-59a6-40d0-822f-4bac8d2dc912",
                  "name": "customer_contacts",
                  "fullyQualifiedName": "sample_kafka.customer_contacts",
                  "description": "Kafka topic to capture the customer contacts such as email, phone",
                  "version": 0.1,
                  "updatedAt": 1743499293741,
                  "updatedBy": "admin",
                  "service": {
                    "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                    "type": "messagingService",
                    "name": "sample_kafka",
                    "fullyQualifiedName": "sample_kafka",
                    "displayName": "sample_kafka",
                    "deleted": false
                  },
                  "serviceType": "Kafka",
                  "partitions": 56,
                  "cleanupPolicies": ["delete"],
                  "replicationFactor": 2,
                  "maximumMessageSize": 167,
                  "retentionSize": 455858109,
                  "deleted": false,
                  "descriptionStatus": "COMPLETE",
                  "followers": [],
                  "displayName": "customer_contacts",
                  "entityType": "topic",
                  "totalVotes": 0,
                  "domain": null,
                  "owners": [],
                  "fqnParts": [
                    "sample_kafka.customer_contacts",
                    "sample_kafka"
                  ],
                  "tags": [],
                  "tier": null,
                  "field_suggest": [],
                  "service_suggest": [
                    {
                      "input": "sample_kafka",
                      "weight": 5
                    }
                  ],
                  "upstreamLineage": [],
                  "messageSchema": null,
                  "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.c0cd1e5f89ca7e06753d7fa1ff8f580f"
                },
                "_explanation": {
                  "value": 1.64652,
                  "description": "sum of:",
                  "details": [
                    {
                      "value": 1.6,
                      "description": "sum of:",
                      "details": [
                        {
                          "value": 1,
                          "description": "*:*",
                          "details": []
                        },
                        {
                          "value": 0.6,
                          "description": "function score, product of:",
                          "details": [
                            {
                              "value": 0.3,
                              "description": "*:*^0.3",
                              "details": []
                            },
                            {
                              "value": 2,
                              "description": "min of:",
                              "details": [
                                {
                                  "value": 2,
                                  "description": "function score, score mode [sum]",
                                  "details": [
                                    {
                                      "value": 2,
                                      "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                      "details": []
                                    }
                                  ]
                                },
                                {
                                  "value": 3.4028235e38,
                                  "description": "maxBoost",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": 0.046520013,
                      "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                      "details": [
                        {
                          "value": 0.046520013,
                          "description": "score(freq=1.0), computed as boost * idf * tf from:",
                          "details": [
                            {
                              "value": 2.2,
                              "description": "boost",
                              "details": []
                            },
                            {
                              "value": 0.046520017,
                              "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                              "details": [
                                {
                                  "value": 10,
                                  "description": "n, number of documents containing term",
                                  "details": []
                                },
                                {
                                  "value": 10,
                                  "description": "N, total number of documents with field",
                                  "details": []
                                }
                              ]
                            },
                            {
                              "value": 0.45454544,
                              "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                              "details": [
                                {
                                  "value": 1,
                                  "description": "freq, occurrences of term within document",
                                  "details": []
                                },
                                {
                                  "value": 1.2,
                                  "description": "k1, term saturation parameter",
                                  "details": []
                                },
                                {
                                  "value": 0.75,
                                  "description": "b, length normalization parameter",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "dl, length of field",
                                  "details": []
                                },
                                {
                                  "value": 1,
                                  "description": "avgdl, average length of field",
                                  "details": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "aggregations": {
            "sterms#serviceType": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": [
                {
                  "key": "kafka",
                  "doc_count": 10
                }
              ]
            },
            "sterms#databaseSchema.name.keyword": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#tags.tagFQN": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#databaseSchema.displayName": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#entityType": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": [
                {
                  "key": "topic",
                  "doc_count": 10
                }
              ]
            },
            "sterms#fieldNames": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#domain.displayName.keyword": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#tier.tagFQN": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#messageSchema.schemaFields.name.keyword": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": [
                {
                  "key": "order",
                  "doc_count": 2
                },
                {
                  "key": "shop",
                  "doc_count": 2
                },
                {
                  "key": "addressbook",
                  "doc_count": 1
                },
                {
                  "key": "customer",
                  "doc_count": 1
                },
                {
                  "key": "default",
                  "doc_count": 1
                },
                {
                  "key": "level",
                  "doc_count": 1
                },
                {
                  "key": "product",
                  "doc_count": 1
                }
              ]
            },
            "sterms#service.displayName.keyword": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": [
                {
                  "key": "sample_kafka",
                  "doc_count": 10
                }
              ]
            },
            "sterms#database.displayName": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#database.name.keyword": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#certification.tagLabel.tagFQN": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            },
            "sterms#owners.displayName.keyword": {
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
              "buckets": []
            }
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:20 GMT",
          "transfer-encoding": "chunked",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {
            "indexes": null
          },
          "params": {
            "index": "topic_search_index",
            "from": 0,
            "size": 10,
            "deleted": false
          },
          "method": "get",
          "url": "/search/query?q=",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "took": 14,
        "timed_out": false,
        "_shards": {
          "total": 1,
          "successful": 1,
          "skipped": 0,
          "failed": 0
        },
        "hits": {
          "total": {
            "value": 10,
            "relation": "eq"
          },
          "max_score": 1.64652,
          "hits": [
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "e8bffcf8-f66d-4bf7-9b02-3a02d8b631f6",
              "_score": 1.64652,
              "_source": {
                "id": "e8bffcf8-f66d-4bf7-9b02-3a02d8b631f6",
                "name": "customer_events",
                "fullyQualifiedName": "sample_kafka.customer_events",
                "description": "Kafka topic to capture the customer events such as location updates or profile updates",
                "version": 0.1,
                "updatedAt": 1743499293349,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"name\":\"Customer\",\"type\":\"record\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"address_line_1\",\"type\":\"string\"},{\"name\":\"address_line_2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"}]}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "Customer",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.customer_events.Customer",
                      "children": [
                        {
                          "name": "id",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.id"
                        },
                        {
                          "name": "first_name",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.first_name"
                        },
                        {
                          "name": "last_name",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.last_name"
                        },
                        {
                          "name": "email",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.email"
                        },
                        {
                          "name": "address_line_1",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.address_line_1"
                        },
                        {
                          "name": "address_line_2",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.address_line_2"
                        },
                        {
                          "name": "post_code",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.post_code"
                        },
                        {
                          "name": "country",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.customer_events.Customer.country"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 56,
                "cleanupPolicies": ["delete"],
                "replicationFactor": 2,
                "maximumMessageSize": 167,
                "retentionSize": 455858109,
                "deleted": false,
                "fieldNames": [
                  "Customer",
                  "Customer.id",
                  "Customer.first_name",
                  "Customer.last_name",
                  "Customer.email",
                  "Customer.address_line_1",
                  "Customer.address_line_2",
                  "Customer.post_code",
                  "Customer.country"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "customer_events",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.customer_events", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "Customer",
                    "weight": 5
                  },
                  {
                    "input": "Customer.id",
                    "weight": 5
                  },
                  {
                    "input": "Customer.first_name",
                    "weight": 5
                  },
                  {
                    "input": "Customer.last_name",
                    "weight": 5
                  },
                  {
                    "input": "Customer.email",
                    "weight": 5
                  },
                  {
                    "input": "Customer.address_line_1",
                    "weight": 5
                  },
                  {
                    "input": "Customer.address_line_2",
                    "weight": 5
                  },
                  {
                    "input": "Customer.post_code",
                    "weight": 5
                  },
                  {
                    "input": "Customer.country",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.d88a226df04cb00ce1c94b25cc8851df",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "616e9f24-34d5-4110-88ea-5b8773d6d64b",
              "_score": 1.64652,
              "_source": {
                "id": "616e9f24-34d5-4110-88ea-5b8773d6d64b",
                "name": "product_events",
                "fullyQualifiedName": "sample_kafka.product_events",
                "description": "Kafka topic to capture the product events. This topic will get updates on products decription, price etc.",
                "version": 0.1,
                "updatedAt": 1743499293428,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"product_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"sku\",\"type\":\"string\"},{\"name\":\"barcode\",\"type\":\"string\"},{\"name\":\"shop_id\",\"type\":\"int\"}]}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "Product",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.product_events.Product",
                      "children": [
                        {
                          "name": "product_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.product_events.Product.product_id"
                        },
                        {
                          "name": "title",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.product_events.Product.title"
                        },
                        {
                          "name": "price",
                          "dataType": "DOUBLE",
                          "dataTypeDisplay": "double",
                          "fullyQualifiedName": "sample_kafka.product_events.Product.price"
                        },
                        {
                          "name": "sku",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.product_events.Product.sku"
                        },
                        {
                          "name": "barcode",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.product_events.Product.barcode"
                        },
                        {
                          "name": "shop_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.product_events.Product.shop_id"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["delete"],
                "replicationFactor": 4,
                "maximumMessageSize": 208,
                "retentionSize": 1068320655,
                "deleted": false,
                "fieldNames": [
                  "Product",
                  "Product.product_id",
                  "Product.title",
                  "Product.price",
                  "Product.sku",
                  "Product.barcode",
                  "Product.shop_id"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "product_events",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.product_events", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "Product",
                    "weight": 5
                  },
                  {
                    "input": "Product.product_id",
                    "weight": 5
                  },
                  {
                    "input": "Product.title",
                    "weight": 5
                  },
                  {
                    "input": "Product.price",
                    "weight": 5
                  },
                  {
                    "input": "Product.sku",
                    "weight": 5
                  },
                  {
                    "input": "Product.barcode",
                    "weight": 5
                  },
                  {
                    "input": "Product.shop_id",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.35a81643811df1a4e92f00ab5e5132ac",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "b0dfa0fd-0c66-45a4-a5ce-d8c7fb264811",
              "_score": 1.64652,
              "_source": {
                "id": "b0dfa0fd-0c66-45a4-a5ce-d8c7fb264811",
                "name": "shop_updates",
                "fullyQualifiedName": "sample_kafka.shop_updates",
                "description": "Kafka topic to get any shop updates such as new products, location",
                "version": 0.1,
                "updatedAt": 1743499293457,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Shop\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"}]}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "Shop",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.shop_updates.Shop",
                      "children": [
                        {
                          "name": "name",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_updates.Shop.name"
                        },
                        {
                          "name": "domain",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_updates.Shop.domain"
                        },
                        {
                          "name": "user_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_updates.Shop.user_id"
                        },
                        {
                          "name": "first_name",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_updates.Shop.first_name"
                        },
                        {
                          "name": "last_name",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_updates.Shop.last_name"
                        },
                        {
                          "name": "email",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_updates.Shop.email"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 16,
                "cleanupPolicies": ["delete"],
                "replicationFactor": 3,
                "maximumMessageSize": 226,
                "retentionSize": 213590548,
                "deleted": false,
                "fieldNames": [
                  "Shop",
                  "Shop.name",
                  "Shop.domain",
                  "Shop.user_id",
                  "Shop.first_name",
                  "Shop.last_name",
                  "Shop.email"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "shop_updates",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.shop_updates", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "Shop",
                    "weight": 5
                  },
                  {
                    "input": "Shop.name",
                    "weight": 5
                  },
                  {
                    "input": "Shop.domain",
                    "weight": 5
                  },
                  {
                    "input": "Shop.user_id",
                    "weight": 5
                  },
                  {
                    "input": "Shop.first_name",
                    "weight": 5
                  },
                  {
                    "input": "Shop.last_name",
                    "weight": 5
                  },
                  {
                    "input": "Shop.email",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.569ed10220f1af4fc9148a39a455a11c",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "c215ed1c-5920-4405-b21e-33161ce14727",
              "_score": 1.64652,
              "_source": {
                "id": "c215ed1c-5920-4405-b21e-33161ce14727",
                "name": "shop_products",
                "fullyQualifiedName": "sample_kafka.shop_products",
                "description": "Kafka topic to get products in a shop. This is constantly updating",
                "version": 0.1,
                "updatedAt": 1743499293481,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Shop\",\"fields\":[{\"name\":\"prodcut_id\",\"type\":\"int\"},{\"name\":\"product_variant_id\",\"type\":\"int\"},{\"name\":\"shop_id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"product_title\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"product_vendor\",\"type\":\"int\"},{\"name\":\"fulfillable_quantity\",\"type\":\"int\"},{\"name\":\"fulfilment_service\",\"type\":\"string\"}]}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "Shop",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.shop_products.Shop",
                      "children": [
                        {
                          "name": "prodcut_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.prodcut_id"
                        },
                        {
                          "name": "product_variant_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.product_variant_id"
                        },
                        {
                          "name": "shop_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.shop_id"
                        },
                        {
                          "name": "name",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.name"
                        },
                        {
                          "name": "product_title",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.product_title"
                        },
                        {
                          "name": "price",
                          "dataType": "DOUBLE",
                          "dataTypeDisplay": "double",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.price"
                        },
                        {
                          "name": "quantity",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.quantity"
                        },
                        {
                          "name": "product_vendor",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.product_vendor"
                        },
                        {
                          "name": "fulfillable_quantity",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.fulfillable_quantity"
                        },
                        {
                          "name": "fulfilment_service",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.shop_products.Shop.fulfilment_service"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["compact", "delete"],
                "replicationFactor": 2,
                "maximumMessageSize": 244,
                "retentionSize": 1475079463,
                "deleted": false,
                "fieldNames": [
                  "Shop",
                  "Shop.prodcut_id",
                  "Shop.product_variant_id",
                  "Shop.shop_id",
                  "Shop.name",
                  "Shop.product_title",
                  "Shop.price",
                  "Shop.quantity",
                  "Shop.product_vendor",
                  "Shop.fulfillable_quantity",
                  "Shop.fulfilment_service"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "shop_products",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.shop_products", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "Shop",
                    "weight": 5
                  },
                  {
                    "input": "Shop.prodcut_id",
                    "weight": 5
                  },
                  {
                    "input": "Shop.product_variant_id",
                    "weight": 5
                  },
                  {
                    "input": "Shop.shop_id",
                    "weight": 5
                  },
                  {
                    "input": "Shop.name",
                    "weight": 5
                  },
                  {
                    "input": "Shop.product_title",
                    "weight": 5
                  },
                  {
                    "input": "Shop.price",
                    "weight": 5
                  },
                  {
                    "input": "Shop.quantity",
                    "weight": 5
                  },
                  {
                    "input": "Shop.product_vendor",
                    "weight": 5
                  },
                  {
                    "input": "Shop.fulfillable_quantity",
                    "weight": 5
                  },
                  {
                    "input": "Shop.fulfilment_service",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.47f14e2bafb8a5cd4eab9210f9835e69",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "0e006047-7865-4542-af24-84869a065054",
              "_score": 1.64652,
              "_source": {
                "id": "0e006047-7865-4542-af24-84869a065054",
                "name": "orders",
                "fullyQualifiedName": "sample_kafka.orders",
                "description": "All the order events on our online store",
                "version": 0.1,
                "updatedAt": 1743499293507,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"order_id\",\"type\":\"int\"},{\"name\":\"api_client_id\",\"type\":\"int\"},{\"name\":\"billing_address_id\",\"type\":\"int\"},{\"name\":\"customer_id\",\"type\":\"int\"},{\"name\":\"location_id\",\"type\":\"int\"},{\"name\":\"shipping_address_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"total_price\",\"type\":\"double\"},{\"name\":\"discount_code\",\"type\":\"string\"},{\"name\":\"processed_at\",\"type\":\"int\"}]}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "Order",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.orders.Order",
                      "children": [
                        {
                          "name": "order_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.order_id"
                        },
                        {
                          "name": "api_client_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.api_client_id"
                        },
                        {
                          "name": "billing_address_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.billing_address_id"
                        },
                        {
                          "name": "customer_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.customer_id"
                        },
                        {
                          "name": "location_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.location_id"
                        },
                        {
                          "name": "shipping_address_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.shipping_address_id"
                        },
                        {
                          "name": "user_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.user_id"
                        },
                        {
                          "name": "total_price",
                          "dataType": "DOUBLE",
                          "dataTypeDisplay": "double",
                          "fullyQualifiedName": "sample_kafka.orders.Order.total_price"
                        },
                        {
                          "name": "discount_code",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.orders.Order.discount_code"
                        },
                        {
                          "name": "processed_at",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.orders.Order.processed_at"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["compact"],
                "replicationFactor": 3,
                "maximumMessageSize": 61,
                "retentionSize": 291959935,
                "deleted": false,
                "fieldNames": [
                  "Order",
                  "Order.order_id",
                  "Order.api_client_id",
                  "Order.billing_address_id",
                  "Order.customer_id",
                  "Order.location_id",
                  "Order.shipping_address_id",
                  "Order.user_id",
                  "Order.total_price",
                  "Order.discount_code",
                  "Order.processed_at"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "orders",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.orders", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "Order",
                    "weight": 5
                  },
                  {
                    "input": "Order.order_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.api_client_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.billing_address_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.customer_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.location_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.shipping_address_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.user_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.total_price",
                    "weight": 5
                  },
                  {
                    "input": "Order.discount_code",
                    "weight": 5
                  },
                  {
                    "input": "Order.processed_at",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.12c500ed0b7879105fb46af0f246be87",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "a4bc7b08-59d0-48d6-8a01-ef85f2ce6a51",
              "_score": 1.64652,
              "_source": {
                "id": "a4bc7b08-59d0-48d6-8a01-ef85f2ce6a51",
                "name": "sales",
                "fullyQualifiedName": "sample_kafka.sales",
                "description": "All sales related events gets captured in this topic",
                "version": 0.1,
                "updatedAt": 1743499293532,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"namespace\":\"openmetadata.kafka\",\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"sale_id\",\"type\":\"int\"},{\"name\":\"billing_address_id\",\"type\":\"int\"},{\"name\":\"billing_address_id_2\",\"type\":\"int\"},{\"name\":\"api_client_id\",\"type\":\"int\"},{\"name\":\"customer_id\",\"type\":\"int\"},{\"name\":\"product_id\",\"type\":\"int\"},{\"name\":\"location_id\",\"type\":\"int\"},{\"name\":\"order_id\",\"type\":\"double\"}]}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "Order",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.sales.Order",
                      "children": [
                        {
                          "name": "sale_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.sale_id"
                        },
                        {
                          "name": "billing_address_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.billing_address_id"
                        },
                        {
                          "name": "billing_address_id_2",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.billing_address_id_2"
                        },
                        {
                          "name": "api_client_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.api_client_id"
                        },
                        {
                          "name": "customer_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.customer_id"
                        },
                        {
                          "name": "product_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.product_id"
                        },
                        {
                          "name": "location_id",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "fullyQualifiedName": "sample_kafka.sales.Order.location_id"
                        },
                        {
                          "name": "order_id",
                          "dataType": "DOUBLE",
                          "dataTypeDisplay": "double",
                          "fullyQualifiedName": "sample_kafka.sales.Order.order_id"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["compact", "delete"],
                "replicationFactor": 4,
                "maximumMessageSize": 249,
                "retentionSize": 1931232624,
                "deleted": false,
                "fieldNames": [
                  "Order",
                  "Order.sale_id",
                  "Order.billing_address_id",
                  "Order.billing_address_id_2",
                  "Order.api_client_id",
                  "Order.customer_id",
                  "Order.product_id",
                  "Order.location_id",
                  "Order.order_id"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "sales",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.sales", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "Order",
                    "weight": 5
                  },
                  {
                    "input": "Order.sale_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.billing_address_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.billing_address_id_2",
                    "weight": 5
                  },
                  {
                    "input": "Order.api_client_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.customer_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.product_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.location_id",
                    "weight": 5
                  },
                  {
                    "input": "Order.order_id",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.9ed083b1436e5f40ef984b28255eef18",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "3ba71709-871b-43dd-9183-4e8b066b62fc",
              "_score": 1.64652,
              "_source": {
                "id": "3ba71709-871b-43dd-9183-4e8b066b62fc",
                "name": "avro_record",
                "fullyQualifiedName": "sample_kafka.avro_record",
                "description": "All Avro record related events gets captured in this topic",
                "version": 0.1,
                "updatedAt": 1743499293559,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\n    \"namespace\": \"openmetadata.kafka\",\n    \"name\": \"level\",\n    \"type\": \"record\",\n    \"doc\": \"This is a first level record\",\n    \"fields\": [\n        {\n            \"name\": \"uid\",\n            \"type\": \"int\",\n            \"doc\": \"The field represents unique id\"\n        },\n        {\n            \"name\": \"somefield\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"options\",\n            \"doc\": \"The field represents options array\",\n            \"type\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"record\",\n                    \"name\": \"lvl2_record\",\n                    \"doc\": \"The field represents a level 2 record\",\n                    \"fields\": [\n                        {\n                            \"name\": \"item1_lvl2\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"name\": \"item2_lvl2\",\n                            \"type\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"record\",\n                                    \"name\": \"lvl3_record\",\n                                    \"fields\": [\n                                        {\n                                            \"name\": \"item1_lvl3\",\n                                            \"type\": \"string\",\n                                            \"doc\": \"The field represents level3 item\"\n                                        },\n                                        {\n                                            \"name\": \"item2_lvl3\",\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
                  "schemaType": "Avro",
                  "schemaFields": [
                    {
                      "name": "level",
                      "dataType": "RECORD",
                      "description": "This is a first level record",
                      "fullyQualifiedName": "sample_kafka.avro_record.level",
                      "children": [
                        {
                          "name": "uid",
                          "dataType": "INT",
                          "dataTypeDisplay": "int",
                          "description": "The field represents unique id",
                          "fullyQualifiedName": "sample_kafka.avro_record.level.uid"
                        },
                        {
                          "name": "somefield",
                          "dataType": "STRING",
                          "dataTypeDisplay": "string",
                          "fullyQualifiedName": "sample_kafka.avro_record.level.somefield"
                        },
                        {
                          "name": "options",
                          "dataType": "ARRAY",
                          "dataTypeDisplay": "ARRAY<record>",
                          "description": "The field represents options array",
                          "fullyQualifiedName": "sample_kafka.avro_record.level.options",
                          "children": [
                            {
                              "name": "lvl2_record",
                              "dataType": "RECORD",
                              "description": "The field represents a level 2 record",
                              "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record",
                              "children": [
                                {
                                  "name": "item1_lvl2",
                                  "dataType": "STRING",
                                  "dataTypeDisplay": "string",
                                  "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item1_lvl2"
                                },
                                {
                                  "name": "item2_lvl2",
                                  "dataType": "ARRAY",
                                  "dataTypeDisplay": "ARRAY<record>",
                                  "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2",
                                  "children": [
                                    {
                                      "name": "lvl3_record",
                                      "dataType": "RECORD",
                                      "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2.lvl3_record",
                                      "children": [
                                        {
                                          "name": "item1_lvl3",
                                          "dataType": "STRING",
                                          "dataTypeDisplay": "string",
                                          "description": "The field represents level3 item",
                                          "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2.lvl3_record.item1_lvl3"
                                        },
                                        {
                                          "name": "item2_lvl3",
                                          "dataType": "STRING",
                                          "dataTypeDisplay": "string",
                                          "fullyQualifiedName": "sample_kafka.avro_record.level.options.lvl2_record.item2_lvl2.lvl3_record.item2_lvl3"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["compact", "delete"],
                "replicationFactor": 4,
                "maximumMessageSize": 249,
                "retentionSize": 1931232624,
                "deleted": false,
                "fieldNames": [
                  "level",
                  "level.uid",
                  "level.somefield",
                  "level.options",
                  "options.lvl2_record",
                  "lvl2_record.item1_lvl2",
                  "lvl2_record.item2_lvl2",
                  "item2_lvl2.lvl3_record",
                  "lvl3_record.item1_lvl3",
                  "lvl3_record.item2_lvl3"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "avro_record",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.avro_record", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "level",
                    "weight": 5
                  },
                  {
                    "input": "level.uid",
                    "weight": 5
                  },
                  {
                    "input": "level.somefield",
                    "weight": 5
                  },
                  {
                    "input": "level.options",
                    "weight": 5
                  },
                  {
                    "input": "options.lvl2_record",
                    "weight": 5
                  },
                  {
                    "input": "lvl2_record.item1_lvl2",
                    "weight": 5
                  },
                  {
                    "input": "lvl2_record.item2_lvl2",
                    "weight": 5
                  },
                  {
                    "input": "item2_lvl2.lvl3_record",
                    "weight": 5
                  },
                  {
                    "input": "lvl3_record.item1_lvl3",
                    "weight": 5
                  },
                  {
                    "input": "lvl3_record.item2_lvl3",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.e3881dae749c51a55f3b9e15b2f81c4e",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "f580bee3-aa63-4794-9f3f-96374c09b1d0",
              "_score": 1.64652,
              "_source": {
                "id": "f580bee3-aa63-4794-9f3f-96374c09b1d0",
                "name": "json_schema_record",
                "fullyQualifiedName": "sample_kafka.json_schema_record",
                "description": "All Json Schema record related events gets captured in this topic",
                "version": 0.1,
                "updatedAt": 1743499293609,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "{\"type\":\"object\",\"required\":[\"name\",\"age\",\"club_name\"],\"properties\":{\"name\":{\"type\":\"object\",\"required\":[\"first_name\",\"last_name\"],\"properties\":{\"first_name\":{\"type\":\"string\"},\"last_name\":{\"type\":\"string\"}}},\"age\":{\"type\":\"integer\"},\"club_name\":{\"type\":\"string\"}}}",
                  "schemaType": "JSON",
                  "schemaFields": [
                    {
                      "name": "default",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.json_schema_record.default",
                      "children": [
                        {
                          "name": "name",
                          "dataType": "RECORD",
                          "fullyQualifiedName": "sample_kafka.json_schema_record.default.name",
                          "children": [
                            {
                              "name": "first_name",
                              "dataType": "STRING",
                              "fullyQualifiedName": "sample_kafka.json_schema_record.default.name.first_name"
                            },
                            {
                              "name": "last_name",
                              "dataType": "STRING",
                              "fullyQualifiedName": "sample_kafka.json_schema_record.default.name.last_name"
                            }
                          ]
                        },
                        {
                          "name": "age",
                          "dataType": "INT",
                          "fullyQualifiedName": "sample_kafka.json_schema_record.default.age"
                        },
                        {
                          "name": "club_name",
                          "dataType": "STRING",
                          "fullyQualifiedName": "sample_kafka.json_schema_record.default.club_name"
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["compact", "delete"],
                "replicationFactor": 4,
                "maximumMessageSize": 249,
                "retentionSize": 1931232624,
                "deleted": false,
                "fieldNames": [
                  "default",
                  "default.name",
                  "name.first_name",
                  "name.last_name",
                  "default.age",
                  "default.club_name"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "json_schema_record",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.json_schema_record", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "default",
                    "weight": 5
                  },
                  {
                    "input": "default.name",
                    "weight": 5
                  },
                  {
                    "input": "name.first_name",
                    "weight": 5
                  },
                  {
                    "input": "name.last_name",
                    "weight": 5
                  },
                  {
                    "input": "default.age",
                    "weight": 5
                  },
                  {
                    "input": "default.club_name",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.9cdf4e94449483952e30b3bfe5cbe5f4",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "3981d016-5061-4481-97a0-7cf26b62a696",
              "_score": 1.64652,
              "_source": {
                "id": "3981d016-5061-4481-97a0-7cf26b62a696",
                "name": "address_book",
                "fullyQualifiedName": "sample_kafka.address_book",
                "description": "All Protobuf record related events gets captured in this topic",
                "version": 0.1,
                "updatedAt": 1743499293689,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "messageSchema": {
                  "schemaText": "syntax = \"proto2\";\n\npackage tutorial;\n\nmessage Person {\n  optional string name = 1;\n  optional int32 id = 2;\n  optional string email = 3;\n\n  enum PhoneType {\n    MOBILE = 0;\n    HOME = 1;\n    WORK = 2;\n  }\n\n  message PhoneNumber {\n    optional string number = 1;\n    optional PhoneType type = 2 [default = HOME];\n  }\n\n  repeated PhoneNumber phones = 4;\n}\n\nmessage AddressBook {\n  repeated Person people = 1;\n}",
                  "schemaType": "Protobuf",
                  "schemaFields": [
                    {
                      "name": "AddressBook",
                      "dataType": "RECORD",
                      "fullyQualifiedName": "sample_kafka.address_book.AddressBook",
                      "children": [
                        {
                          "name": "people",
                          "dataType": "RECORD",
                          "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people",
                          "children": [
                            {
                              "name": "name",
                              "dataType": "STRING",
                              "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.name"
                            },
                            {
                              "name": "id",
                              "dataType": "INT",
                              "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.id"
                            },
                            {
                              "name": "email",
                              "dataType": "STRING",
                              "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.email"
                            },
                            {
                              "name": "phones",
                              "dataType": "RECORD",
                              "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.phones",
                              "children": [
                                {
                                  "name": "number",
                                  "dataType": "STRING",
                                  "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.phones.number"
                                },
                                {
                                  "name": "type",
                                  "dataType": "ENUM",
                                  "fullyQualifiedName": "sample_kafka.address_book.AddressBook.people.phones.type"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "partitions": 128,
                "cleanupPolicies": ["compact", "delete"],
                "replicationFactor": 4,
                "maximumMessageSize": 249,
                "retentionSize": 1931232624,
                "deleted": false,
                "fieldNames": [
                  "AddressBook",
                  "AddressBook.people",
                  "people.name",
                  "people.id",
                  "people.email",
                  "people.phones",
                  "phones.number",
                  "phones.type"
                ],
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "address_book",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.address_book", "sample_kafka"],
                "tags": [],
                "field_suggest": [
                  {
                    "input": "AddressBook",
                    "weight": 5
                  },
                  {
                    "input": "AddressBook.people",
                    "weight": 5
                  },
                  {
                    "input": "people.name",
                    "weight": 5
                  },
                  {
                    "input": "people.id",
                    "weight": 5
                  },
                  {
                    "input": "people.email",
                    "weight": 5
                  },
                  {
                    "input": "people.phones",
                    "weight": 5
                  },
                  {
                    "input": "phones.number",
                    "weight": 5
                  },
                  {
                    "input": "phones.type",
                    "weight": 5
                  }
                ],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.96e6da9a46e18122de3c60870babf489",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "_shard": "[topic_search_index][0]",
              "_node": "8pqEbE3TRPu1T5E3jveWGg",
              "_index": "topic_search_index",
              "_type": "_doc",
              "_id": "98b62193-59a6-40d0-822f-4bac8d2dc912",
              "_score": 1.64652,
              "_source": {
                "id": "98b62193-59a6-40d0-822f-4bac8d2dc912",
                "name": "customer_contacts",
                "fullyQualifiedName": "sample_kafka.customer_contacts",
                "description": "Kafka topic to capture the customer contacts such as email, phone",
                "version": 0.1,
                "updatedAt": 1743499293741,
                "updatedBy": "admin",
                "service": {
                  "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                  "type": "messagingService",
                  "name": "sample_kafka",
                  "fullyQualifiedName": "sample_kafka",
                  "displayName": "sample_kafka",
                  "deleted": false
                },
                "serviceType": "Kafka",
                "partitions": 56,
                "cleanupPolicies": ["delete"],
                "replicationFactor": 2,
                "maximumMessageSize": 167,
                "retentionSize": 455858109,
                "deleted": false,
                "descriptionStatus": "COMPLETE",
                "followers": [],
                "displayName": "customer_contacts",
                "entityType": "topic",
                "totalVotes": 0,
                "owners": [],
                "fqnParts": ["sample_kafka.customer_contacts", "sample_kafka"],
                "tags": [],
                "field_suggest": [],
                "service_suggest": [
                  {
                    "input": "sample_kafka",
                    "weight": 5
                  }
                ],
                "upstreamLineage": [],
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c.c0cd1e5f89ca7e06753d7fa1ff8f580f",
                "type": "topic"
              },
              "_explanation": {
                "value": 1.64652,
                "description": "sum of:",
                "details": [
                  {
                    "value": 1.6,
                    "description": "sum of:",
                    "details": [
                      {
                        "value": 1,
                        "description": "*:*",
                        "details": []
                      },
                      {
                        "value": 0.6,
                        "description": "function score, product of:",
                        "details": [
                          {
                            "value": 0.3,
                            "description": "*:*^0.3",
                            "details": []
                          },
                          {
                            "value": 2,
                            "description": "min of:",
                            "details": [
                              {
                                "value": 2,
                                "description": "function score, score mode [sum]",
                                "details": [
                                  {
                                    "value": 2,
                                    "description": "field value function: sqrt(doc['usageSummary.weeklyStats.count'].value?:1.0 * factor=4.0)",
                                    "details": []
                                  }
                                ]
                              },
                              {
                                "value": 3.4028235e38,
                                "description": "maxBoost",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "value": 0.046520013,
                    "description": "weight(deleted:F in 0) [PerFieldSimilarity], result of:",
                    "details": [
                      {
                        "value": 0.046520013,
                        "description": "score(freq=1.0), computed as boost * idf * tf from:",
                        "details": [
                          {
                            "value": 2.2,
                            "description": "boost",
                            "details": []
                          },
                          {
                            "value": 0.046520017,
                            "description": "idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:",
                            "details": [
                              {
                                "value": 10,
                                "description": "n, number of documents containing term",
                                "details": []
                              },
                              {
                                "value": 10,
                                "description": "N, total number of documents with field",
                                "details": []
                              }
                            ]
                          },
                          {
                            "value": 0.45454544,
                            "description": "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:",
                            "details": [
                              {
                                "value": 1,
                                "description": "freq, occurrences of term within document",
                                "details": []
                              },
                              {
                                "value": 1.2,
                                "description": "k1, term saturation parameter",
                                "details": []
                              },
                              {
                                "value": 0.75,
                                "description": "b, length normalization parameter",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "dl, length of field",
                                "details": []
                              },
                              {
                                "value": 1,
                                "description": "avgdl, average length of field",
                                "details": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "aggregations": {
          "serviceType": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": [
              {
                "key": "kafka",
                "doc_count": 10
              }
            ]
          },
          "databaseSchema.name.keyword": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "tags.tagFQN": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "databaseSchema.displayName": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "entityType": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": [
              {
                "key": "topic",
                "doc_count": 10
              }
            ]
          },
          "fieldNames": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "domain.displayName.keyword": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "tier.tagFQN": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "messageSchema.schemaFields.name.keyword": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": [
              {
                "key": "order",
                "doc_count": 2
              },
              {
                "key": "shop",
                "doc_count": 2
              },
              {
                "key": "addressbook",
                "doc_count": 1
              },
              {
                "key": "customer",
                "doc_count": 1
              },
              {
                "key": "default",
                "doc_count": 1
              },
              {
                "key": "level",
                "doc_count": 1
              },
              {
                "key": "product",
                "doc_count": 1
              }
            ]
          },
          "service.displayName.keyword": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": [
              {
                "key": "sample_kafka",
                "doc_count": 10
              }
            ]
          },
          "database.displayName": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "database.name.keyword": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "certification.tagLabel.tagFQN": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          },
          "owners.displayName.keyword": {
            "doc_count_error_upper_bound": 0,
            "sum_other_doc_count": 0,
            "buckets": []
          }
        }
      }
    }
  },
  "permissionApi": {
    "getEntityPermissionById": {
      "request": {},
      "response": {
        "data": {
          "resource": "searchIndex",
          "permissions": [
            {
              "operation": "Create",
              "access": "allow"
            },
            {
              "operation": "Delete",
              "access": "allow"
            },
            {
              "operation": "ViewAll",
              "access": "allow"
            },
            {
              "operation": "EditAll",
              "access": "allow"
            }
          ]
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "204",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "method": "get",
          "url": "/permissions/searchIndex/name/elasticsearch_sample.table_search_index",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    },
    "getLoggedInUserPermission": {
      "request": {},
      "response": {
        "data": {
          "data": [
            {
              "resource": "all",
              "permissions": [
                {
                  "operation": "All",
                  "access": "allow"
                },
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "CreateIngestionPipelineAutomator",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                },
                {
                  "operation": "DeleteTestCaseFailedRowsSample",
                  "access": "allow"
                },
                {
                  "operation": "Deploy",
                  "access": "allow"
                },
                {
                  "operation": "Trigger",
                  "access": "allow"
                },
                {
                  "operation": "Kill",
                  "access": "allow"
                },
                {
                  "operation": "GenerateToken",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "apiCollection",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "apiEndpoint",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "apiService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "app",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "appMarketPlaceDefinition",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "bot",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "chart",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "classification",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "container",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "dashboard",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "dashboardDataModel",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "dashboardService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "dataInsightChart",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "dataInsightCustomChart",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "dataProduct",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "database",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "databaseSchema",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "databaseService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "document",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "domain",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "entityReportData",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "eventsubscription",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "feed",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "glossary",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "glossaryTerm",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "ingestionPipeline",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "CreateIngestionPipelineAutomator",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "kpi",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "messagingService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "metadataService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "metric",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "mlmodel",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "mlmodelService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "persona",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "pipeline",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "pipelineService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "policy",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "query",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "queryCostRecord",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "report",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "role",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "searchIndex",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "searchService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "storageService",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "storedProcedure",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "suggestion",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "table",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "tag",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "team",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "testCase",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "testCaseResolutionStatus",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "testCaseResult",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "testConnectionDefinition",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "testDefinition",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "testSuite",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "topic",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "user",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "webAnalyticEvent",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "workflow",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "workflowDefinition",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "workflowInstance",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "workflowInstanceState",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            },
            {
              "resource": "type",
              "permissions": [
                {
                  "operation": "Create",
                  "access": "allow"
                },
                {
                  "operation": "Delete",
                  "access": "allow"
                },
                {
                  "operation": "ViewAll",
                  "access": "allow"
                },
                {
                  "operation": "EditAll",
                  "access": "allow"
                }
              ]
            }
          ]
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "transfer-encoding": "chunked",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "limit": 100
          },
          "method": "get",
          "url": "/permissions",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "userAPI": {
    "getLoggedInUser": {
      "request": {},
      "response": {
        "data": {
          "id": "c89d711e-ecc3-40ba-a4b6-f7e87eea6ae9",
          "name": "admin",
          "fullyQualifiedName": "admin",
          "version": 0.1,
          "updatedAt": 1743486998691,
          "updatedBy": "admin",
          "email": "admin@open-metadata.org",
          "href": "http://localhost:8585/api/v1/users/c89d711e-ecc3-40ba-a4b6-f7e87eea6ae9",
          "isBot": false,
          "isAdmin": true,
          "teams": [
            {
              "id": "df629f48-e63c-4bd3-8a7c-663c84ab864a",
              "type": "team",
              "name": "Organization",
              "fullyQualifiedName": "Organization",
              "description": "Organization under which all the other team hierarchy is created",
              "displayName": "Organization",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/teams/df629f48-e63c-4bd3-8a7c-663c84ab864a"
            }
          ],
          "personas": [],
          "deleted": false,
          "roles": [],
          "inheritedRoles": [
            {
              "id": "a595bb69-8d82-4de9-bf12-e92eede81e13",
              "type": "role",
              "name": "DataConsumer",
              "fullyQualifiedName": "DataConsumer",
              "description": "Users with Data Consumer role use different data assets for their day to day work.",
              "displayName": "Data Consumer",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/roles/a595bb69-8d82-4de9-bf12-e92eede81e13"
            }
          ],
          "isEmailVerified": true,
          "domains": []
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "488",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": [
              "profile",
              "teams",
              "roles",
              "personas",
              "defaultPersona",
              "domains"
            ]
          },
          "method": "get",
          "url": "/users/loggedInUser",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    },
    "getUserByName": {
      "request": {},
      "response": {
        "data": {
          "id": "c89d711e-ecc3-40ba-a4b6-f7e87eea6ae9",
          "name": "admin",
          "fullyQualifiedName": "admin",
          "version": 0.1,
          "updatedAt": 1743486998691,
          "updatedBy": "admin",
          "email": "admin@open-metadata.org",
          "href": "http://localhost:8585/api/v1/users/c89d711e-ecc3-40ba-a4b6-f7e87eea6ae9",
          "isBot": false,
          "isAdmin": true,
          "deleted": false,
          "isEmailVerified": true
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "222",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "profile"
          },
          "method": "get",
          "url": "/users/name/admin",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    },
    "getUsers": {
      "request": {},
      "response": {
        "data": {
          "data": [
            {
              "id": "56d1e642-a5a8-4db7-bd3d-f2f6189b0694",
              "name": "aaron_johnson0",
              "fullyQualifiedName": "aaron_johnson0",
              "displayName": "Aaron Johnson",
              "version": 0.1,
              "updatedAt": 1743499280844,
              "updatedBy": "admin",
              "email": "aaron_johnson0@gmail.com",
              "href": "http://localhost:8585/api/v1/users/56d1e642-a5a8-4db7-bd3d-f2f6189b0694",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "2e903e8c-2616-4c76-bc3d-3070a609284a",
              "name": "aaron.singh2",
              "fullyQualifiedName": "\"aaron.singh2\"",
              "displayName": "Aaron Singh",
              "version": 0.1,
              "updatedAt": 1743499280950,
              "updatedBy": "admin",
              "email": "aaron.singh2@gmail.com",
              "href": "http://localhost:8585/api/v1/users/2e903e8c-2616-4c76-bc3d-3070a609284a",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "c562c6b6-5c10-42fa-857e-c2a9f5883c02",
              "name": "aaron.warren5",
              "fullyQualifiedName": "\"aaron.warren5\"",
              "displayName": "Aaron Warren",
              "version": 0.1,
              "updatedAt": 1743499281063,
              "updatedBy": "admin",
              "email": "aaron.warren5@gmail.com",
              "href": "http://localhost:8585/api/v1/users/c562c6b6-5c10-42fa-857e-c2a9f5883c02",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "773ac8b3-c8bf-4ea2-a2a8-1689c29e2c17",
              "name": "adam_rodriguez9",
              "fullyQualifiedName": "adam_rodriguez9",
              "displayName": "Adam Rodriguez",
              "version": 0.1,
              "updatedAt": 1743499281229,
              "updatedBy": "admin",
              "email": "adam_rodriguez9@gmail.com",
              "href": "http://localhost:8585/api/v1/users/773ac8b3-c8bf-4ea2-a2a8-1689c29e2c17",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "55e6ef66-73e8-467d-8b80-bc1b1ea843e2",
              "name": "adam.matthews2",
              "fullyQualifiedName": "\"adam.matthews2\"",
              "displayName": "Adam Matthews",
              "version": 0.1,
              "updatedAt": 1743499281123,
              "updatedBy": "admin",
              "email": "adam.matthews2@gmail.com",
              "href": "http://localhost:8585/api/v1/users/55e6ef66-73e8-467d-8b80-bc1b1ea843e2",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "c89d711e-ecc3-40ba-a4b6-f7e87eea6ae9",
              "name": "admin",
              "fullyQualifiedName": "admin",
              "version": 0.1,
              "updatedAt": 1743486998691,
              "updatedBy": "admin",
              "email": "admin@open-metadata.org",
              "href": "http://localhost:8585/api/v1/users/c89d711e-ecc3-40ba-a4b6-f7e87eea6ae9",
              "isBot": false,
              "isAdmin": true,
              "deleted": false,
              "isEmailVerified": true
            },
            {
              "id": "50c86e76-8782-4ee0-bac2-91f1e9e40054",
              "name": "alec_kane4",
              "fullyQualifiedName": "alec_kane4",
              "displayName": "Alec Kane",
              "version": 0.1,
              "updatedAt": 1743499281322,
              "updatedBy": "admin",
              "email": "alec_kane4@gmail.com",
              "href": "http://localhost:8585/api/v1/users/50c86e76-8782-4ee0-bac2-91f1e9e40054",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "155499b4-468a-4505-b428-eda327e6799d",
              "name": "alex_pollard9",
              "fullyQualifiedName": "alex_pollard9",
              "displayName": "Alex Pollard",
              "version": 0.1,
              "updatedAt": 1743499281410,
              "updatedBy": "admin",
              "email": "alex_pollard9@gmail.com",
              "href": "http://localhost:8585/api/v1/users/155499b4-468a-4505-b428-eda327e6799d",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "41d62619-4a26-4b7c-bacc-3ff0062556ad",
              "name": "alexa_jordan3",
              "fullyQualifiedName": "alexa_jordan3",
              "displayName": "Alexa Jordan",
              "version": 0.1,
              "updatedAt": 1743499281492,
              "updatedBy": "admin",
              "email": "alexa_jordan3@gmail.com",
              "href": "http://localhost:8585/api/v1/users/41d62619-4a26-4b7c-bacc-3ff0062556ad",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "c392bbe4-ae1f-4349-be3b-c3ea4165ab65",
              "name": "alexander_jackson5",
              "fullyQualifiedName": "alexander_jackson5",
              "displayName": "Alexander Jackson",
              "version": 0.1,
              "updatedAt": 1743499281594,
              "updatedBy": "admin",
              "email": "alexander_jackson5@gmail.com",
              "href": "http://localhost:8585/api/v1/users/c392bbe4-ae1f-4349-be3b-c3ea4165ab65",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "e0249e08-5c28-457f-86d5-3907f7663808",
              "name": "alexander_russell2",
              "fullyQualifiedName": "alexander_russell2",
              "displayName": "Alexander Russell",
              "version": 0.1,
              "updatedAt": 1743499281687,
              "updatedBy": "admin",
              "email": "alexander_russell2@gmail.com",
              "href": "http://localhost:8585/api/v1/users/e0249e08-5c28-457f-86d5-3907f7663808",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "89dee120-7907-4923-ac58-6d476091b1e5",
              "name": "amanda_bullock6",
              "fullyQualifiedName": "amanda_bullock6",
              "displayName": "Amanda Bullock",
              "version": 0.1,
              "updatedAt": 1743499281740,
              "updatedBy": "admin",
              "email": "amanda_bullock6@gmail.com",
              "href": "http://localhost:8585/api/v1/users/89dee120-7907-4923-ac58-6d476091b1e5",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "203dd4ae-d2a2-4bfa-8c85-0da3c797ebd7",
              "name": "amanda_york8",
              "fullyQualifiedName": "amanda_york8",
              "displayName": "Amanda York",
              "version": 0.1,
              "updatedAt": 1743499281792,
              "updatedBy": "admin",
              "email": "amanda_york8@gmail.com",
              "href": "http://localhost:8585/api/v1/users/203dd4ae-d2a2-4bfa-8c85-0da3c797ebd7",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "565f5cb9-51d3-4151-a8ef-df3bf2a50817",
              "name": "amber_green0",
              "fullyQualifiedName": "amber_green0",
              "displayName": "Amber Green",
              "version": 0.1,
              "updatedAt": 1743499281849,
              "updatedBy": "admin",
              "email": "amber_green0@gmail.com",
              "href": "http://localhost:8585/api/v1/users/565f5cb9-51d3-4151-a8ef-df3bf2a50817",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "ae25c568-5f2a-454e-9309-91bd7f24ad0f",
              "name": "amy_stephens4",
              "fullyQualifiedName": "amy_stephens4",
              "displayName": "Amy Stephens",
              "version": 0.1,
              "updatedAt": 1743499281901,
              "updatedBy": "admin",
              "email": "amy_stephens4@gmail.com",
              "href": "http://localhost:8585/api/v1/users/ae25c568-5f2a-454e-9309-91bd7f24ad0f",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "1a7c6c25-89d2-4224-95c7-c85b5c3d55f1",
              "name": "ana_mckay7",
              "fullyQualifiedName": "ana_mckay7",
              "displayName": "Ana Mckay",
              "version": 0.1,
              "updatedAt": 1743499281960,
              "updatedBy": "admin",
              "email": "ana_mckay7@gmail.com",
              "href": "http://localhost:8585/api/v1/users/1a7c6c25-89d2-4224-95c7-c85b5c3d55f1",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "765abb91-80f8-40f5-bf79-48cd6891fb2f",
              "name": "andrea_bartlett6",
              "fullyQualifiedName": "andrea_bartlett6",
              "displayName": "Andrea Bartlett",
              "version": 0.1,
              "updatedAt": 1743499282018,
              "updatedBy": "admin",
              "email": "andrea_bartlett6@gmail.com",
              "href": "http://localhost:8585/api/v1/users/765abb91-80f8-40f5-bf79-48cd6891fb2f",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "1076857b-f601-4818-bdaf-5ef13257f2c4",
              "name": "andrea_reed7",
              "fullyQualifiedName": "andrea_reed7",
              "displayName": "Andrea Reed",
              "version": 0.1,
              "updatedAt": 1743499282071,
              "updatedBy": "admin",
              "email": "andrea_reed7@gmail.com",
              "href": "http://localhost:8585/api/v1/users/1076857b-f601-4818-bdaf-5ef13257f2c4",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "94303da9-a147-447b-bec0-c591ca2ffce5",
              "name": "andrew_hernandez9",
              "fullyQualifiedName": "andrew_hernandez9",
              "displayName": "Andrew Hernandez",
              "version": 0.1,
              "updatedAt": 1743499282151,
              "updatedBy": "admin",
              "email": "andrew_hernandez9@gmail.com",
              "href": "http://localhost:8585/api/v1/users/94303da9-a147-447b-bec0-c591ca2ffce5",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "b8bb56cd-ed3c-4f7b-99a6-7ca1134efccb",
              "name": "andrew_jackson3",
              "fullyQualifiedName": "andrew_jackson3",
              "displayName": "Andrew Jackson",
              "version": 0.1,
              "updatedAt": 1743499282209,
              "updatedBy": "admin",
              "email": "andrew_jackson3@gmail.com",
              "href": "http://localhost:8585/api/v1/users/b8bb56cd-ed3c-4f7b-99a6-7ca1134efccb",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "97c0a84c-ac4e-4dc0-8b6b-03ba8b0e9dac",
              "name": "andrew_jennings3",
              "fullyQualifiedName": "andrew_jennings3",
              "displayName": "Andrew Jennings",
              "version": 0.1,
              "updatedAt": 1743499282259,
              "updatedBy": "admin",
              "email": "andrew_jennings3@gmail.com",
              "href": "http://localhost:8585/api/v1/users/97c0a84c-ac4e-4dc0-8b6b-03ba8b0e9dac",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "23db3565-7fdd-4022-bbe4-bc6cdf51722b",
              "name": "andrew_rivas3",
              "fullyQualifiedName": "andrew_rivas3",
              "displayName": "Andrew Rivas",
              "version": 0.1,
              "updatedAt": 1743499282312,
              "updatedBy": "admin",
              "email": "andrew_rivas3@gmail.com",
              "href": "http://localhost:8585/api/v1/users/23db3565-7fdd-4022-bbe4-bc6cdf51722b",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "15ff1729-a22b-4d2f-942c-d51199c01bcc",
              "name": "andrew_shelton6",
              "fullyQualifiedName": "andrew_shelton6",
              "displayName": "Andrew Shelton",
              "version": 0.1,
              "updatedAt": 1743499282394,
              "updatedBy": "admin",
              "email": "andrew_shelton6@gmail.com",
              "href": "http://localhost:8585/api/v1/users/15ff1729-a22b-4d2f-942c-d51199c01bcc",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "259a65f0-e4d9-4be5-97d6-2c48cf923415",
              "name": "andrew_short2",
              "fullyQualifiedName": "andrew_short2",
              "displayName": "Andrew Short",
              "version": 0.1,
              "updatedAt": 1743499282442,
              "updatedBy": "admin",
              "email": "andrew_short2@gmail.com",
              "href": "http://localhost:8585/api/v1/users/259a65f0-e4d9-4be5-97d6-2c48cf923415",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            },
            {
              "id": "f7751c58-b086-4059-ae31-828272bd995d",
              "name": "angel_smith0",
              "fullyQualifiedName": "angel_smith0",
              "displayName": "Angel Smith",
              "version": 0.1,
              "updatedAt": 1743499282491,
              "updatedBy": "admin",
              "email": "angel_smith0@gmail.com",
              "href": "http://localhost:8585/api/v1/users/f7751c58-b086-4059-ae31-828272bd995d",
              "isBot": false,
              "isAdmin": false,
              "deleted": false
            }
          ],
          "paging": {
            "after": "eyJpZCI6ImY3NzUxYzU4LWIwODYtNDA1OS1hZTMxLTgyODI3MmJkOTk1ZCIsIm5hbWUiOiJhbmdlbF9zbWl0aDAifQ==",
            "total": 101
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:26 GMT",
          "transfer-encoding": "chunked",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "limit": 25,
            "isBot": false
          },
          "method": "get",
          "url": "/users",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "SearchIndexAPI": {
    "getSeachIndexDetailsByFQN": {
      "request": {},
      "response": {
        "data": {
          "id": "77d04df6-d78d-4d91-acce-f35004329a80",
          "name": "table_search_index",
          "fullyQualifiedName": "elasticsearch_sample.table_search_index",
          "displayName": "TableSearchIndex",
          "description": "Table Search Index",
          "version": 0.1,
          "updatedAt": 1743499297466,
          "updatedBy": "admin",
          "service": {
            "id": "25ea4d92-b476-4be1-8fe6-d9a780bcabfd",
            "type": "searchService",
            "name": "elasticsearch_sample",
            "fullyQualifiedName": "elasticsearch_sample",
            "displayName": "elasticsearch_sample",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/services/storageServices/25ea4d92-b476-4be1-8fe6-d9a780bcabfd"
          },
          "serviceType": "ElasticSearch",
          "fields": [
            {
              "name": "name",
              "dataType": "TEXT",
              "dataTypeDisplay": "text",
              "description": "Table Entity Name.",
              "fullyQualifiedName": "elasticsearch_sample.table_search_index.name",
              "tags": []
            },
            {
              "name": "displayName",
              "dataType": "TEXT",
              "dataTypeDisplay": "text",
              "description": "Table Entity DisplayName.",
              "fullyQualifiedName": "elasticsearch_sample.table_search_index.displayName",
              "tags": []
            },
            {
              "name": "description",
              "dataType": "TEXT",
              "dataTypeDisplay": "text",
              "description": "Table Entity Description.",
              "fullyQualifiedName": "elasticsearch_sample.table_search_index.description",
              "tags": []
            },
            {
              "name": "columns",
              "dataType": "NESTED",
              "dataTypeDisplay": "nested",
              "description": "Table Columns.",
              "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns",
              "tags": [],
              "children": [
                {
                  "name": "name",
                  "dataType": "TEXT",
                  "dataTypeDisplay": "text",
                  "description": "Column Name.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.name",
                  "tags": []
                },
                {
                  "name": "displayName",
                  "dataType": "TEXT",
                  "dataTypeDisplay": "text",
                  "description": "Column DisplayName.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.displayName",
                  "tags": []
                },
                {
                  "name": "description",
                  "dataType": "TEXT",
                  "dataTypeDisplay": "text",
                  "description": "Column Description.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.description",
                  "tags": []
                }
              ]
            },
            {
              "name": "databaseSchema",
              "dataType": "TEXT",
              "dataTypeDisplay": "text",
              "description": "Database Schema that this table belongs to.",
              "fullyQualifiedName": "elasticsearch_sample.table_search_index.databaseSchema",
              "tags": []
            }
          ],
          "indexType": "Index",
          "href": "http://localhost:8585/api/v1/searchIndexes/77d04df6-d78d-4d91-acce-f35004329a80",
          "deleted": false
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "540",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "include": "all"
          },
          "method": "get",
          "url": "/searchIndexes/name/elasticsearch_sample.table_search_index",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "applicationAPI": {
    "getApplicationList": {
      "request": {},
      "response": {
        "data": {
          "data": [
            {
              "id": "43045b81-fe31-4845-8917-c0545d62e33d",
              "name": "DataInsightsApplication",
              "displayName": "Data Insights",
              "features": "Run Ingestion Framework Data Insight Module.",
              "fullyQualifiedName": "DataInsightsApplication",
              "version": 0.1,
              "updatedAt": 1743487000202,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/apps/43045b81-fe31-4845-8917-c0545d62e33d",
              "deleted": false,
              "provider": "user",
              "developer": "Collate Inc.",
              "developerUrl": "https://www.getcollate.io",
              "privacyPolicyUrl": "https://www.getcollate.io",
              "supportEmail": "support@getcollate.io",
              "className": "org.openmetadata.service.apps.bundles.insights.DataInsightsApp",
              "appType": "internal",
              "scheduleType": "ScheduledOrManual",
              "permission": "All",
              "bot": {
                "id": "8d38f05a-7fa8-4bdf-8fe5-991fed340f0b",
                "type": "bot",
                "name": "DataInsightsApplicationBot",
                "fullyQualifiedName": "DataInsightsApplicationBot",
                "displayName": "DataInsightsApplicationBot",
                "deleted": false
              },
              "runtime": {
                "enabled": "true"
              },
              "allowConfiguration": true,
              "system": false,
              "appConfiguration": {
                "batchSize": 100,
                "moduleConfiguration": {
                  "dataAssets": {
                    "enabled": true,
                    "entities": ["all"],
                    "retention": 7
                  },
                  "dataQuality": {
                    "enabled": true
                  },
                  "appAnalytics": {
                    "enabled": true
                  },
                  "costAnalysis": {
                    "enabled": true
                  }
                },
                "backfillConfiguration": {
                  "enabled": false
                },
                "recreateDataAssetsIndex": false
              },
              "preview": false,
              "appSchedule": {
                "scheduleTimeline": "Custom",
                "cronExpression": "0 3 * * *"
              },
              "appScreenshots": ["DataInsightsPic1.png"],
              "supportsInterrupt": false
            },
            {
              "id": "1f463a78-2b60-48bb-95f6-52693324aea9",
              "name": "DataRetentionApplication",
              "displayName": "Data Retention",
              "fullyQualifiedName": "DataRetentionApplication",
              "version": 0.1,
              "updatedAt": 1743487002771,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/apps/1f463a78-2b60-48bb-95f6-52693324aea9",
              "deleted": false,
              "provider": "user",
              "developer": "Collate Inc.",
              "developerUrl": "https://www.getcollate.io",
              "privacyPolicyUrl": "https://www.getcollate.io",
              "supportEmail": "support@getcollate.io",
              "className": "org.openmetadata.service.apps.bundles.dataRetention.DataRetention",
              "appType": "internal",
              "scheduleType": "ScheduledOrManual",
              "permission": "All",
              "bot": {
                "id": "ca50f489-65e5-4131-848c-5ecb48d2f0c9",
                "type": "bot",
                "name": "DataRetentionApplicationBot",
                "fullyQualifiedName": "DataRetentionApplicationBot",
                "displayName": "DataRetentionApplicationBot",
                "deleted": false
              },
              "runtime": {
                "enabled": "true"
              },
              "allowConfiguration": true,
              "system": false,
              "appConfiguration": {
                "changeEventRetentionPeriod": 7
              },
              "preview": false,
              "appSchedule": {
                "scheduleTimeline": "Custom",
                "cronExpression": "0 0 * * 0"
              },
              "appScreenshots": ["DataRetentionApplication.png"],
              "supportsInterrupt": false
            },
            {
              "id": "27eacb23-cd9d-4563-95a1-73adc33436a1",
              "name": "DayOneExperienceApplication",
              "displayName": "Day One Experience",
              "features": "Easily Service Setup by automating the configuration, deployment and triggering the relevant pipelines to ingest your service metadata.",
              "fullyQualifiedName": "DayOneExperienceApplication",
              "version": 0.1,
              "updatedAt": 1743487002827,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/apps/27eacb23-cd9d-4563-95a1-73adc33436a1",
              "deleted": false,
              "provider": "user",
              "developer": "Collate Inc.",
              "developerUrl": "https://www.getcollate.io",
              "privacyPolicyUrl": "https://www.getcollate.io",
              "supportEmail": "support@getcollate.io",
              "className": "org.openmetadata.service.apps.bundles.dayOneExperience.DayOneExperienceApp",
              "appType": "internal",
              "scheduleType": "NoSchedule",
              "permission": "All",
              "bot": {
                "id": "b2aa190b-f1d0-4eeb-9f26-69e4591c0b0d",
                "type": "bot",
                "name": "DayOneExperienceApplicationBot",
                "fullyQualifiedName": "DayOneExperienceApplicationBot",
                "displayName": "DayOneExperienceApplicationBot",
                "deleted": false
              },
              "allowConfiguration": true,
              "system": false,
              "appConfiguration": {
                "type": "DayOneExperienceApplication",
                "active": true,
                "entityLink": null
              },
              "preview": false,
              "appScreenshots": [],
              "supportsInterrupt": false
            },
            {
              "id": "7cc8efb3-258b-4a6f-a795-019507cb0cf3",
              "name": "SearchIndexingApplication",
              "displayName": "Search Indexing",
              "features": "Sync OpenMetadata and Elastic Search and Recreate Indexes.",
              "fullyQualifiedName": "SearchIndexingApplication",
              "version": 0.1,
              "updatedAt": 1743487003065,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/apps/7cc8efb3-258b-4a6f-a795-019507cb0cf3",
              "deleted": false,
              "provider": "user",
              "developer": "Collate Inc.",
              "developerUrl": "https://www.getcollate.io",
              "privacyPolicyUrl": "https://www.getcollate.io",
              "supportEmail": "support@getcollate.io",
              "className": "org.openmetadata.service.apps.bundles.searchIndex.SearchIndexApp",
              "appType": "internal",
              "scheduleType": "ScheduledOrManual",
              "permission": "All",
              "bot": {
                "id": "a48a6599-65b7-42f4-9527-03838154b53e",
                "type": "bot",
                "name": "SearchIndexingApplicationBot",
                "fullyQualifiedName": "SearchIndexingApplicationBot",
                "displayName": "SearchIndexingApplicationBot",
                "deleted": false
              },
              "runtime": {
                "enabled": true
              },
              "allowConfiguration": true,
              "system": false,
              "appConfiguration": {
                "entities": ["all"],
                "batchSize": "100",
                "queueSize": 100,
                "maxBackoff": 10000,
                "maxRetries": 3,
                "payLoadSize": 104857600,
                "recreateIndex": false,
                "initialBackoff": 1000,
                "consumerThreads": 1,
                "producerThreads": 1,
                "maxConcurrentRequests": 100,
                "searchIndexMappingLanguage": "EN"
              },
              "preview": false,
              "appSchedule": {
                "scheduleTimeline": "Custom",
                "cronExpression": "0 0 * * *"
              },
              "appScreenshots": ["SearchIndexPic1.png"],
              "supportsInterrupt": true
            }
          ],
          "paging": {
            "total": 4
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "1365",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "limit": 100
          },
          "method": "get",
          "url": "/apps",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "data": [
          {
            "id": "43045b81-fe31-4845-8917-c0545d62e33d",
            "name": "DataInsightsApplication",
            "displayName": "Data Insights",
            "features": "Run Ingestion Framework Data Insight Module.",
            "fullyQualifiedName": "DataInsightsApplication",
            "version": 0.1,
            "updatedAt": 1743487000202,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/apps/43045b81-fe31-4845-8917-c0545d62e33d",
            "deleted": false,
            "provider": "user",
            "developer": "Collate Inc.",
            "developerUrl": "https://www.getcollate.io",
            "privacyPolicyUrl": "https://www.getcollate.io",
            "supportEmail": "support@getcollate.io",
            "className": "org.openmetadata.service.apps.bundles.insights.DataInsightsApp",
            "appType": "internal",
            "scheduleType": "ScheduledOrManual",
            "permission": "All",
            "bot": {
              "id": "8d38f05a-7fa8-4bdf-8fe5-991fed340f0b",
              "type": "bot",
              "name": "DataInsightsApplicationBot",
              "fullyQualifiedName": "DataInsightsApplicationBot",
              "displayName": "DataInsightsApplicationBot",
              "deleted": false
            },
            "runtime": {
              "enabled": "true"
            },
            "allowConfiguration": true,
            "system": false,
            "appConfiguration": {
              "batchSize": 100,
              "moduleConfiguration": {
                "dataAssets": {
                  "enabled": true,
                  "entities": ["all"],
                  "retention": 7
                },
                "dataQuality": {
                  "enabled": true
                },
                "appAnalytics": {
                  "enabled": true
                },
                "costAnalysis": {
                  "enabled": true
                }
              },
              "backfillConfiguration": {
                "enabled": false
              },
              "recreateDataAssetsIndex": false
            },
            "preview": false,
            "appSchedule": {
              "scheduleTimeline": "Custom",
              "cronExpression": "0 3 * * *"
            },
            "appScreenshots": ["DataInsightsPic1.png"],
            "supportsInterrupt": false
          },
          {
            "id": "1f463a78-2b60-48bb-95f6-52693324aea9",
            "name": "DataRetentionApplication",
            "displayName": "Data Retention",
            "fullyQualifiedName": "DataRetentionApplication",
            "version": 0.1,
            "updatedAt": 1743487002771,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/apps/1f463a78-2b60-48bb-95f6-52693324aea9",
            "deleted": false,
            "provider": "user",
            "developer": "Collate Inc.",
            "developerUrl": "https://www.getcollate.io",
            "privacyPolicyUrl": "https://www.getcollate.io",
            "supportEmail": "support@getcollate.io",
            "className": "org.openmetadata.service.apps.bundles.dataRetention.DataRetention",
            "appType": "internal",
            "scheduleType": "ScheduledOrManual",
            "permission": "All",
            "bot": {
              "id": "ca50f489-65e5-4131-848c-5ecb48d2f0c9",
              "type": "bot",
              "name": "DataRetentionApplicationBot",
              "fullyQualifiedName": "DataRetentionApplicationBot",
              "displayName": "DataRetentionApplicationBot",
              "deleted": false
            },
            "runtime": {
              "enabled": "true"
            },
            "allowConfiguration": true,
            "system": false,
            "appConfiguration": {
              "changeEventRetentionPeriod": 7
            },
            "preview": false,
            "appSchedule": {
              "scheduleTimeline": "Custom",
              "cronExpression": "0 0 * * 0"
            },
            "appScreenshots": ["DataRetentionApplication.png"],
            "supportsInterrupt": false
          },
          {
            "id": "27eacb23-cd9d-4563-95a1-73adc33436a1",
            "name": "DayOneExperienceApplication",
            "displayName": "Day One Experience",
            "features": "Easily Service Setup by automating the configuration, deployment and triggering the relevant pipelines to ingest your service metadata.",
            "fullyQualifiedName": "DayOneExperienceApplication",
            "version": 0.1,
            "updatedAt": 1743487002827,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/apps/27eacb23-cd9d-4563-95a1-73adc33436a1",
            "deleted": false,
            "provider": "user",
            "developer": "Collate Inc.",
            "developerUrl": "https://www.getcollate.io",
            "privacyPolicyUrl": "https://www.getcollate.io",
            "supportEmail": "support@getcollate.io",
            "className": "org.openmetadata.service.apps.bundles.dayOneExperience.DayOneExperienceApp",
            "appType": "internal",
            "scheduleType": "NoSchedule",
            "permission": "All",
            "bot": {
              "id": "b2aa190b-f1d0-4eeb-9f26-69e4591c0b0d",
              "type": "bot",
              "name": "DayOneExperienceApplicationBot",
              "fullyQualifiedName": "DayOneExperienceApplicationBot",
              "displayName": "DayOneExperienceApplicationBot",
              "deleted": false
            },
            "allowConfiguration": true,
            "system": false,
            "appConfiguration": {
              "type": "DayOneExperienceApplication",
              "active": true,
              "entityLink": null
            },
            "preview": false,
            "appScreenshots": [],
            "supportsInterrupt": false
          },
          {
            "id": "7cc8efb3-258b-4a6f-a795-019507cb0cf3",
            "name": "SearchIndexingApplication",
            "displayName": "Search Indexing",
            "features": "Sync OpenMetadata and Elastic Search and Recreate Indexes.",
            "fullyQualifiedName": "SearchIndexingApplication",
            "version": 0.1,
            "updatedAt": 1743487003065,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/apps/7cc8efb3-258b-4a6f-a795-019507cb0cf3",
            "deleted": false,
            "provider": "user",
            "developer": "Collate Inc.",
            "developerUrl": "https://www.getcollate.io",
            "privacyPolicyUrl": "https://www.getcollate.io",
            "supportEmail": "support@getcollate.io",
            "className": "org.openmetadata.service.apps.bundles.searchIndex.SearchIndexApp",
            "appType": "internal",
            "scheduleType": "ScheduledOrManual",
            "permission": "All",
            "bot": {
              "id": "a48a6599-65b7-42f4-9527-03838154b53e",
              "type": "bot",
              "name": "SearchIndexingApplicationBot",
              "fullyQualifiedName": "SearchIndexingApplicationBot",
              "displayName": "SearchIndexingApplicationBot",
              "deleted": false
            },
            "runtime": {
              "enabled": true
            },
            "allowConfiguration": true,
            "system": false,
            "appConfiguration": {
              "entities": ["all"],
              "batchSize": "100",
              "queueSize": 100,
              "maxBackoff": 10000,
              "maxRetries": 3,
              "payLoadSize": 104857600,
              "recreateIndex": false,
              "initialBackoff": 1000,
              "consumerThreads": 1,
              "producerThreads": 1,
              "maxConcurrentRequests": 100,
              "searchIndexMappingLanguage": "EN"
            },
            "preview": false,
            "appSchedule": {
              "scheduleTimeline": "Custom",
              "cronExpression": "0 0 * * *"
            },
            "appScreenshots": ["SearchIndexPic1.png"],
            "supportsInterrupt": true
          }
        ],
        "paging": {
          "total": 4
        }
      }
    }
  },
  "settingConfigAPI": {
    "getSettingsByType": {
      "request": {},
      "response": {
        "data": {
          "config_type": "lineageSettings",
          "config_value": {
            "upstreamDepth": 2,
            "downstreamDepth": 2,
            "lineageLayer": "EntityLineage"
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "119",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "method": "get",
          "url": "/system/settings/lineageSettings",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "config_type": "lineageSettings",
        "config_value": {
          "upstreamDepth": 2,
          "downstreamDepth": 2,
          "lineageLayer": "EntityLineage"
        }
      }
    }
  },
  "lineageAPI": {
    "getLineageDataByFQN": {
      "request": {},
      "response": {
        "data": {
          "nodes": {
            "elasticsearch_sample.table_search_index": {
              "entity": {
                "serviceType": "ElasticSearch",
                "updatedBy": "admin",
                "displayName": "TableSearchIndex",
                "entityType": "searchIndex",
                "description": "Table Search Index",
                "owners": [],
                "fullyQualifiedName": "elasticsearch_sample.table_search_index",
                "version": 0.1,
                "fqnHash": "444d95bef4f05efcf344649d7235370d.5490b31b36f440db8d9fd6b90ac1772a",
                "tags": [],
                "indexType": "Index",
                "descriptionStatus": "COMPLETE",
                "deleted": false,
                "followers": [],
                "tier": null,
                "service": {
                  "deleted": false,
                  "displayName": "elasticsearch_sample",
                  "name": "elasticsearch_sample",
                  "id": "25ea4d92-b476-4be1-8fe6-d9a780bcabfd",
                  "type": "searchService",
                  "fullyQualifiedName": "elasticsearch_sample"
                },
                "totalVotes": 0,
                "domain": null,
                "name": "table_search_index",
                "id": "77d04df6-d78d-4d91-acce-f35004329a80",
                "fields": [
                  {
                    "dataType": "TEXT",
                    "name": "name",
                    "description": "Table Entity Name.",
                    "fullyQualifiedName": "elasticsearch_sample.table_search_index.name",
                    "dataTypeDisplay": "text",
                    "tags": []
                  },
                  {
                    "dataType": "TEXT",
                    "name": "displayName",
                    "description": "Table Entity DisplayName.",
                    "fullyQualifiedName": "elasticsearch_sample.table_search_index.displayName",
                    "dataTypeDisplay": "text",
                    "tags": []
                  },
                  {
                    "dataType": "TEXT",
                    "name": "description",
                    "description": "Table Entity Description.",
                    "fullyQualifiedName": "elasticsearch_sample.table_search_index.description",
                    "dataTypeDisplay": "text",
                    "tags": []
                  },
                  {
                    "children": [
                      {
                        "dataType": "TEXT",
                        "name": "name",
                        "description": "Column Name.",
                        "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.name",
                        "dataTypeDisplay": "text",
                        "tags": []
                      },
                      {
                        "dataType": "TEXT",
                        "name": "displayName",
                        "description": "Column DisplayName.",
                        "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.displayName",
                        "dataTypeDisplay": "text",
                        "tags": []
                      },
                      {
                        "dataType": "TEXT",
                        "name": "description",
                        "description": "Column Description.",
                        "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.description",
                        "dataTypeDisplay": "text",
                        "tags": []
                      }
                    ],
                    "dataType": "NESTED",
                    "name": "columns",
                    "description": "Table Columns.",
                    "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns",
                    "dataTypeDisplay": "nested",
                    "tags": []
                  },
                  {
                    "dataType": "TEXT",
                    "name": "databaseSchema",
                    "description": "Database Schema that this table belongs to.",
                    "fullyQualifiedName": "elasticsearch_sample.table_search_index.databaseSchema",
                    "dataTypeDisplay": "text",
                    "tags": []
                  }
                ],
                "upstreamLineage": [],
                "updatedAt": 1743499297466
              },
              "paging": {
                "entityDownstreamCount": 0,
                "entityUpstreamCount": 0
              }
            }
          },
          "upstreamEdges": {},
          "downstreamEdges": {}
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "682",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:15 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fqn": "elasticsearch_sample.table_search_index",
            "type": "searchIndex",
            "upstreamDepth": 2,
            "downstreamDepth": 2,
            "query_filter": "",
            "includeDeleted": false,
            "size": 50
          },
          "method": "get",
          "url": "lineage/getLineage",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "nodes": {
          "elasticsearch_sample.table_search_index": {
            "entity": {
              "serviceType": "ElasticSearch",
              "updatedBy": "admin",
              "displayName": "TableSearchIndex",
              "entityType": "searchIndex",
              "description": "Table Search Index",
              "owners": [],
              "fullyQualifiedName": "elasticsearch_sample.table_search_index",
              "version": 0.1,
              "fqnHash": "444d95bef4f05efcf344649d7235370d.5490b31b36f440db8d9fd6b90ac1772a",
              "tags": [],
              "indexType": "Index",
              "descriptionStatus": "COMPLETE",
              "deleted": false,
              "followers": [],
              "tier": null,
              "service": {
                "deleted": false,
                "displayName": "elasticsearch_sample",
                "name": "elasticsearch_sample",
                "id": "25ea4d92-b476-4be1-8fe6-d9a780bcabfd",
                "type": "searchService",
                "fullyQualifiedName": "elasticsearch_sample"
              },
              "totalVotes": 0,
              "domain": null,
              "name": "table_search_index",
              "id": "77d04df6-d78d-4d91-acce-f35004329a80",
              "fields": [
                {
                  "dataType": "TEXT",
                  "name": "name",
                  "description": "Table Entity Name.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.name",
                  "dataTypeDisplay": "text",
                  "tags": []
                },
                {
                  "dataType": "TEXT",
                  "name": "displayName",
                  "description": "Table Entity DisplayName.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.displayName",
                  "dataTypeDisplay": "text",
                  "tags": []
                },
                {
                  "dataType": "TEXT",
                  "name": "description",
                  "description": "Table Entity Description.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.description",
                  "dataTypeDisplay": "text",
                  "tags": []
                },
                {
                  "children": [
                    {
                      "dataType": "TEXT",
                      "name": "name",
                      "description": "Column Name.",
                      "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.name",
                      "dataTypeDisplay": "text",
                      "tags": []
                    },
                    {
                      "dataType": "TEXT",
                      "name": "displayName",
                      "description": "Column DisplayName.",
                      "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.displayName",
                      "dataTypeDisplay": "text",
                      "tags": []
                    },
                    {
                      "dataType": "TEXT",
                      "name": "description",
                      "description": "Column Description.",
                      "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns.description",
                      "dataTypeDisplay": "text",
                      "tags": []
                    }
                  ],
                  "dataType": "NESTED",
                  "name": "columns",
                  "description": "Table Columns.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.columns",
                  "dataTypeDisplay": "nested",
                  "tags": []
                },
                {
                  "dataType": "TEXT",
                  "name": "databaseSchema",
                  "description": "Database Schema that this table belongs to.",
                  "fullyQualifiedName": "elasticsearch_sample.table_search_index.databaseSchema",
                  "dataTypeDisplay": "text",
                  "tags": []
                }
              ],
              "upstreamLineage": [],
              "updatedAt": 1743499297466
            },
            "paging": {
              "entityDownstreamCount": 0,
              "entityUpstreamCount": 0
            }
          }
        },
        "upstreamEdges": {},
        "downstreamEdges": {}
      }
    },
    "getPlatformLineage": {
      "request": {},
      "response": {
        "data": {
          "nodes": {
            "sample_airflow": {
              "entity": {
                "serviceType": "Airflow",
                "updatedBy": "admin",
                "displayName": "sample_airflow",
                "entityType": "pipelineService",
                "owners": [],
                "fullyQualifiedName": "sample_airflow",
                "version": 0.1,
                "fqnHash": "1489d267aaa4f9abe0137324a1c6b37a",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "sample_airflow",
                "id": "1320b345-4ee1-41ca-a612-d0b65c3f30e0",
                "upstreamLineage": [],
                "updatedAt": 1743499279629,
                "fqnParts": ["sample_airflow"]
              }
            },
            "mysql_sample": {
              "entity": {
                "serviceType": "Mysql",
                "updatedBy": "admin",
                "displayName": "mysql_sample",
                "entityType": "databaseService",
                "owners": [],
                "fullyQualifiedName": "mysql_sample",
                "version": 0.1,
                "fqnHash": "758e7c56f754cb4f6874da2b4b7498d1",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "mysql_sample",
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "upstreamLineage": [],
                "updatedAt": 1743499279306,
                "fqnParts": ["mysql_sample"]
              }
            },
            "Glue": {
              "entity": {
                "serviceType": "Glue",
                "updatedBy": "admin",
                "displayName": "Glue",
                "entityType": "databaseService",
                "owners": [],
                "fullyQualifiedName": "Glue",
                "version": 0.1,
                "fqnHash": "54208e4c83cffaab659a233d24fd5eca",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "Glue",
                "id": "87b19159-3bd4-40db-9d1b-f8cb741bae22",
                "upstreamLineage": [],
                "updatedAt": 1743499279200,
                "fqnParts": ["Glue"]
              }
            },
            "sample_data": {
              "entity": {
                "serviceType": "BigQuery",
                "updatedBy": "admin",
                "displayName": "sample_data",
                "entityType": "databaseService",
                "owners": [],
                "fullyQualifiedName": "sample_data",
                "version": 0.1,
                "fqnHash": "57bce840913768a9db449b70780a3edb",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "sample_data",
                "id": "6267bf1d-606a-4b18-b448-f5f003988920",
                "upstreamLineage": [],
                "updatedAt": 1743499279352,
                "fqnParts": ["sample_data"]
              }
            },
            "ometa_api_service": {
              "entity": {
                "serviceType": "Rest",
                "updatedBy": "admin",
                "displayName": "ometa_api_service",
                "entityType": "apiService",
                "owners": [],
                "fullyQualifiedName": "ometa_api_service",
                "version": 0.1,
                "fqnHash": "ff4780d679482273bb5b55b8c2a7023f",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "ometa_api_service",
                "id": "adfa8476-113f-4033-baf1-233d43ddc5e6",
                "upstreamLineage": [],
                "updatedAt": 1743499279967,
                "fqnParts": ["ometa_api_service"]
              }
            },
            "sample_superset": {
              "entity": {
                "serviceType": "Superset",
                "updatedBy": "admin",
                "displayName": "sample_superset",
                "entityType": "dashboardService",
                "owners": [],
                "fullyQualifiedName": "sample_superset",
                "version": 0.1,
                "fqnHash": "f73defe6aa8b06bb8d341a16be1429ff",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "sample_superset",
                "id": "ece55445-a2e5-4af3-b338-462839376aef",
                "upstreamLineage": [],
                "updatedAt": 1743499279574,
                "fqnParts": ["sample_superset"]
              }
            },
            "sample_api_service": {
              "entity": {
                "serviceType": "Rest",
                "updatedBy": "admin",
                "displayName": "sample_api_service",
                "entityType": "apiService",
                "owners": [],
                "fullyQualifiedName": "sample_api_service",
                "version": 0.1,
                "fqnHash": "9992c48fe878c80bbfed646e34791d7b",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "sample_api_service",
                "id": "e4135824-b7e7-4e0d-a868-84e4fd34b9da",
                "upstreamLineage": [],
                "updatedAt": 1743499279906,
                "fqnParts": ["sample_api_service"]
              }
            },
            "sample_kafka": {
              "entity": {
                "serviceType": "Kafka",
                "updatedBy": "admin",
                "displayName": "sample_kafka",
                "entityType": "messagingService",
                "owners": [],
                "fullyQualifiedName": "sample_kafka",
                "version": 0.1,
                "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "sample_kafka",
                "id": "d5e90e56-6743-440d-b967-17b8819266a5",
                "upstreamLineage": [],
                "updatedAt": 1743499279435,
                "fqnParts": ["sample_kafka"]
              }
            },
            "mlflow_svc": {
              "entity": {
                "serviceType": "Mlflow",
                "updatedBy": "admin",
                "displayName": "mlflow_svc",
                "entityType": "mlmodelService",
                "owners": [],
                "fullyQualifiedName": "mlflow_svc",
                "version": 0.1,
                "fqnHash": "4779292f52594574f66703d3057b10d2",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "mlflow_svc",
                "id": "570186d6-b1c7-43df-a911-8535e036e5f7",
                "upstreamLineage": [],
                "updatedAt": 1743499279697,
                "fqnParts": ["mlflow_svc"]
              }
            },
            "s3_storage_sample": {
              "entity": {
                "serviceType": "S3",
                "updatedBy": "admin",
                "displayName": "s3_storage_sample",
                "entityType": "storageService",
                "owners": [],
                "fullyQualifiedName": "s3_storage_sample",
                "version": 0.1,
                "fqnHash": "60b001607a1b89e0373a97bd29dffcea",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "s3_storage_sample",
                "id": "467f5d1a-f840-4f92-bde0-db9dd2652592",
                "upstreamLineage": [],
                "updatedAt": 1743499279768,
                "fqnParts": ["s3_storage_sample"]
              }
            },
            "elasticsearch_sample": {
              "entity": {
                "serviceType": "ElasticSearch",
                "updatedBy": "admin",
                "displayName": "elasticsearch_sample",
                "entityType": "searchService",
                "owners": [],
                "fullyQualifiedName": "elasticsearch_sample",
                "version": 0.1,
                "fqnHash": "444d95bef4f05efcf344649d7235370d",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "elasticsearch_sample",
                "id": "25ea4d92-b476-4be1-8fe6-d9a780bcabfd",
                "upstreamLineage": [],
                "updatedAt": 1743499279836,
                "fqnParts": ["elasticsearch_sample"]
              }
            },
            "sample_looker": {
              "entity": {
                "serviceType": "Looker",
                "updatedBy": "admin",
                "displayName": "sample_looker",
                "entityType": "dashboardService",
                "owners": [],
                "fullyQualifiedName": "sample_looker",
                "version": 0.1,
                "fqnHash": "22340bb126957f3d931049375014b7f6",
                "descriptionStatus": "INCOMPLETE",
                "deleted": false,
                "followers": [],
                "totalVotes": 0,
                "domain": null,
                "name": "sample_looker",
                "id": "de4c1b13-7538-4955-8af0-5f3f78c111e6",
                "upstreamLineage": [],
                "updatedAt": 1743499279506,
                "fqnParts": ["sample_looker"]
              }
            }
          },
          "upstreamEdges": {},
          "downstreamEdges": {}
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "1316",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:02:31 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "view": "service",
            "upstreamDepth": 2,
            "downstreamDepth": 2,
            "includeDeleted": false,
            "size": 50
          },
          "method": "get",
          "url": "lineage/getPlatformLineage",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "nodes": {
          "sample_airflow": {
            "entity": {
              "serviceType": "Airflow",
              "updatedBy": "admin",
              "displayName": "sample_airflow",
              "entityType": "pipelineService",
              "owners": [],
              "fullyQualifiedName": "sample_airflow",
              "version": 0.1,
              "fqnHash": "1489d267aaa4f9abe0137324a1c6b37a",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "sample_airflow",
              "id": "1320b345-4ee1-41ca-a612-d0b65c3f30e0",
              "upstreamLineage": [],
              "updatedAt": 1743499279629,
              "fqnParts": ["sample_airflow"]
            }
          },
          "mysql_sample": {
            "entity": {
              "serviceType": "Mysql",
              "updatedBy": "admin",
              "displayName": "mysql_sample",
              "entityType": "databaseService",
              "owners": [],
              "fullyQualifiedName": "mysql_sample",
              "version": 0.1,
              "fqnHash": "758e7c56f754cb4f6874da2b4b7498d1",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "mysql_sample",
              "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
              "upstreamLineage": [],
              "updatedAt": 1743499279306,
              "fqnParts": ["mysql_sample"]
            }
          },
          "Glue": {
            "entity": {
              "serviceType": "Glue",
              "updatedBy": "admin",
              "displayName": "Glue",
              "entityType": "databaseService",
              "owners": [],
              "fullyQualifiedName": "Glue",
              "version": 0.1,
              "fqnHash": "54208e4c83cffaab659a233d24fd5eca",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "Glue",
              "id": "87b19159-3bd4-40db-9d1b-f8cb741bae22",
              "upstreamLineage": [],
              "updatedAt": 1743499279200,
              "fqnParts": ["Glue"]
            }
          },
          "sample_data": {
            "entity": {
              "serviceType": "BigQuery",
              "updatedBy": "admin",
              "displayName": "sample_data",
              "entityType": "databaseService",
              "owners": [],
              "fullyQualifiedName": "sample_data",
              "version": 0.1,
              "fqnHash": "57bce840913768a9db449b70780a3edb",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "sample_data",
              "id": "6267bf1d-606a-4b18-b448-f5f003988920",
              "upstreamLineage": [],
              "updatedAt": 1743499279352,
              "fqnParts": ["sample_data"]
            }
          },
          "ometa_api_service": {
            "entity": {
              "serviceType": "Rest",
              "updatedBy": "admin",
              "displayName": "ometa_api_service",
              "entityType": "apiService",
              "owners": [],
              "fullyQualifiedName": "ometa_api_service",
              "version": 0.1,
              "fqnHash": "ff4780d679482273bb5b55b8c2a7023f",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "ometa_api_service",
              "id": "adfa8476-113f-4033-baf1-233d43ddc5e6",
              "upstreamLineage": [],
              "updatedAt": 1743499279967,
              "fqnParts": ["ometa_api_service"]
            }
          },
          "sample_superset": {
            "entity": {
              "serviceType": "Superset",
              "updatedBy": "admin",
              "displayName": "sample_superset",
              "entityType": "dashboardService",
              "owners": [],
              "fullyQualifiedName": "sample_superset",
              "version": 0.1,
              "fqnHash": "f73defe6aa8b06bb8d341a16be1429ff",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "sample_superset",
              "id": "ece55445-a2e5-4af3-b338-462839376aef",
              "upstreamLineage": [],
              "updatedAt": 1743499279574,
              "fqnParts": ["sample_superset"]
            }
          },
          "sample_api_service": {
            "entity": {
              "serviceType": "Rest",
              "updatedBy": "admin",
              "displayName": "sample_api_service",
              "entityType": "apiService",
              "owners": [],
              "fullyQualifiedName": "sample_api_service",
              "version": 0.1,
              "fqnHash": "9992c48fe878c80bbfed646e34791d7b",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "sample_api_service",
              "id": "e4135824-b7e7-4e0d-a868-84e4fd34b9da",
              "upstreamLineage": [],
              "updatedAt": 1743499279906,
              "fqnParts": ["sample_api_service"]
            }
          },
          "sample_kafka": {
            "entity": {
              "serviceType": "Kafka",
              "updatedBy": "admin",
              "displayName": "sample_kafka",
              "entityType": "messagingService",
              "owners": [],
              "fullyQualifiedName": "sample_kafka",
              "version": 0.1,
              "fqnHash": "b992c29caf29ed1d3dbb276ab4c5032c",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "sample_kafka",
              "id": "d5e90e56-6743-440d-b967-17b8819266a5",
              "upstreamLineage": [],
              "updatedAt": 1743499279435,
              "fqnParts": ["sample_kafka"]
            }
          },
          "mlflow_svc": {
            "entity": {
              "serviceType": "Mlflow",
              "updatedBy": "admin",
              "displayName": "mlflow_svc",
              "entityType": "mlmodelService",
              "owners": [],
              "fullyQualifiedName": "mlflow_svc",
              "version": 0.1,
              "fqnHash": "4779292f52594574f66703d3057b10d2",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "mlflow_svc",
              "id": "570186d6-b1c7-43df-a911-8535e036e5f7",
              "upstreamLineage": [],
              "updatedAt": 1743499279697,
              "fqnParts": ["mlflow_svc"]
            }
          },
          "s3_storage_sample": {
            "entity": {
              "serviceType": "S3",
              "updatedBy": "admin",
              "displayName": "s3_storage_sample",
              "entityType": "storageService",
              "owners": [],
              "fullyQualifiedName": "s3_storage_sample",
              "version": 0.1,
              "fqnHash": "60b001607a1b89e0373a97bd29dffcea",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "s3_storage_sample",
              "id": "467f5d1a-f840-4f92-bde0-db9dd2652592",
              "upstreamLineage": [],
              "updatedAt": 1743499279768,
              "fqnParts": ["s3_storage_sample"]
            }
          },
          "elasticsearch_sample": {
            "entity": {
              "serviceType": "ElasticSearch",
              "updatedBy": "admin",
              "displayName": "elasticsearch_sample",
              "entityType": "searchService",
              "owners": [],
              "fullyQualifiedName": "elasticsearch_sample",
              "version": 0.1,
              "fqnHash": "444d95bef4f05efcf344649d7235370d",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "elasticsearch_sample",
              "id": "25ea4d92-b476-4be1-8fe6-d9a780bcabfd",
              "upstreamLineage": [],
              "updatedAt": 1743499279836,
              "fqnParts": ["elasticsearch_sample"]
            }
          },
          "sample_looker": {
            "entity": {
              "serviceType": "Looker",
              "updatedBy": "admin",
              "displayName": "sample_looker",
              "entityType": "dashboardService",
              "owners": [],
              "fullyQualifiedName": "sample_looker",
              "version": 0.1,
              "fqnHash": "22340bb126957f3d931049375014b7f6",
              "descriptionStatus": "INCOMPLETE",
              "deleted": false,
              "followers": [],
              "totalVotes": 0,
              "domain": null,
              "name": "sample_looker",
              "id": "de4c1b13-7538-4955-8af0-5f3f78c111e6",
              "upstreamLineage": [],
              "updatedAt": 1743499279506,
              "fqnParts": ["sample_looker"]
            }
          }
        },
        "upstreamEdges": {},
        "downstreamEdges": {}
      }
    },
    "getDataQualityLineage": {
      "request": {},
      "response": {
        "data": {
          "nodes": [],
          "edges": []
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "23",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:12:03 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fqn": "mysql_sample.default.posts_db.Comments",
            "upstreamDepth": 1,
            "includeDeleted": false
          },
          "method": "get",
          "url": "lineage/getDataQualityLineage",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "nodes": [],
        "edges": []
      }
    }
  },
  "DataInsightAPI": {
    "getChartPreviewByName": {
      "request": {},
      "response": {
        "data": {
          "results": []
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "14",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:27 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "start": 1742294606844,
            "end": 1743504206844
          },
          "method": "get",
          "url": "/analytics/dataInsights/system/charts/name/total_data_assets/data",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "KpiAPI": {
    "getListKPIs": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 10:43:27 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "dataInsightChart"
          },
          "method": "get",
          "url": "/kpi",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "tagAPI": {
    "getTags": {
      "request": {},
      "response": {
        "data": {
          "data": [
            {
              "id": "69893ef0-7832-411b-b705-73c92314a85d",
              "name": "Tier1",
              "fullyQualifiedName": "Tier.Tier1",
              "description": "**Critical Source of Truth business data assets of an organization**\n\n- Used in critical metrics and dashboards to drive business and product decisions\n\n- Used in critical compliance reporting to regulators, govt entities, and third party\n\n- Used in brand or revenue impacting online user-facing experiences (search results, advertisement, promotions, and experimentation)\n\n- Other high impact use, such as ML models and fraud detection\n\n- Source used to derive other critical Tier-1 datasets",
              "classification": {
                "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
                "type": "classification",
                "name": "Tier",
                "fullyQualifiedName": "Tier",
                "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
                "displayName": "Tier",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
              },
              "version": 0.1,
              "updatedAt": 1743486999525,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tags/69893ef0-7832-411b-b705-73c92314a85d",
              "deprecated": false,
              "deleted": false,
              "provider": "system",
              "disabled": false,
              "mutuallyExclusive": false
            },
            {
              "id": "5ebe2907-5d34-42b2-bffb-4e826d8e8969",
              "name": "Tier2",
              "fullyQualifiedName": "Tier.Tier2",
              "description": "**Important business datasets for your company (not as critical as Tier 1)**\n\n- Used in important business metrics, product metrics, and dashboards to drive internal decisions\n\n- Used in important compliance reporting to major regulators, govt entities, and third party\n\n- Used for less critical online user-facing experiences (user activity, user behavior)\n\n- Source used to derive other critical Tier-2 datasets",
              "classification": {
                "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
                "type": "classification",
                "name": "Tier",
                "fullyQualifiedName": "Tier",
                "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
                "displayName": "Tier",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
              },
              "version": 0.1,
              "updatedAt": 1743486999578,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tags/5ebe2907-5d34-42b2-bffb-4e826d8e8969",
              "deprecated": false,
              "deleted": false,
              "provider": "system",
              "disabled": false,
              "mutuallyExclusive": false
            },
            {
              "id": "2ef5f782-9f5b-4619-b3b5-5cf206754522",
              "name": "Tier3",
              "fullyQualifiedName": "Tier.Tier3",
              "description": "**Department/group level datasets that are typically non-business and general internal system**\n\n- Used in product metrics, and dashboards to drive product decisions\n\n- Used to track operational metrics of internal systems\n\n- Source used to derive other critical Tier-3 datasets",
              "classification": {
                "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
                "type": "classification",
                "name": "Tier",
                "fullyQualifiedName": "Tier",
                "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
                "displayName": "Tier",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
              },
              "version": 0.1,
              "updatedAt": 1743486999597,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tags/2ef5f782-9f5b-4619-b3b5-5cf206754522",
              "deprecated": false,
              "deleted": false,
              "provider": "system",
              "disabled": false,
              "mutuallyExclusive": false
            },
            {
              "id": "b5329238-3d97-4010-9b20-e089d4fa411a",
              "name": "Tier4",
              "fullyQualifiedName": "Tier.Tier4",
              "description": "**Team level datasets that are typically non-business and general internal system**\n\n- Used in product metrics, and dashboards to drive team decisions\n\n- Used to track operational metrics of internal systems owned by the team\n\n- Source used to derive other critical Tier-4 datasets",
              "classification": {
                "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
                "type": "classification",
                "name": "Tier",
                "fullyQualifiedName": "Tier",
                "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
                "displayName": "Tier",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
              },
              "version": 0.1,
              "updatedAt": 1743486999614,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tags/b5329238-3d97-4010-9b20-e089d4fa411a",
              "deprecated": false,
              "deleted": false,
              "provider": "system",
              "disabled": false,
              "mutuallyExclusive": false
            },
            {
              "id": "d7807893-58bb-49b7-8897-64e1dd4009cb",
              "name": "Tier5",
              "fullyQualifiedName": "Tier.Tier5",
              "description": "**Private/Unused data assets - No impact beyond individual users**\n\n- Data assets without any ownership with no usage in the last 60 days\n\n- Data assets owned by individuals without team ownership\n\n",
              "classification": {
                "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
                "type": "classification",
                "name": "Tier",
                "fullyQualifiedName": "Tier",
                "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
                "displayName": "Tier",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
              },
              "version": 0.1,
              "updatedAt": 1743486999632,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tags/d7807893-58bb-49b7-8897-64e1dd4009cb",
              "deprecated": false,
              "deleted": false,
              "provider": "system",
              "disabled": false,
              "mutuallyExclusive": false
            }
          ],
          "paging": {
            "total": 5
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "1274",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:03:51 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "parent": "Tier",
            "limit": 50
          },
          "method": "get",
          "url": "/tags",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "data": [
          {
            "id": "69893ef0-7832-411b-b705-73c92314a85d",
            "name": "Tier1",
            "fullyQualifiedName": "Tier.Tier1",
            "description": "**Critical Source of Truth business data assets of an organization**\n\n- Used in critical metrics and dashboards to drive business and product decisions\n\n- Used in critical compliance reporting to regulators, govt entities, and third party\n\n- Used in brand or revenue impacting online user-facing experiences (search results, advertisement, promotions, and experimentation)\n\n- Other high impact use, such as ML models and fraud detection\n\n- Source used to derive other critical Tier-1 datasets",
            "classification": {
              "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
              "type": "classification",
              "name": "Tier",
              "fullyQualifiedName": "Tier",
              "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
              "displayName": "Tier",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
            },
            "version": 0.1,
            "updatedAt": 1743486999525,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/tags/69893ef0-7832-411b-b705-73c92314a85d",
            "deprecated": false,
            "deleted": false,
            "provider": "system",
            "disabled": false,
            "mutuallyExclusive": false
          },
          {
            "id": "5ebe2907-5d34-42b2-bffb-4e826d8e8969",
            "name": "Tier2",
            "fullyQualifiedName": "Tier.Tier2",
            "description": "**Important business datasets for your company (not as critical as Tier 1)**\n\n- Used in important business metrics, product metrics, and dashboards to drive internal decisions\n\n- Used in important compliance reporting to major regulators, govt entities, and third party\n\n- Used for less critical online user-facing experiences (user activity, user behavior)\n\n- Source used to derive other critical Tier-2 datasets",
            "classification": {
              "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
              "type": "classification",
              "name": "Tier",
              "fullyQualifiedName": "Tier",
              "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
              "displayName": "Tier",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
            },
            "version": 0.1,
            "updatedAt": 1743486999578,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/tags/5ebe2907-5d34-42b2-bffb-4e826d8e8969",
            "deprecated": false,
            "deleted": false,
            "provider": "system",
            "disabled": false,
            "mutuallyExclusive": false
          },
          {
            "id": "2ef5f782-9f5b-4619-b3b5-5cf206754522",
            "name": "Tier3",
            "fullyQualifiedName": "Tier.Tier3",
            "description": "**Department/group level datasets that are typically non-business and general internal system**\n\n- Used in product metrics, and dashboards to drive product decisions\n\n- Used to track operational metrics of internal systems\n\n- Source used to derive other critical Tier-3 datasets",
            "classification": {
              "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
              "type": "classification",
              "name": "Tier",
              "fullyQualifiedName": "Tier",
              "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
              "displayName": "Tier",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
            },
            "version": 0.1,
            "updatedAt": 1743486999597,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/tags/2ef5f782-9f5b-4619-b3b5-5cf206754522",
            "deprecated": false,
            "deleted": false,
            "provider": "system",
            "disabled": false,
            "mutuallyExclusive": false
          },
          {
            "id": "b5329238-3d97-4010-9b20-e089d4fa411a",
            "name": "Tier4",
            "fullyQualifiedName": "Tier.Tier4",
            "description": "**Team level datasets that are typically non-business and general internal system**\n\n- Used in product metrics, and dashboards to drive team decisions\n\n- Used to track operational metrics of internal systems owned by the team\n\n- Source used to derive other critical Tier-4 datasets",
            "classification": {
              "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
              "type": "classification",
              "name": "Tier",
              "fullyQualifiedName": "Tier",
              "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
              "displayName": "Tier",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
            },
            "version": 0.1,
            "updatedAt": 1743486999614,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/tags/b5329238-3d97-4010-9b20-e089d4fa411a",
            "deprecated": false,
            "deleted": false,
            "provider": "system",
            "disabled": false,
            "mutuallyExclusive": false
          },
          {
            "id": "d7807893-58bb-49b7-8897-64e1dd4009cb",
            "name": "Tier5",
            "fullyQualifiedName": "Tier.Tier5",
            "description": "**Private/Unused data assets - No impact beyond individual users**\n\n- Data assets without any ownership with no usage in the last 60 days\n\n- Data assets owned by individuals without team ownership\n\n",
            "classification": {
              "id": "370f2e94-bff3-4997-8bf2-9712e71f7f5c",
              "type": "classification",
              "name": "Tier",
              "fullyQualifiedName": "Tier",
              "description": "Tags related to tiering of the data. Tiers capture the business importance of data. When a data asset is tagged with `Tier` tag, all the upstream data assets used for producing it will also be labeled with the same tag. This will help upstream data asset owners to understand the critical purposes their data is being used.",
              "displayName": "Tier",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/classifications/370f2e94-bff3-4997-8bf2-9712e71f7f5c"
            },
            "version": 0.1,
            "updatedAt": 1743486999632,
            "updatedBy": "admin",
            "href": "http://localhost:8585/api/v1/tags/d7807893-58bb-49b7-8897-64e1dd4009cb",
            "deprecated": false,
            "deleted": false,
            "provider": "system",
            "disabled": false,
            "mutuallyExclusive": false
          }
        ],
        "paging": {
          "total": 5
        }
      }
    }
  },
  "metadataTypeAPI": {
    "getTypeByFQN": {
      "request": {},
      "response": {
        "data": {
          "id": "5990df66-ff65-4f51-9cb2-8ede51f6d23e",
          "name": "databaseSchema",
          "fullyQualifiedName": "databaseSchema",
          "displayName": "databaseSchema",
          "description": "\"This schema defines the Database Schema entity. A `Database Schema` is collection of tables, views, stored procedures, and other database objects.\"",
          "category": "entity",
          "nameSpace": "data",
          "schema": "{\n  \"$id\" : \"https://open-metadata.org/schema/entity/data/databaseSchema.json\",\n  \"$schema\" : \"http://json-schema.org/draft-07/schema#\",\n  \"title\" : \"Database Schema\",\n  \"$comment\" : \"@om-entity-type\",\n  \"description\" : \"This schema defines the Database Schema entity. A `Database Schema` is collection of tables, views, stored procedures, and other database objects.\",\n  \"type\" : \"object\",\n  \"javaType\" : \"org.openmetadata.schema.entity.data.DatabaseSchema\",\n  \"javaInterfaces\" : [ \"org.openmetadata.schema.EntityInterface\" ],\n  \"definitions\" : { },\n  \"properties\" : {\n    \"id\" : {\n      \"description\" : \"Unique identifier that identifies this schema instance.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/uuid\"\n    },\n    \"name\" : {\n      \"description\" : \"Name that identifies the schema.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/entityName\"\n    },\n    \"fullyQualifiedName\" : {\n      \"description\" : \"Name that uniquely identifies a schema in the format 'ServiceName.DatabaseName.SchemaName'.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/fullyQualifiedEntityName\"\n    },\n    \"displayName\" : {\n      \"description\" : \"Display Name that identifies this schema.\",\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"description\" : \"Description of the schema instance.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/markdown\"\n    },\n    \"dataProducts\" : {\n      \"description\" : \"List of data products this entity is part of.\",\n      \"$ref\" : \"../../type/entityReferenceList.json\"\n    },\n    \"version\" : {\n      \"description\" : \"Metadata version of the entity.\",\n      \"$ref\" : \"../../type/entityHistory.json#/definitions/entityVersion\"\n    },\n    \"updatedAt\" : {\n      \"description\" : \"Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/timestamp\"\n    },\n    \"updatedBy\" : {\n      \"description\" : \"User who made the update.\",\n      \"type\" : \"string\"\n    },\n    \"href\" : {\n      \"description\" : \"Link to the resource corresponding to this entity.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/href\"\n    },\n    \"owners\" : {\n      \"description\" : \"Owner of this schema.\",\n      \"$ref\" : \"../../type/entityReferenceList.json\"\n    },\n    \"service\" : {\n      \"description\" : \"Link to the database cluster/service where this schema is hosted in.\",\n      \"$ref\" : \"../../type/entityReference.json\"\n    },\n    \"serviceType\" : {\n      \"description\" : \"Service type where this schema is hosted in.\",\n      \"$ref\" : \"../services/databaseService.json#/definitions/databaseServiceType\"\n    },\n    \"database\" : {\n      \"description\" : \"Reference to Database that contains this table.\",\n      \"$ref\" : \"../../type/entityReference.json\"\n    },\n    \"tables\" : {\n      \"description\" : \"References to tables in the schema.\",\n      \"$ref\" : \"../../type/entityReferenceList.json\"\n    },\n    \"usageSummary\" : {\n      \"description\" : \"Latest usage information for this database.\",\n      \"$ref\" : \"../../type/usageDetails.json\",\n      \"default\" : null\n    },\n    \"tags\" : {\n      \"description\" : \"Tags for this Database Schema Service.\",\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"../../type/tagLabel.json\"\n      },\n      \"default\" : [ ]\n    },\n    \"changeDescription\" : {\n      \"description\" : \"Change that lead to this version of the entity.\",\n      \"$ref\" : \"../../type/entityHistory.json#/definitions/changeDescription\"\n    },\n    \"incrementalChangeDescription\" : {\n      \"description\" : \"Change that lead to this version of the entity.\",\n      \"$ref\" : \"../../type/entityHistory.json#/definitions/changeDescription\"\n    },\n    \"deleted\" : {\n      \"description\" : \"When `true` indicates the entity has been soft deleted.\",\n      \"type\" : \"boolean\",\n      \"default\" : false\n    },\n    \"retentionPeriod\" : {\n      \"description\" : \"Retention period of the data in the database schema. Period is expressed as duration in ISO 8601 format in UTC. Example - `P23DT23H`. When not set, the retention period is inherited from the parent database, if it exists.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/duration\"\n    },\n    \"extension\" : {\n      \"description\" : \"Entity extension data with custom attributes added to the entity.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/entityExtension\"\n    },\n    \"sourceUrl\" : {\n      \"description\" : \"Source URL of database schema.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/sourceUrl\"\n    },\n    \"domain\" : {\n      \"description\" : \"Domain the Database Schema belongs to. When not set, the Schema inherits the domain from the database it belongs to.\",\n      \"$ref\" : \"../../type/entityReference.json\"\n    },\n    \"votes\" : {\n      \"description\" : \"Votes on the entity.\",\n      \"$ref\" : \"../../type/votes.json\"\n    },\n    \"lifeCycle\" : {\n      \"description\" : \"Life Cycle properties of the entity\",\n      \"$ref\" : \"../../type/lifeCycle.json\"\n    },\n    \"certification\" : {\n      \"$ref\" : \"../../type/assetCertification.json\"\n    },\n    \"sourceHash\" : {\n      \"description\" : \"Source hash of the entity\",\n      \"type\" : \"string\",\n      \"minLength\" : 1,\n      \"maxLength\" : 32\n    },\n    \"databaseSchemaProfilerConfig\" : {\n      \"type\" : \"object\",\n      \"javaType\" : \"org.openmetadata.schema.type.DatabaseSchemaProfilerConfig\",\n      \"description\" : \"This schema defines the type for Schema profile config.\",\n      \"properties\" : {\n        \"profileSample\" : {\n          \"description\" : \"Percentage of data or no. of rows we want to execute the profiler and tests on\",\n          \"type\" : \"number\",\n          \"default\" : null\n        },\n        \"profileSampleType\" : {\n          \"$ref\" : \"./table.json#/definitions/profileSampleType\"\n        },\n        \"sampleDataCount\" : {\n          \"description\" : \"Number of row of sample data to be generated\",\n          \"type\" : \"integer\",\n          \"default\" : 50,\n          \"title\" : \"Sample Data Rows Count\"\n        },\n        \"samplingMethodType\" : {\n          \"$ref\" : \"./table.json#/definitions/samplingMethodType\"\n        },\n        \"sampleDataStorageConfig\" : {\n          \"title\" : \"Storage Config for Sample Data\",\n          \"$ref\" : \"../services/connections/connectionBasicType.json#/definitions/sampleDataStorageConfig\"\n        },\n        \"randomizedSample\" : {\n          \"description\" : \"Whether to randomize the sample data or not.\",\n          \"type\" : \"boolean\",\n          \"default\" : true\n        }\n      }\n    }\n  },\n  \"required\" : [ \"id\", \"name\", \"database\", \"service\" ],\n  \"additionalProperties\" : false\n}",
          "customProperties": [],
          "version": 0.1,
          "updatedAt": 1743487004003,
          "updatedBy": "admin",
          "href": "http://localhost:8585/api/v1/metadata/types/5990df66-ff65-4f51-9cb2-8ede51f6d23e"
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "1879",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:08:17 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "customProperties"
          },
          "method": "get",
          "url": "/metadata/types/name/databaseSchema",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "id": "5990df66-ff65-4f51-9cb2-8ede51f6d23e",
        "name": "databaseSchema",
        "fullyQualifiedName": "databaseSchema",
        "displayName": "databaseSchema",
        "description": "\"This schema defines the Database Schema entity. A `Database Schema` is collection of tables, views, stored procedures, and other database objects.\"",
        "category": "entity",
        "nameSpace": "data",
        "schema": "{\n  \"$id\" : \"https://open-metadata.org/schema/entity/data/databaseSchema.json\",\n  \"$schema\" : \"http://json-schema.org/draft-07/schema#\",\n  \"title\" : \"Database Schema\",\n  \"$comment\" : \"@om-entity-type\",\n  \"description\" : \"This schema defines the Database Schema entity. A `Database Schema` is collection of tables, views, stored procedures, and other database objects.\",\n  \"type\" : \"object\",\n  \"javaType\" : \"org.openmetadata.schema.entity.data.DatabaseSchema\",\n  \"javaInterfaces\" : [ \"org.openmetadata.schema.EntityInterface\" ],\n  \"definitions\" : { },\n  \"properties\" : {\n    \"id\" : {\n      \"description\" : \"Unique identifier that identifies this schema instance.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/uuid\"\n    },\n    \"name\" : {\n      \"description\" : \"Name that identifies the schema.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/entityName\"\n    },\n    \"fullyQualifiedName\" : {\n      \"description\" : \"Name that uniquely identifies a schema in the format 'ServiceName.DatabaseName.SchemaName'.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/fullyQualifiedEntityName\"\n    },\n    \"displayName\" : {\n      \"description\" : \"Display Name that identifies this schema.\",\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"description\" : \"Description of the schema instance.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/markdown\"\n    },\n    \"dataProducts\" : {\n      \"description\" : \"List of data products this entity is part of.\",\n      \"$ref\" : \"../../type/entityReferenceList.json\"\n    },\n    \"version\" : {\n      \"description\" : \"Metadata version of the entity.\",\n      \"$ref\" : \"../../type/entityHistory.json#/definitions/entityVersion\"\n    },\n    \"updatedAt\" : {\n      \"description\" : \"Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/timestamp\"\n    },\n    \"updatedBy\" : {\n      \"description\" : \"User who made the update.\",\n      \"type\" : \"string\"\n    },\n    \"href\" : {\n      \"description\" : \"Link to the resource corresponding to this entity.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/href\"\n    },\n    \"owners\" : {\n      \"description\" : \"Owner of this schema.\",\n      \"$ref\" : \"../../type/entityReferenceList.json\"\n    },\n    \"service\" : {\n      \"description\" : \"Link to the database cluster/service where this schema is hosted in.\",\n      \"$ref\" : \"../../type/entityReference.json\"\n    },\n    \"serviceType\" : {\n      \"description\" : \"Service type where this schema is hosted in.\",\n      \"$ref\" : \"../services/databaseService.json#/definitions/databaseServiceType\"\n    },\n    \"database\" : {\n      \"description\" : \"Reference to Database that contains this table.\",\n      \"$ref\" : \"../../type/entityReference.json\"\n    },\n    \"tables\" : {\n      \"description\" : \"References to tables in the schema.\",\n      \"$ref\" : \"../../type/entityReferenceList.json\"\n    },\n    \"usageSummary\" : {\n      \"description\" : \"Latest usage information for this database.\",\n      \"$ref\" : \"../../type/usageDetails.json\",\n      \"default\" : null\n    },\n    \"tags\" : {\n      \"description\" : \"Tags for this Database Schema Service.\",\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"../../type/tagLabel.json\"\n      },\n      \"default\" : [ ]\n    },\n    \"changeDescription\" : {\n      \"description\" : \"Change that lead to this version of the entity.\",\n      \"$ref\" : \"../../type/entityHistory.json#/definitions/changeDescription\"\n    },\n    \"incrementalChangeDescription\" : {\n      \"description\" : \"Change that lead to this version of the entity.\",\n      \"$ref\" : \"../../type/entityHistory.json#/definitions/changeDescription\"\n    },\n    \"deleted\" : {\n      \"description\" : \"When `true` indicates the entity has been soft deleted.\",\n      \"type\" : \"boolean\",\n      \"default\" : false\n    },\n    \"retentionPeriod\" : {\n      \"description\" : \"Retention period of the data in the database schema. Period is expressed as duration in ISO 8601 format in UTC. Example - `P23DT23H`. When not set, the retention period is inherited from the parent database, if it exists.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/duration\"\n    },\n    \"extension\" : {\n      \"description\" : \"Entity extension data with custom attributes added to the entity.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/entityExtension\"\n    },\n    \"sourceUrl\" : {\n      \"description\" : \"Source URL of database schema.\",\n      \"$ref\" : \"../../type/basic.json#/definitions/sourceUrl\"\n    },\n    \"domain\" : {\n      \"description\" : \"Domain the Database Schema belongs to. When not set, the Schema inherits the domain from the database it belongs to.\",\n      \"$ref\" : \"../../type/entityReference.json\"\n    },\n    \"votes\" : {\n      \"description\" : \"Votes on the entity.\",\n      \"$ref\" : \"../../type/votes.json\"\n    },\n    \"lifeCycle\" : {\n      \"description\" : \"Life Cycle properties of the entity\",\n      \"$ref\" : \"../../type/lifeCycle.json\"\n    },\n    \"certification\" : {\n      \"$ref\" : \"../../type/assetCertification.json\"\n    },\n    \"sourceHash\" : {\n      \"description\" : \"Source hash of the entity\",\n      \"type\" : \"string\",\n      \"minLength\" : 1,\n      \"maxLength\" : 32\n    },\n    \"databaseSchemaProfilerConfig\" : {\n      \"type\" : \"object\",\n      \"javaType\" : \"org.openmetadata.schema.type.DatabaseSchemaProfilerConfig\",\n      \"description\" : \"This schema defines the type for Schema profile config.\",\n      \"properties\" : {\n        \"profileSample\" : {\n          \"description\" : \"Percentage of data or no. of rows we want to execute the profiler and tests on\",\n          \"type\" : \"number\",\n          \"default\" : null\n        },\n        \"profileSampleType\" : {\n          \"$ref\" : \"./table.json#/definitions/profileSampleType\"\n        },\n        \"sampleDataCount\" : {\n          \"description\" : \"Number of row of sample data to be generated\",\n          \"type\" : \"integer\",\n          \"default\" : 50,\n          \"title\" : \"Sample Data Rows Count\"\n        },\n        \"samplingMethodType\" : {\n          \"$ref\" : \"./table.json#/definitions/samplingMethodType\"\n        },\n        \"sampleDataStorageConfig\" : {\n          \"title\" : \"Storage Config for Sample Data\",\n          \"$ref\" : \"../services/connections/connectionBasicType.json#/definitions/sampleDataStorageConfig\"\n        },\n        \"randomizedSample\" : {\n          \"description\" : \"Whether to randomize the sample data or not.\",\n          \"type\" : \"boolean\",\n          \"default\" : true\n        }\n      }\n    }\n  },\n  \"required\" : [ \"id\", \"name\", \"database\", \"service\" ],\n  \"additionalProperties\" : false\n}",
        "customProperties": [],
        "version": 0.1,
        "updatedAt": 1743487004003,
        "updatedBy": "admin",
        "href": "http://localhost:8585/api/v1/metadata/types/5990df66-ff65-4f51-9cb2-8ede51f6d23e"
      }
    }
  },
  "apiEndpointAPI": {
    "getApiEndpoints": {
      "request": {
        "params": {
          "fields": "tags,owners"
        },
        "fqn": "ometa_api_service.tables.listTables"
      },
      "response": {
        "data": {
          "id": "6ae15891-eb35-4e94-997e-ce5c4b2f8edc",
          "name": "listTables",
          "displayName": "List tables",
          "fullyQualifiedName": "ometa_api_service.tables.listTables",
          "description": "Get a list of tables",
          "version": 0.1,
          "updatedAt": 1743499317240,
          "updatedBy": "admin",
          "endpointURL": "https://docs.open-metadata.org/api/v1/tables",
          "requestMethod": "GET",
          "responseSchema": {
            "schemaType": "JSON",
            "schemaFields": [
              {
                "name": "data",
                "dataType": "RECORD",
                "description": "list of tables",
                "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data",
                "tags": [],
                "children": [
                  {
                    "name": "id",
                    "dataType": "STRING",
                    "description": "ID of table",
                    "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data.id",
                    "tags": []
                  },
                  {
                    "name": "name",
                    "dataType": "STRING",
                    "description": "name of table",
                    "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data.name",
                    "tags": []
                  },
                  {
                    "name": "columns",
                    "dataType": "RECORD",
                    "description": "columns of table",
                    "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data.columns",
                    "tags": [],
                    "children": []
                  }
                ]
              },
              {
                "name": "errors",
                "dataType": "RECORD",
                "description": "list of errors",
                "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.errors",
                "tags": [],
                "children": [
                  {
                    "name": "entity",
                    "dataType": "RECORD",
                    "description": "entity object",
                    "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.errors.entity",
                    "tags": [],
                    "children": []
                  },
                  {
                    "name": "message",
                    "dataType": "STRING",
                    "description": "error message",
                    "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.errors.message",
                    "tags": []
                  }
                ]
              },
              {
                "name": "paging",
                "dataType": "RECORD",
                "description": "paging",
                "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.paging",
                "tags": [],
                "children": [
                  {
                    "name": "total",
                    "dataType": "INT",
                    "description": "total pages",
                    "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.paging.total",
                    "tags": []
                  }
                ]
              }
            ]
          },
          "apiCollection": {
            "id": "6e9828e8-541f-4c47-8538-fbd0affd4831",
            "type": "apiCollection",
            "name": "tables",
            "fullyQualifiedName": "ometa_api_service.tables",
            "displayName": "tables",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/apiCollections/6e9828e8-541f-4c47-8538-fbd0affd4831"
          },
          "href": "http://localhost:8585/api/v1/apiEndpoints/6ae15891-eb35-4e94-997e-ce5c4b2f8edc",
          "owners": [],
          "tags": [],
          "service": {
            "id": "adfa8476-113f-4033-baf1-233d43ddc5e6",
            "type": "apiService",
            "name": "ometa_api_service",
            "fullyQualifiedName": "ometa_api_service",
            "displayName": "ometa_api_service",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/services/apiServices/adfa8476-113f-4033-baf1-233d43ddc5e6"
          },
          "serviceType": "Rest",
          "deleted": false
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "678",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:03:48 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "tags,owners",
            "include": "all"
          },
          "method": "get",
          "url": "/apiEndpoints/name/ometa_api_service.tables.listTables",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "id": "6ae15891-eb35-4e94-997e-ce5c4b2f8edc",
        "name": "listTables",
        "displayName": "List tables",
        "fullyQualifiedName": "ometa_api_service.tables.listTables",
        "description": "Get a list of tables",
        "version": 0.1,
        "updatedAt": 1743499317240,
        "updatedBy": "admin",
        "endpointURL": "https://docs.open-metadata.org/api/v1/tables",
        "requestMethod": "GET",
        "responseSchema": {
          "schemaType": "JSON",
          "schemaFields": [
            {
              "name": "data",
              "dataType": "RECORD",
              "description": "list of tables",
              "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data",
              "tags": [],
              "children": [
                {
                  "name": "id",
                  "dataType": "STRING",
                  "description": "ID of table",
                  "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data.id",
                  "tags": []
                },
                {
                  "name": "name",
                  "dataType": "STRING",
                  "description": "name of table",
                  "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data.name",
                  "tags": []
                },
                {
                  "name": "columns",
                  "dataType": "RECORD",
                  "description": "columns of table",
                  "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.data.columns",
                  "tags": [],
                  "children": []
                }
              ]
            },
            {
              "name": "errors",
              "dataType": "RECORD",
              "description": "list of errors",
              "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.errors",
              "tags": [],
              "children": [
                {
                  "name": "entity",
                  "dataType": "RECORD",
                  "description": "entity object",
                  "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.errors.entity",
                  "tags": [],
                  "children": []
                },
                {
                  "name": "message",
                  "dataType": "STRING",
                  "description": "error message",
                  "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.errors.message",
                  "tags": []
                }
              ]
            },
            {
              "name": "paging",
              "dataType": "RECORD",
              "description": "paging",
              "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.paging",
              "tags": [],
              "children": [
                {
                  "name": "total",
                  "dataType": "INT",
                  "description": "total pages",
                  "fullyQualifiedName": "ometa_api_service.tables.listTables.responseSchema.paging.total",
                  "tags": []
                }
              ]
            }
          ]
        },
        "apiCollection": {
          "id": "6e9828e8-541f-4c47-8538-fbd0affd4831",
          "type": "apiCollection",
          "name": "tables",
          "fullyQualifiedName": "ometa_api_service.tables",
          "displayName": "tables",
          "deleted": false,
          "href": "http://localhost:8585/api/v1/apiCollections/6e9828e8-541f-4c47-8538-fbd0affd4831"
        },
        "href": "http://localhost:8585/api/v1/apiEndpoints/6ae15891-eb35-4e94-997e-ce5c4b2f8edc",
        "owners": [],
        "tags": [],
        "service": {
          "id": "adfa8476-113f-4033-baf1-233d43ddc5e6",
          "type": "apiService",
          "name": "ometa_api_service",
          "fullyQualifiedName": "ometa_api_service",
          "displayName": "ometa_api_service",
          "deleted": false,
          "href": "http://localhost:8585/api/v1/services/apiServices/adfa8476-113f-4033-baf1-233d43ddc5e6"
        },
        "serviceType": "Rest",
        "deleted": false
      }
    }
  },
  "tableAPI": {
    "getTableList": {
      "request": {},
      "response": {
        "data": {
          "data": [
            {
              "id": "86d7cc07-429b-4894-a8ec-e0c708039b8a",
              "name": "Categories",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Categories",
              "version": 0.1,
              "updatedAt": 1743499291463,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/86d7cc07-429b-4894-a8ec-e0c708039b8a",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "category_id",
                  "dataType": "INT",
                  "dataLength": 100,
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Categories.category_id",
                  "tags": [],
                  "constraint": "PRIMARY_KEY",
                  "ordinalPosition": 1
                },
                {
                  "name": "name",
                  "dataType": "VARCHAR",
                  "dataLength": 100,
                  "dataTypeDisplay": "varchar(100)",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Categories.name",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 2
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/posts_db",
              "processedLineage": false
            },
            {
              "id": "8ccb497c-2cd9-4a5c-9a36-ffa429c4b4d3",
              "name": "Comments",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Comments",
              "version": 0.1,
              "updatedAt": 1743499291919,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/8ccb497c-2cd9-4a5c-9a36-ffa429c4b4d3",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "comment_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.comment_id",
                  "tags": [],
                  "constraint": "PRIMARY_KEY",
                  "ordinalPosition": 1
                },
                {
                  "name": "post_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.post_id",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 2
                },
                {
                  "name": "user_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.user_id",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 3
                },
                {
                  "name": "comment",
                  "dataType": "TEXT",
                  "dataTypeDisplay": "text",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.comment",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 4
                },
                {
                  "name": "created_at",
                  "dataType": "TIMESTAMP",
                  "dataTypeDisplay": "timestamp",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.created_at",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 5
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/posts_db",
              "processedLineage": false
            },
            {
              "id": "a3ff3c1a-5552-41ee-a131-54e39cfd9c38",
              "name": "Posts",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Posts",
              "version": 0.1,
              "updatedAt": 1743499291558,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/a3ff3c1a-5552-41ee-a131-54e39cfd9c38",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "post_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Posts.post_id",
                  "tags": [],
                  "constraint": "PRIMARY_KEY",
                  "ordinalPosition": 1
                },
                {
                  "name": "user_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Posts.user_id",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 2
                },
                {
                  "name": "category_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Posts.category_id",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 3
                },
                {
                  "name": "title",
                  "dataType": "VARCHAR",
                  "dataLength": 255,
                  "dataTypeDisplay": "varchar(255)",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Posts.title",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 4
                },
                {
                  "name": "content",
                  "dataType": "TEXT",
                  "dataTypeDisplay": "text",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Posts.content",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 5
                },
                {
                  "name": "created_at",
                  "dataType": "TIMESTAMP",
                  "dataTypeDisplay": "timestamp",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Posts.created_at",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 6
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/posts_db",
              "processedLineage": false
            },
            {
              "id": "e5884a02-2a30-4f75-b304-f0047540f80e",
              "name": "PostTags",
              "fullyQualifiedName": "mysql_sample.default.posts_db.PostTags",
              "description": "testdesc2",
              "version": 0.1,
              "updatedAt": 1743499292069,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/e5884a02-2a30-4f75-b304-f0047540f80e",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "post_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.PostTags.post_id",
                  "tags": [],
                  "ordinalPosition": 1
                },
                {
                  "name": "tag_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.PostTags.tag_id",
                  "tags": [],
                  "ordinalPosition": 2
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/posts_db",
              "processedLineage": false
            },
            {
              "id": "1e2e779a-d53c-46fb-93da-12cfeb50b569",
              "name": "Profiles",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Profiles",
              "version": 0.1,
              "updatedAt": 1743499292197,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/1e2e779a-d53c-46fb-93da-12cfeb50b569",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "profile_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Profiles.profile_id",
                  "tags": [],
                  "constraint": "PRIMARY_KEY",
                  "ordinalPosition": 1
                },
                {
                  "name": "user_id",
                  "dataType": "INT",
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Profiles.user_id",
                  "tags": [],
                  "constraint": "UNIQUE",
                  "ordinalPosition": 2
                },
                {
                  "name": "bio",
                  "dataType": "TEXT",
                  "dataTypeDisplay": "text",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Profiles.bio",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 3
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/posts_db",
              "processedLineage": false
            },
            {
              "id": "9d5fc4d1-9380-4187-a2b4-e4754ca6dca4",
              "name": "Tags",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Tags",
              "version": 0.1,
              "updatedAt": 1743499291301,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/9d5fc4d1-9380-4187-a2b4-e4754ca6dca4",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "tag_id",
                  "dataType": "INT",
                  "dataLength": 1,
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Tags.tag_id",
                  "tags": [],
                  "constraint": "PRIMARY_KEY",
                  "ordinalPosition": 1
                },
                {
                  "name": "name",
                  "dataType": "VARCHAR",
                  "dataLength": 100,
                  "dataTypeDisplay": "varchar(100)",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Tags.name",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 2
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/new_er_database",
              "processedLineage": false
            },
            {
              "id": "3e89a72e-1f82-4841-8afc-270392b91343",
              "name": "Users",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Users",
              "version": 0.1,
              "updatedAt": 1743499291354,
              "updatedBy": "admin",
              "href": "http://localhost:8585/api/v1/tables/3e89a72e-1f82-4841-8afc-270392b91343",
              "tableType": "Regular",
              "columns": [
                {
                  "name": "user_id",
                  "dataType": "INT",
                  "dataLength": 1,
                  "dataTypeDisplay": "int",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Users.user_id",
                  "tags": [],
                  "constraint": "PRIMARY_KEY",
                  "ordinalPosition": 1
                },
                {
                  "name": "username",
                  "dataType": "VARCHAR",
                  "dataLength": 50,
                  "dataTypeDisplay": "varchar(50)",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Users.username",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 2
                },
                {
                  "name": "email",
                  "dataType": "VARCHAR",
                  "dataLength": 100,
                  "dataTypeDisplay": "varchar(100)",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Users.email",
                  "tags": [],
                  "constraint": "NOT_NULL",
                  "ordinalPosition": 3
                },
                {
                  "name": "created_at",
                  "dataType": "TIMESTAMP",
                  "dataLength": 1,
                  "dataTypeDisplay": "timestamp",
                  "fullyQualifiedName": "mysql_sample.default.posts_db.Users.created_at",
                  "tags": [],
                  "constraint": "NULL",
                  "ordinalPosition": 4
                }
              ],
              "databaseSchema": {
                "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
                "type": "databaseSchema",
                "name": "posts_db",
                "fullyQualifiedName": "mysql_sample.default.posts_db",
                "displayName": "posts_db",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
              },
              "database": {
                "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
                "type": "database",
                "name": "default",
                "fullyQualifiedName": "mysql_sample.default",
                "displayName": "default",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
              },
              "service": {
                "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
                "type": "databaseService",
                "name": "mysql_sample",
                "fullyQualifiedName": "mysql_sample",
                "displayName": "mysql_sample",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
              },
              "serviceType": "Mysql",
              "deleted": false,
              "sourceUrl": "https://localhost:3306/new_er_database",
              "processedLineage": false
            }
          ],
          "paging": {
            "total": 7
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:08:17 GMT",
          "transfer-encoding": "chunked",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "limit": 10,
            "databaseSchema": "mysql_sample.default.posts_db",
            "include": "non-deleted"
          },
          "method": "get",
          "url": "/tables",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    },
    "getTableDetailsByFQN": {
      "request": {},
      "response": {
        "data": {
          "id": "8ccb497c-2cd9-4a5c-9a36-ffa429c4b4d3",
          "name": "Comments",
          "fullyQualifiedName": "mysql_sample.default.posts_db.Comments",
          "version": 0.1,
          "updatedAt": 1743499291919,
          "updatedBy": "admin",
          "href": "http://localhost:8585/api/v1/tables/8ccb497c-2cd9-4a5c-9a36-ffa429c4b4d3",
          "tableType": "Regular",
          "columns": [
            {
              "name": "comment_id",
              "dataType": "INT",
              "dataTypeDisplay": "int",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.comment_id",
              "tags": [],
              "constraint": "PRIMARY_KEY",
              "ordinalPosition": 1
            },
            {
              "name": "post_id",
              "dataType": "INT",
              "dataTypeDisplay": "int",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.post_id",
              "tags": [],
              "constraint": "NULL",
              "ordinalPosition": 2
            },
            {
              "name": "user_id",
              "dataType": "INT",
              "dataTypeDisplay": "int",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.user_id",
              "tags": [],
              "constraint": "NULL",
              "ordinalPosition": 3
            },
            {
              "name": "comment",
              "dataType": "TEXT",
              "dataTypeDisplay": "text",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.comment",
              "tags": [],
              "constraint": "NOT_NULL",
              "ordinalPosition": 4
            },
            {
              "name": "created_at",
              "dataType": "TIMESTAMP",
              "dataTypeDisplay": "timestamp",
              "fullyQualifiedName": "mysql_sample.default.posts_db.Comments.created_at",
              "tags": [],
              "constraint": "NULL",
              "ordinalPosition": 5
            }
          ],
          "tableConstraints": [
            {
              "constraintType": "FOREIGN_KEY",
              "columns": ["post_id"],
              "referredColumns": [
                "mysql_sample.default.posts_db.Posts.post_id"
              ],
              "relationshipType": "MANY_TO_ONE"
            },
            {
              "constraintType": "FOREIGN_KEY",
              "columns": ["user_id"],
              "referredColumns": [
                "mysql_sample.default.posts_db.Users.user_id"
              ],
              "relationshipType": "MANY_TO_ONE"
            }
          ],
          "owners": [],
          "databaseSchema": {
            "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
            "type": "databaseSchema",
            "name": "posts_db",
            "fullyQualifiedName": "mysql_sample.default.posts_db",
            "displayName": "posts_db",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586"
          },
          "database": {
            "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
            "type": "database",
            "name": "default",
            "fullyQualifiedName": "mysql_sample.default",
            "displayName": "default",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
          },
          "service": {
            "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
            "type": "databaseService",
            "name": "mysql_sample",
            "fullyQualifiedName": "mysql_sample",
            "displayName": "mysql_sample",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
          },
          "serviceType": "Mysql",
          "tags": [],
          "usageSummary": {
            "dailyStats": {
              "count": 0,
              "percentileRank": 0
            },
            "weeklyStats": {
              "count": 0,
              "percentileRank": 0
            },
            "monthlyStats": {
              "count": 0,
              "percentileRank": 0
            },
            "date": "2025-04-01"
          },
          "followers": [],
          "joins": {
            "startDate": "2025-03-02",
            "dayCount": 30,
            "columnJoins": [],
            "directTableJoins": []
          },
          "deleted": false,
          "sourceUrl": "https://localhost:3306/posts_db",
          "dataProducts": [],
          "votes": {
            "upVotes": 0,
            "downVotes": 0,
            "upVoters": [],
            "downVoters": []
          },
          "processedLineage": false
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "876",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:12:03 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "columns,followers,joins,tags,owners,dataModel,tableConstraints,schemaDefinition,domain,dataProducts,votes,extension,usageSummary,testSuite",
            "include": "all"
          },
          "method": "get",
          "url": "/tables/name/mysql_sample.default.posts_db.Comments",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "databaseAPI": {
    "getDatabaseSchemas": {
      "request": {},
      "response": {
        "data": {
          "id": "ec47f916-587a-4b8b-a4e3-21383c9d0586",
          "name": "posts_db",
          "fullyQualifiedName": "mysql_sample.default.posts_db",
          "dataProducts": [],
          "version": 0.1,
          "updatedAt": 1743499291258,
          "updatedBy": "admin",
          "href": "http://localhost:8585/api/v1/databaseSchemas/ec47f916-587a-4b8b-a4e3-21383c9d0586",
          "owners": [],
          "service": {
            "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
            "type": "databaseService",
            "name": "mysql_sample",
            "fullyQualifiedName": "mysql_sample",
            "displayName": "mysql_sample",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
          },
          "serviceType": "Mysql",
          "database": {
            "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
            "type": "database",
            "name": "default",
            "fullyQualifiedName": "mysql_sample.default",
            "displayName": "default",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf"
          },
          "usageSummary": {
            "dailyStats": {
              "count": 0,
              "percentileRank": 0
            },
            "weeklyStats": {
              "count": 0,
              "percentileRank": 0
            },
            "monthlyStats": {
              "count": 0,
              "percentileRank": 0
            },
            "date": "2025-04-01"
          },
          "tags": [],
          "deleted": false,
          "sourceUrl": "https://localhost:3306/posts_db",
          "votes": {
            "upVotes": 0,
            "downVotes": 0,
            "upVoters": [],
            "downVoters": []
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "488",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:08:17 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "owners,usageSummary,tags,domain,votes,extension,dataProducts",
            "include": "all"
          },
          "method": "get",
          "url": "/databaseSchemas/name/mysql_sample.default.posts_db",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    },
    "getDatabaseDetailsByFQN": {
      "request": {},
      "response": {
        "data": {
          "id": "161fca47-1836-47c1-bd66-3fa64a685cdf",
          "name": "default",
          "fullyQualifiedName": "mysql_sample.default",
          "dataProducts": [],
          "tags": [],
          "version": 0.1,
          "updatedAt": 1743499291192,
          "updatedBy": "admin",
          "href": "http://localhost:8585/api/v1/databases/161fca47-1836-47c1-bd66-3fa64a685cdf",
          "owners": [],
          "service": {
            "id": "68946f63-f6f6-4028-ae57-4ce886cfe3d4",
            "type": "databaseService",
            "name": "mysql_sample",
            "fullyQualifiedName": "mysql_sample",
            "displayName": "mysql_sample",
            "deleted": false,
            "href": "http://localhost:8585/api/v1/services/databaseServices/68946f63-f6f6-4028-ae57-4ce886cfe3d4"
          },
          "serviceType": "Mysql",
          "default": false,
          "deleted": false,
          "sourceUrl": "https://localhost:3306/posts_db",
          "votes": {
            "upVotes": 0,
            "downVotes": 0,
            "upVoters": [],
            "downVoters": []
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "362",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:07:58 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": "owners,tags,domain,votes,extension,dataProducts",
            "include": "all"
          },
          "method": "get",
          "url": "/databases/name/mysql_sample.default",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "storedProcedureAPI": {
    "getStoredProceduresList": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:08:17 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "databaseSchema": "mysql_sample.default.posts_db",
            "limit": 0
          },
          "method": "get",
          "url": "/storedProcedures",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "testAPI": {
    "getTestCaseExecutionSummary": {
      "request": {},
      "response": {
        "data": {
          "success": 4,
          "failed": 3,
          "aborted": 1,
          "queued": 0,
          "total": 8,
          "columnTestSummary": []
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "80",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:12:04 GMT",
          "deprecation": "Monday, October 30, 2024",
          "link": "api/v1/dataQuality/testSuites/dataQualityReport; rel=\"alternate\"",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {},
          "method": "get",
          "url": "/dataQuality/testSuites/executionSummary",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "success": 4,
        "failed": 3,
        "aborted": 1,
        "queued": 0,
        "total": 8,
        "columnTestSummary": []
      }
    }
  },
  "queryAPI": {
    "getQueriesList": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:12:03 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "limit": 0,
            "entityId": "8ccb497c-2cd9-4a5c-9a36-ffa429c4b4d3"
          },
          "method": "get",
          "url": "/queries",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "suggestionAPI": {
    "getSuggestionsList": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:12:03 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "entityFQN": "mysql_sample.default.posts_db.Comments",
            "limit": 10
          },
          "method": "get",
          "url": "/suggestions",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "serviceAPI": {
    "getServices": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:12:03 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "entityFQN": "mysql_sample.default.posts_db.Comments",
            "limit": 10
          },
          "method": "get",
          "url": "/suggestions",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "glossaryAPI": {
    "getGlossariesList": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:15:24 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwMjY4NywiZXhwIjoxNzQzNTA2Mjg3fQ.1qXRCrlCMat3fcRBrUEAstcl8MXjmBwDrQKYwQ06SWSrYIpLcUy_kduwIwtgNEmKFESoqJKldqEuit0VO-SlEiB4ddKc_gdSG4J5aNmWBEA6fs8oqR5p3btcdelu3mLdbTuK9oEULL6vk9RtggbFrCxERgpiOBRlnVHXI59_ZMBC7IiGz4iWgGfcTcIh3IKIW6vCtTU9Tq1sSa-89XqPGCYU4WSQz5Vzomdk3kdkuoC1EUbdzUrcwD6HHDRakp91ORngsqfAyXDia8WDbt9fZaSwUQ0K2KC0fPG9m0ogGkGE6aT1MIJCABQdgLG-sHu9ific1pGWbN0Bm7h-wqnS5Q"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "fields": ["owners", "tags", "reviewers", "votes", "domain"],
            "limit": 50
          },
          "method": "get",
          "url": "/glossaries",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "apiCollectionsAPI": {
    "getAPICollections": {
      "request": {
        "params": {
          "service": "sample_api_service",
          "fields": "owners,tags",
          "paging": {
            "limit": 15
          },
          "include": "non-deleted"
        }
      },
      "response": {
        "data": {
          "data": [
            {
              "id": "23f25ee3-99da-4dc1-b127-f509d87c155e",
              "name": "pet",
              "fullyQualifiedName": "sample_api_service.pet",
              "version": 0.1,
              "updatedAt": 1743499317004,
              "updatedBy": "admin",
              "endpointURL": "https://petstore3.swagger.io/#/pet",
              "href": "http://localhost:8585/api/v1/apiCollections/23f25ee3-99da-4dc1-b127-f509d87c155e",
              "owners": [],
              "tags": [],
              "service": {
                "id": "e4135824-b7e7-4e0d-a868-84e4fd34b9da",
                "type": "apiService",
                "name": "sample_api_service",
                "fullyQualifiedName": "sample_api_service",
                "displayName": "sample_api_service",
                "deleted": false,
                "href": "http://localhost:8585/api/v1/services/apiServices/e4135824-b7e7-4e0d-a868-84e4fd34b9da"
              },
              "serviceType": "Rest",
              "deleted": false
            }
          ],
          "paging": {
            "total": 1
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-encoding": "gzip",
          "content-length": "352",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:17:08 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwNjIyNywiZXhwIjoxNzQzNTA5ODI3fQ.bDwb4rDbJuHI43dH8euXvE7dUwfAiaQo2rtUjKfha6lPFM9iuHJfrEo8hZBZGueHkWNloWA1-bhAw0RsEsYc_kznfDGgC0Jx7rRDAHUr7k3IIYnDKOsiVmWxTF4gsw9eCDNY-IMyq3mf0HQLX5i5VxbxPQXLAAZhYY5ifxumehXuVKZJfIHK8K6RklIaSHwm1VVF528DwT7rntSI1pniPLC-nCl4lO0iV1AhJIMzqSmrO4D8iy_H800AQugByUYBllgdW_3D2_3f5-cSpmxH6vOP0HLs8RQHB47OcV-XRg6iyjZ7Nlquq0oF4ArdFHgGh9i9VCFRxbXTQGvV4CUYyg"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "service": "sample_api_service",
            "fields": "owners,tags",
            "include": "non-deleted",
            "limit": 15
          },
          "method": "get",
          "url": "/apiCollections",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {
        "data": [
          {
            "id": "23f25ee3-99da-4dc1-b127-f509d87c155e",
            "name": "pet",
            "fullyQualifiedName": "sample_api_service.pet",
            "version": 0.1,
            "updatedAt": 1743499317004,
            "updatedBy": "admin",
            "endpointURL": "https://petstore3.swagger.io/#/pet",
            "href": "http://localhost:8585/api/v1/apiCollections/23f25ee3-99da-4dc1-b127-f509d87c155e",
            "owners": [],
            "tags": [],
            "service": {
              "id": "e4135824-b7e7-4e0d-a868-84e4fd34b9da",
              "type": "apiService",
              "name": "sample_api_service",
              "fullyQualifiedName": "sample_api_service",
              "displayName": "sample_api_service",
              "deleted": false,
              "href": "http://localhost:8585/api/v1/services/apiServices/e4135824-b7e7-4e0d-a868-84e4fd34b9da"
            },
            "serviceType": "Rest",
            "deleted": false
          }
        ],
        "paging": {
          "total": 1
        }
      }
    }
  },
  "workflowAPI": {
    "getWorkflowInstancesForApplication": {
      "request": {},
      "response": {
        "data": {
          "data": [],
          "paging": {
            "total": 0
          }
        },
        "status": 200,
        "statusText": "OK",
        "headers": {
          "connection": "close",
          "content-length": "32",
          "content-type": "application/json",
          "date": "Tue, 01 Apr 2025 11:17:08 GMT",
          "vary": "Accept-Encoding",
          "x-powered-by": "Express"
        },
        "config": {
          "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
          },
          "adapter": ["xhr", "http", "fetch"],
          "transformRequest": [null],
          "transformResponse": [null],
          "timeout": 0,
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
          "maxContentLength": -1,
          "maxBodyLength": -1,
          "env": {},
          "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImFkbWluIiwicm9sZXMiOlsiQWRtaW4iXSwiZW1haWwiOiJhZG1pbkBvcGVuLW1ldGFkYXRhLm9yZyIsImlzQm90IjpmYWxzZSwidG9rZW5UeXBlIjoiT01fVVNFUiIsImlhdCI6MTc0MzUwNjIyNywiZXhwIjoxNzQzNTA5ODI3fQ.bDwb4rDbJuHI43dH8euXvE7dUwfAiaQo2rtUjKfha6lPFM9iuHJfrEo8hZBZGueHkWNloWA1-bhAw0RsEsYc_kznfDGgC0Jx7rRDAHUr7k3IIYnDKOsiVmWxTF4gsw9eCDNY-IMyq3mf0HQLX5i5VxbxPQXLAAZhYY5ifxumehXuVKZJfIHK8K6RklIaSHwm1VVF528DwT7rntSI1pniPLC-nCl4lO0iV1AhJIMzqSmrO4D8iy_H800AQugByUYBllgdW_3D2_3f5-cSpmxH6vOP0HLs8RQHB47OcV-XRg6iyjZ7Nlquq0oF4ArdFHgGh9i9VCFRxbXTQGvV4CUYyg"
          },
          "baseURL": "/api/v1",
          "paramsSerializer": {},
          "params": {
            "startTs": 1742947200000,
            "endTs": 1743506228955,
            "workflowDefinitionName": "DayOneExperienceWorkflow",
            "entityLink": "<#E::apiService::sample_api_service>"
          },
          "method": "get",
          "url": "/governance/workflowInstances",
          "allowAbsoluteUrls": true
        },
        "request": {}
      },
      "data": {}
    }
  },
  "ingestionPipelineAPI": {
    "getAirflowStatus": {}
  }
}
